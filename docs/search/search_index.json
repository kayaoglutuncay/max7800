{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>For ordering information, mechanical and electrical characteristics for the MAX78000 family of devices refer to the device data sheet. For information on the Arm\u00ae Cortex\u00ae-M4 with FPU core, please refer to the Arm Cortex-M4 Processor Technical Reference Manual.</p>"},{"location":"#related-documentation","title":"Related Documentation","text":"<p>The MAX78000 data sheet and errata are available from the Analog Devices website, MAX78000</p>"},{"location":"#document-conventions","title":"Document Conventions","text":""},{"location":"#number-notations","title":"Number Notations","text":"Notation Description 0xNN Hexadecimal (Base 16) numbers are preceded by the prefix 0x. 0bNN Binary (Base 2) numbers are preceded by the prefix 0b. NN Decimal (Base 10) numbers are represented using no additional prefix or suffix. V[X:Y] Bit field representation of a register, field, or value (V) covering Bit X to Bit Y. Bit N Bits are numbered in little-endian format; that is, the least significant bit of a number is referred to as bit 0. [0xNNNN] An address offset from a base address is shown in bracket form."},{"location":"#register-and-field-access-definitions","title":"Register and Field Access Definitions","text":"<p>All the fields that are accessible by user software have distinct access capabilities. Each register table contained in this user guide has an access type defined for each field. The definition of each field access type is presented in Table 1-1.</p> <p>Table 1-1: Field Access Definitions </p> Access Type Description RO ReservedThis access type is reserved for static fields. Reads of this field return the reset value. Writes are ignored. DNM Reserved. Do Not ModifySoftware must first read this field and write the same value whenever writing to this register. R Read OnlyReads of this field return a value. Writes to the field do not affect device operation. W Write OnlyReads of this field return indeterminate values. Writes to the field change the field's state to the value written and can affect device operation.          R/W Unrestricted Read/WriteReads of this field return a value. Writes to the field change the field's state to the value written and can affect device operation.          RC Read to ClearReading this field clears the field to 0. Writes to the field do not affect device operation. RS Read to SetReading this field sets the field to 1. Writes to the field do not affect device operation. R/W0 Read/Write 0 OnlyWriting 0 to this field sets the field to 0. Writing 1 to the field does not affect device operation. R/W1 Read/Write 1 OnlyWriting 1 to this field sets the field to 1. Writing 0 to the field does not affect device operation. R/W1C Read/Write 1 to ClearWriting 1 to this field clears this field to 0. Writing 0 to the field does not affect device operation. R/W0S Read/Write 0 to SetWriting 0 to this field sets this field to 1. Writing 1 to the field does not affect device operation."},{"location":"#register-lists","title":"Register Lists","text":"<p>Each peripheral includes a table listing all of the peripheral's registers. The register table includes the offset, register name, and description of each register. The offset shown in the table must be added to the peripheral's base address in Table 3-3 to get the register's absolute address.</p> <p>Table 1-2: Example Registers </p> Offset Register Name Description [0x0000] REG_NAME0 Name 0 Register"},{"location":"#register-detail-tables","title":"Register Detail Tables","text":"<p>Each register in a peripheral includes a detailed register table, as shown in Table 1-3. The first row of the register detail table includes the register's description, the register's name, and the register's offset from the base peripheral address. The second row of the table is the header for the bit fields represented in the register. The third and subsequent rows of the table include the bit or bit range, the field name, the bit's or field's access, the reset value, and a description of the field. All registers are 32-bits unless specified otherwise. Reserved bits and fields are shown as Reserved in the description column. See Table 1-1 for a list of all access types for each bit and field.</p> <p>Table 1-3: Example Name 0 Register </p> Name 0 REG_NAME0 [0x0000] Bits Name Access Reset Description 31:16 - RO - Reserved 15:0 field_name R/W 0 Field name description     Description of field_name."},{"location":"debug-access-port/","title":"Debug Access Port","text":"<p>The device provides an Arm DAP that supports debugging during application development. The DAP enables an external debugger to access the device. The DAP is a standard Arm CoreSight\u2122 serial wire debug port and uses a two-pin serial interface (SWDCLK and SWDIO) to communicate.</p>"},{"location":"debug-access-port/#instances","title":"Instances","text":"<p>The DAP interface communicates through the serial wire debug (SWD), shown in Table 8-1.</p> <p>Table 8-1: MAX78000 DAP Instances </p> Instance Pin Alternate Function SWD Signal DAP P0.28 AF1 SWDIO P0.29 AF1 SWDCLK"},{"location":"debug-access-port/#access-control","title":"Access Control","text":""},{"location":"debug-access-port/#factory-disabled-dap","title":"Factory Disabled DAP","text":"<p>Device versions that do not provide a DAP interface have GCR_SYSST.icelock = 1 set at the factory, permanently disabling the DAP interface. No software action is needed to disable the DAP on these devices.</p>"},{"location":"debug-access-port/#software-accessible-dap","title":"Software Accessible DAP","text":"<p>Device versions that provide a DAP (GCR_SYSST.icelock = 0) always have their interface(s) enabled and running unless the software explicitly sets the GCR_SYSST.swd_dis field to 1. The read-only field GCR_SYSST.icelock is cleared to 0, and the software has read and write access to the GCR_SYSST.swd_dis field. The GCR_SYSST.swd_dis field resets to 0 after every POR to allow access to the DAP during development.</p> <p>The software can disable the DAP by setting the GCR_SYSST.swd_dis field to 1. The only practical application for disabling the DAP is to release the interface pins to operate as standard GPIO or in one of the supported alternate function modes in a development environment. Customers can use device versions with the DAP enabled for development but should only use device versions with the factory disabled DAP in a final product.</p>"},{"location":"debug-access-port/#pin-configuration","title":"Pin Configuration","text":"<p>SWD signals in GPIO and alternate function matrices determine which GPIO pins are associated with a signal. It is unnecessary to configure a pin for an alternate function to use the DAP following a POR.</p> <p>By default, the pin associated with the bidirectional SWDIO signal is configured as a GPIO high-impedance input after any POR. While the DAP is in use, a pullup resistor should be connected to the SWDIO pin, as shown in Table 8-1. The pullup ensures the signal is in a known state when control of the SWDIO pin is transferred between the host and target. The pullup resistor should be removed if the associated pin is used as a GPIO to avoid unnecessary current consumption.</p>"},{"location":"flash-controller/","title":"Flash Controller (FLC)","text":"<p>The MAX78000 flash controller manages read, write, and erase accesses to the internal flash and provides the following features:</p> <ul> <li>Up to 512KB total internal flash memory</li> <li>64 pages</li> <li>8,192 bytes per page</li> <li>2,048 words by 128 bits per page</li> <li>128-bit data reads and writes</li> <li>Page erase and mass erase support</li> <li>Write protection</li> </ul>"},{"location":"flash-controller/#instances","title":"Instances","text":"<p>The device includes one instance of the FLC. The 512KB of internal flash memory is programmable through the serial wire debug interface (in-system) or directly with software (in-application).</p> <p>The flash is organized as an array of 2,048 words by 128 bits, or 8,192 bytes per page. Table 7-1 shows the page start address and page end address of the internal flash memory.</p> <p>Table 7-1: MAX78000 Internal Flash Memory Organization </p> Instance Page Number Size (per page) Start Address End Address FLC0 1 8,192 Bytes 0x1000 0000 0x1000 1FFF 2 8,192 Bytes 0x1000 2000 0x1000 3FFF 3 8,192 Bytes 0x1000 4000 0x1000 5FFF 4 8,192 Bytes 0x1000 6000 0x1000 7FFF ... ... ... ... 63 8,192 Bytes 0x1007 C000 0x1007 DFFF 64 8,192 Bytes 0x1007 E000 0x1007 FFFF"},{"location":"flash-controller/#usage","title":"Usage","text":"<p>The flash controller manages write and erase operations for internal flash memory and provides a lock mechanism to prevent unintentional writes to the internal flash. In-application and in-system programming, page erase, and mass erase operations are supported.</p>"},{"location":"flash-controller/#clock-configuration","title":"Clock Configuration","text":"<p>The FLC requires a 1MHz internal clock. See Oscillator Sources for details. Use the FLC clock divisor to generate f<sub>FLCn_CLK</sub> = 1MHz, as shown in Equation 7-1. If using the IPO as the system clock, the FLC_CLKDIV.clkdiv should be set to 100 (0x64).</p> <p>Equation 7-1: FLC Clock Frequency </p> <p>$$ f_{\\text{FLCn_CLK}} = \\frac{f_{\\text{SYS_CLK}}}{\\text{FLCn_CLKDIV} \\cdot \\text{clkdiv}} = 1 \\, \\text{MHz} $$</p>"},{"location":"flash-controller/#lock-protection","title":"Lock Protection","text":"<p>A locking mechanism prevents accidental memory writes and erases. All write and erase operations require the FLC_CTRL.unlock field to be set to 2 before starting the operation. Writing any other value to the FLC_CTRL.unlock field results in:</p> <ol> <li>The flash instance remaining locked, or</li> <li>The flash instance is locked from the unlocked state.</li> </ol> <p>Note: If a write, page erase, or mass erase operation is started, and the unlock code was not set to 2, the flash controller hardware sets the access fail flag, FLC_INTR.af, to indicate an access violation occurred.</p>"},{"location":"flash-controller/#flash-write-width","title":"Flash Write Width","text":"<p>The FLC supports write widths of 128-bits only. The target address bits FLC_ADDR[3:0] are ignored, resulting in 128-bit address alignment.</p> <p>Table 7-2: Valid Addresses Flash Writes </p> FLC_ADDR[31:0] Bit Number 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 128-bit Write 1 0 0 0 0 0 0 0 0 0 0 0 x x x x x x x x x x x x x x x x 0 0 0 0"},{"location":"flash-controller/#flash-write","title":"Flash Write","text":"<p>Writes to a flash address are only successful if the target address is already in its erased state. Perform the following steps to write to a flash memory address:</p> <ol> <li>If desired, enable the flash controller interrupts by setting the FLC_INTR.afie and FLC_INTR.doneie bits.</li> <li>Read the FLC_CTRL.pend bit until it returns 0.</li> <li>Configure the FLC_CLKDIV.clkdiv field to achieve a 1MHz frequency based on the selected SYS_CLK frequency.</li> <li>Set the FLC_ADDR register to a valid target address. See Table 7-2 for details.</li> <li> <p>Set FLC_DATA3, FLC_DATA2, FLC_DATA1, and FLC_DATA0 to the data to write.</p> <p>a. FLC_DATA3 is the most significant word, and FLC_DATA0 is the least significant word.</p> <p>i. Each word of the data to write follows the little-endian format where the least significant byte of the word is stored at the lowest-numbered byte, and the most significant byte is stored at the highest-numbered byte.</p> </li> <li> <p>Set the FLC_CTRL.unlock field to 2 to unlock the flash.</p> </li> <li> <p>Set the FLC_CTRL.wr field to 1.</p> <p>a. The hardware automatically clears this field when the write operation is complete.</p> </li> <li> <p>The FLC_INTR.done field is set to 1 by hardware when the write completes.</p> <p>a. An interrupt is generated if the FLC_INTR.doneie field is set to 1.</p> </li> <li> <p>If an error occurred, the FLC_INTR.af field is set to 1 by hardware. An interrupt is generated if the FLC_INTR.afie field is set to 1.</p> </li> <li>Set the FLC_CTRL.unlock field to any value other than 2 to re-lock the flash.</li> </ol> <p>Note: Code execution can occur within the same flash instance as targeted programming.</p>"},{"location":"flash-controller/#page-erase","title":"Page Erase","text":"<p>CAUTION: Care must be taken not to erase the page from which the application software is currently executing.</p> <p>Perform the following to erase a page of a flash memory instance:</p> <ol> <li>If desired, enable flash controller interrupts by setting the FLC_INTR.afie and FLC_INTR.doneie bits.</li> <li>Read the FLC_CTRL.pend bit until it returns 0.</li> <li>Configure FLC_CLKDIV.clkdiv to match the SYS_CLK frequency.</li> <li>Set the FLC_ADDR register to an address within the target page to be erased. FLC_ADDR[12:0] is ignored by the FLC to ensure the address is page-aligned.</li> <li>Set FLC_CTRL.unlock to 2 to unlock the flash instance.</li> <li>Set FLC_CTRL.erase_code to 0x55 for page erase.</li> <li>Set FLC_CTRL.pge to 1 to start the page erase operation.</li> <li>The FLC_CTRL.pend bit is set by the flash controller while the page erase is in progress, and the FLC_CTRL.pge and FLC_CTRL.pend are cleared by the flash controller when the page erase is complete.</li> <li>FLC_INTR.done is set by hardware when the page erase completes, and if an error occurred, the FLC_INTR.af flag is set. These bits generate a flash interrupt if the interrupt enable bits are set.</li> <li>Set FLC_CTRL.unlock to any value other than 2 to re-lock the flash instance.</li> </ol>"},{"location":"flash-controller/#mass-erase","title":"Mass Erase","text":"<p>CAUTION: Care must be taken not to erase the flash from which application software is currently executing.</p> <p>Mass erase clears the internal flash memory on an instance basis. Perform the following steps to mass erase a single flash memory instance:</p> <ol> <li>Read the FLC_CTRL.pend bit until it returns 0.</li> <li>Configure FLC_CLKDIV.clkdiv to match the SYS_CLK frequency.</li> <li>Set FLC_CTRL.unlock to 2 to unlock the internal flash.</li> <li>Set FLC_CTRL.erase_code to 0xAA for mass erase.</li> <li>Set FLC_CTRL.me to 1 to start the mass erase operation.</li> <li>The FLC_CTRL.pend bit is set by the flash controller while the mass erase is in progress, and the FLC_CTRL.me and FLC_CTRL.pend are cleared by the flash controller when the mass erase is complete.</li> <li>FLC_INTR.done is set by the flash controller when the mass erase completes, and if an error occurred, the FLC_INTR.af flag is set. These bits generate a flash interrupt if the interrupt enable bits are set.</li> <li>Set FLC_CTRL.unlock to any value other than 2 to re-lock the flash instance.</li> </ol>"},{"location":"flash-controller/#registers","title":"Registers","text":"<p>See Table 3-3 for the base address of this peripheral/module. See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Note: The FLC registers are reset only on a POR. System reset, soft reset, and peripheral reset do not affect the FLC register values.</p> <p>Table 7-3: Flash Controller Register Summary </p> Offset Register Name Access Description [0x0000] FLC_ADDR R/W Flash Controller Address Pointer Register [0x0004] FLC_CLKDIV R/W Flash Controller Clock Divisor Register [0x0008] FLC_CTRL R/W Flash Controller Control Register [0x0024] FLC_INTR R/W Flash Controller Interrupt Register [0x0030] FLC_DATA0 R/W Flash Controller Data Register 0 [0x0034] FLC_DATA1 R/W Flash Controller Data Register 1 [0x0038] FLC_DATA2 R/W Flash Controller Data Register 2 [0x003C] FLC_DATA3 R/W Flash Controller Data Register 3 [0x0040] FLC_ACTRL R/W Flash Controller Access Control Register [0x0080] FLC_WELR0 R/W Flash Write/Erase Lock 0 Register [0x0088] FLC_WELR1 R/W Flash Write/Erase Lock 1 Register [0x0090] FLC_RLR0 R/W Flash Read Lock 0 Register [0x0098] FLC_RLR1 R/W Flash Read Lock 1 Register"},{"location":"flash-controller/#register-details","title":"Register Details","text":"<p>Table 7-4: Flash Controller Address Pointer Register </p> Flash Controller Address Pointer FLC_ADDR [0x0000] Bits Name Access Reset Description 31:0 addr R/W 0x1000 0000 Flash AddressThis field contains the target address for a write operation. A valid internal flash memory address is required for all write operations. <p>Table 7-5: Flash Controller Clock Divisor Register </p> Flash Controller Clock Divisor FLC_CLKDIV [0x0004] Bits Name Access Reset Description 31:8 - RO - Reserved 7:0 clkdiv R/W 0x64 Flash Controller Clock DivisorThe APB clock is divided by the value in this field to generate the FLCn peripheral clock, f<sub>FLC_CLK</sub>. The FLC peripheral clock must equal 1MHz. The default on POR, system reset, and watchdog reset is 100, resulting in f<sub>FLC_CLK</sub> = 1MHz when IPO is the system oscillator. The FLC peripheral clock is only used during erase and program functions and not during read functions. See Clock Configuration for additional details. <p>Table 7-6: Flash Controller Control Register </p> Flash Controller Control FLC_CTRL [0x0008] Bits Name Access Reset Description 31:28 unlock R/W 0 Flash UnlockWrite the unlock code, 2, before any flash write or erase operation to unlock the flash. Writing any other value to this field locks the internal flash.          2: Flash unlock code         27:26 - RO - Reserved 25 lve R/W 0 Low Voltage EnableSet this field to 1 to enable low voltage operation for the flash memory.                      0: Low voltage operation disabled (Default).             1: Low voltage operation enabled.          24 pend RO 0 Flash Busy FlagWhen this field is set, writes to all flash registers, except the FLC_INTR register, are ignored by the flash controller. This bit is cleared by hardware once the flash becomes accessible.         <p>Note:If the flash controller is busy (FLC_CTRL.pend = 1), reads, writes, and erase operations are not allowed and result in an access failure (FLC_INTR.af = 1).</p>              0: Low voltage operation disabled (Default).             1: Low voltage operation enabled.          23:16 - RO 0 Reserved 15:8 erase_code R/W 0 Erase CodeBefore an erase operation, this field must be set to 0x55 for a page erase or 0xAA for a mass erase. The flash must be unlocked before setting the erase code. This field is automatically cleared after the erase operation is complete.                      0x00: Erase disabled.             0x55: Page erase code.             0xAA: Mass erase code.          7:3 - RO 0 Reserved 2 pge R/W1 0 Page EraseWrite a 1 to this field to initiate a page erase at the address in FLC_ADDR.addr. The flash must be unlocked before attempting a page erase. See FLC_CTRL.unlock for details.         <p>The flash controller hardware clears this bit when a page erase operation is complete.</p>          0: Normal operation.         1: Write a 1 to initiate a page erase. If this field reads 1, a page erase operation is in progress.          1 me R/W1 0 Mass EraseWrite a 1 to this field to initiate a mass erase of the internal flash memory. The flash must be unlocked before attempting a mass erase. See FLC_CTRL.unlock for details. The flash controller hardware clears this bit when the mass erase operation completes.                      0: Normal operation.             1: Initiate mass erase.          0 wr R/W1O 0 WriteIf this field reads 0, no write operation is pending for the flash. To initiate a write operation, set this bit to 1, and the flash controller writes to the address set in the FLC_ADDR register.                      0: Normal operation.             1: Write 1 to initiate a write operation. If this field reads 1, a write operation is in progress.          <p>Note: This field is protected and cannot be set to 0 by application software.</p> <p>Table 7-7: Flash Controller Interrupt Register </p> Flash Controller Interrupt FLC_INTR [0x0024] Bits Name Access Reset Description 31:10 - RO 0 Reserved 9 afie R/W 0 Flash Access Fail Interrupt EnableSet this bit to 1 to enable interrupts on flash access failures.                  0: Disabled         1: Enabled          8 doneie R/W 0 Flash Operation Complete Interrupt EnableSet this bit to 1 to enable interrupts on flash operations complete.                  0: Disabled         1: Enabled          7:2 - RO 0 Reserved 1 af R/W0C 0 Flash Access Fail Interrupt FlagThis bit is set when an attempt is made to write or erase the flash while the flash is busy or locked. Only hardware can set this bit to 1. Writing a 1 to this bit has no effect. This bit is cleared by writing a 0.           0: No access failure has occurred.         1: Access failure occurred.          0 done R/W0C 0 Flash Operation Complete Interrupt Flag        This flag is automatically set by hardware after a flash write or erase operation completes.           0: Operation not complete or not in process.         1: Flash operation complete.          <p>Table7-8: Flash Controller Data 0 Register </p> Flash Controller Data 0 FLC_DATA0 [0x0030] Bits Name Access Reset Description 31:0 data R/W 0 Flash Data 0        Flash data for bits 31:0.         <p>Table 7-9: Flash Controller Data Register 1 </p> Flash Controller Data 1 FLC_DATA1 [0x0030] Bits Name Access Reset Description 31:0 data R/W 0 Flash Data 1        Flash data for bits 63:32.         <p>Table 7-10: Flash Controller Data Register 2 </p> Flash Controller Data 2 FLC_DATA2 [0x0030] Bits Name Access Reset Description 31:0 data R/W 0 Flash Data 2        Flash data for bits 95:64.         <p>Table 7-11: Flash Controller Data Register 3 </p> Flash Controller Data 3 FLC_DATA3 [0x0030] Bits Name Access Reset Description 31:0 data R/W 0 Flash Data 3        Flash data for bits 127:96.         <p>Table 7-12: Flash Controller Access Control Register </p> Flash Controller Access Control FLC_ACTRL [0x0040] Bits Name Access Reset Description 31:0 actrl R/W 0 Access Control        When this register is written with the access control sequence, the information block can be accessed. See Information Block Flash Memory for details.         <p>Table 7-13: Flash Write/Lock 0 Register </p> Flash Write/Lock 0 FLC_WELR0 [0x0080] Bits Name Access Reset Description 31:0 welr0 R/W1C 0xFFFF FFFF Flash Write/Lock Bit        Each bit in this register maps to a page of the internal flash. FLC_WELR0[0] maps to page 0 of the flash, and FLC_WELR0[31] maps to page 31. Each flash page is 8,192 bytes. Write a 1 to a bit position in this register, and the corresponding page of flash is immediately locked. The page protection can only be unlocked by an external reset or a POR.           0: The corresponding page of flash is write protected.         1: The corresponding page of flash is not write protected.          <p>Table 7-14: Flash Write/Lock 1 Register </p> Flash Write/Lock 1 FLC_WELR1 [0x0088] Bits Name Access Reset Description 31:0 welr1 R/W1C 0xFFFF FFFF Flash Write/Lock Bit        Each bit in this register maps to a page of the internal flash. FLC_WELR1[0] maps to page 32 of the flash, and FLC_WELR1[31] maps to page 63 of flash. Each flash page is 8,192 bytes. Write a 1 to a bit position in this register, and the corresponding page of flash is immediately locked. The page protection can only be unlocked by an external reset or a POR.           0: The corresponding flash page is write protected.         1: The corresponding flash page is not write protected.          <p>Table 7-15: Flash Read Lock 0 Register </p> Flash Read Lock 0 FLC_RLR0 [0x0090] Bits Name Access Reset Description 31:0 rlr0 R/W1C 0xFFFF FFFF Read Lock Bit        Each bit in this register maps to a page of the internal flash. FLC_RLR0[0] maps to page 0 of the flash, and FLC_RLR0[31] maps to page 31 of flash. Each flash page is 8,192 bytes. Write a 1 to a bit position in this register, and the corresponding page of flash is immediately read protected. The page\u2019s read protection can only be unlocked by an external reset or a POR.           0: The corresponding flash page is read protected.         1: The corresponding flash page is not read protected.          <p>Table 7-16: Flash Read Lock 1 Register </p> Flash Read Lock 1 FLC_RLR1 [0x0098] Bits Name Access Reset Description 31:0 rlr1 R/W1C 0xFFFF FFFF Read Lock Bit        Each bit in this register maps to a page of the internal flash. FLC_RLR1[0] maps to page 32 of the flash, and FLC_RLR1[31] maps to page 63 of flash. Each flash page is 8,192 bytes. Write a 1 to a bit position in this register, and the corresponding page of flash is immediately read protected. The page\u2019s read protection can only be unlocked by an external reset or a POR.           0: The corresponding flash page is read protected.          1: The corresponding flash page is not read protected."},{"location":"gpio/","title":"General-Purpose I/O and Alternate Function Pins (GPIO)","text":"<p>General-purpose I/O (GPIO) pins can be individually configured to operate in a digital I/O mode or in an alternate function (AF) mode, which maps a signal associated with an enabled peripheral to that GPIO. Each GPIO supports dynamic switching between I/O mode and alternate function mode. Configuring a pin for an alternate function supersedes its use as a digital I/O; however, the state of the GPIO is still readable through the GPIOn_IN register.</p> <p>The electrical characteristics of a GPIO pin are identical whether the pin is configured as an I/O or as an alternate function, except where explicitly noted in the data sheet electrical characteristics tables.</p> <p>The GPIO are divided logically into ports of 32 pins. Package variants may not implement all pins of a specific 32-bit GPIO port.</p> <p>Each port pin has an interrupt function that can be independently enabled and configured as a level-sensitive or edge-sensitive interrupt. All GPIOs of a given port share the same interrupt vector as detailed in GPIO Interrupt Handling.</p> <p>Note: The register set used to control the GPIO are identical across multiple Analog Devices microcontrollers; however, the behavior of several registers varies depending on the specific device. The behavior of the registers should not be assumed to be the same from one device to a different device. Specifically the registers GPIOn_PADCTRL0, GPIOn_PADCTRL1, GPIOn_HYSEN, GPIOn_SRSEL, GPIOn_DS0, GPIOn_DS1, and GPIOn_VSSEL are device-dependent in their usage. GPIO3 is controlled differently and has different features than the other GPIO ports in the MAX78000. See MCR_GPIO3_CTRL for details on using GPIO3.</p> <p>The features for each GPIO pin include:</p> <ul> <li>Full CMOS outputs with configurable drive strength settings</li> <li>Input modes/options:<ul> <li>High impedance</li> <li>Weak pullup/pulldown</li> <li>Strong pullup/pulldown</li> </ul> </li> <li>Output data can be from the GPIOn_OUT register or an enabled peripheral.</li> <li>Input data can be read from the GPIOn_IN input register or the enabled peripheral.</li> <li>Bit set and clear registers for efficient bit-wise write access to the pins and configuration registers.</li> <li>Wake from low-power modes using edge-triggered inputs.</li> <li>Selectable GPIO voltage supply for GPIO0, GPIO1, and GPIO2:<ul> <li>V<sub>DDIO</sub></li> <li><p>V<sub>DDIOH</sub> <li>Selectable interrupt events:<ul> <li>Level triggered low</li> <li>Level triggered high</li> <li>Edge triggered rising edge.</li> <li>Edge triggered falling edge.</li> <li>Edge triggered rising and falling edge.</li> </ul> </li> <li>All GPIO pins default to input mode with weak-pullup during power-on-reset events.</li>"},{"location":"gpio/#instances","title":"Instances","text":"<p>Table 6\u20111 shows the number of GPIO available on each IC package. Some packages and part numbers do not implement all bits of a 32-bit GPIO port. Register fields corresponding to unimplemented GPIO contain indeterminate values and should not be modified.</p> <p>Table6-1: MAX78000 GPIO Pin Count </p> Package GPIO PINS 81-CTBGA GPIO0[30:0] 31 GPIO1[9:0] 10 GPIO2[7:0] 8 GPIO3[1:0]<sup>+</sup> 2 <p>Note: See Power Sequencer Registers (PWRSEQ) for details on using GPIO3.</p> <p>Note: Refer to the device data sheet for descriptions of each GPIO port pin's alternate functions.</p>"},{"location":"gpio/#configuration","title":"Configuration","text":"<p>Each device pin is individually configurable as a GPIO or an alternate function. The correct alternate function setting must be selected for each pin of a given multi-pin peripheral for proper operation.</p>"},{"location":"gpio/#power-on-reset-configuration","title":"Power-On-Reset Configuration","text":"<p>All I/O default to GPIO mode during a POR event as high impedance inputs except the SWDIO and SWDCLK pins. After a POR, the SWD is enabled by default with AF1 selected by hardware. See the Bootloader chapter for exceptions.</p> <p>Following a POR event, all GPIO, except device pins that have the SWDIO and SWDCLK function, are configured with the following default settings:</p> <ul> <li>GPIO mode enabled<ul> <li>GPIOn_EN0.en[pin]\u00a0=\u00a01</li> <li>GPIOn_EN1.en[pin] =\u00a00</li> <li>GPIOn_EN2.en[pin]\u00a0=\u00a00</li> </ul> </li> <li>Pullup/pulldown disabled, I/O in Hi-Z mode<ul> <li>GPIOn_PADCTRL0.mode[pin] =\u00a00</li> <li>GPIOn_PADCTRL1.mode[pin]</li> </ul> </li> <li>Output mode disabled<ul> <li>GPIOn_OUTEN.en[pin]\u00a0=\u00a00</li> </ul> </li> <li>Interrupt disabled<ul> <li>GPIOn_INTEN.en[pin]\u00a0=\u00a00</li> </ul> </li> </ul>"},{"location":"gpio/#serial-wire-debug-configuration","title":"Serial Wire Debug Configuration","text":"<p>Perform the following steps to configure the SWDIO and SWDCLK device pins for SWD mode:</p> <ol> <li> <p>Set the device pin P0.28 for AF1 mode:</p> <p>a. GPIOn_EN0.config[28] = 0</p> <p>b. GPIOn_EN1.config[28] = 0</p> <p>c. GPIOn_EN2.config[28] = 0</p> </li> <li> <p>Set device pin P0.29 for AF1 mode:</p> <p>a. GPIOn_EN0.config[29] = 0</p> <p>b. GPIOn_EN1.config[29] = 0</p> <p>c. GPIOn_EN2.config[29] = 0</p> </li> </ol> <p>Note: To use the SWD pins in GPIO mode, set the desired GPIO pins for SWD AF and disable the SWD (GCR_SYSCTRL.swd_dis\u00a0=\u00a01).</p>"},{"location":"gpio/#pin-function-configuration","title":"Pin Function Configuration","text":"<p>Table 6\u20112 depicts the bit settings for the GPIOn_EN0, GPIOn_EN1, and GPIOn_EN2 registers to configure a GPIO port pin's function. Each of the bits within these registers represents the configuration of a single pin on the GPIO port. For example, GPIO0_EN0.config[25], GPIO0_EN1.config[25], and GPIO0_EN2.config[25] all represent configuration for device pin P0.25. See Table 6\u20115 for a detailed example of how each of these bits applies to each GPIO device pin.</p> <p>Table 6-2: MAX78000 GPIO Pin Function Configuration </p> MODE GPIOn_EN0.config[pin] GPIOn_EN1.config[pin] GPIOn_EN2.config[pin] AF1 0 0 0 AF2 0 1 0 I/O (transition to AF1) 1 0 0 I/O (transition to AF2) 1 1 0"},{"location":"gpio/#input-mode-configuration","title":"Input Mode Configuration","text":"<p>Table 6\u20113 depicts the bit settings for the digital I/O input mode. Each of the bits within these registers represents the configuration of a single pin on the GPIO port. For example, GPIO0_PADCTRL1.config[25], GPIO0_PADCTRL0.config[25], GPIO0_PS.pull_sel[25], and GPIO0_VSSEL.v_sel[25] all represent configuration for device pin P0.25. See Table 6\u20118 for a detailed example of how each of these bits applies to each GPIO device pin. Refer to the device data sheet for details of specific electrical characteristics.</p> <p>Table 6-3: MAX78000 Input Mode Configuration </p> Input Mode Mode Select Pullup/Pulldown Strength Power Supply GPIOn_PADCTRL1.config[pin] GPIOn_PADCTRL0.config[pin] GPIOn_PS.pull_sel[pin] GPIOn_VSSEL.v_sel[pin] High-impedance 0 0 N/A N/A Weak Pullup to V<sub>DDIO</sub> (1M\u03a9) 0 1 0 0 Strong Pullup to V<sub>DDIO</sub> (25K\u03a9) 0 1 1 0 Weak Pulldown to V<sub>DDIOH</sub> (1M\u03a9) 1 0 0 1 Strong Pulldown to V<sub>DDIOH</sub> (25K\u03a9) 1 0 1 1 Reserved 1 1 N/A N/A"},{"location":"gpio/#output-mode-configuration","title":"Output Mode Configuration","text":"<p>Table 6\u20114 shows the configuration options for digital I/O in output mode. Each of the bits within these registers represents the configuration of a single pin on the GPIO port. For example,GPIO2_DS0.config[25], GPIO2_DS1.config[25], and GPIO2_VSSEL.v_sel[25] all represent configuration for GPIO port 2 pin 25 (device pin P0.25). See Table 6\u20118 for a detailed example of how each of these bits applies to each GPIO device pin. Refer to the device data sheet for details of specific electrical characteristics.</p> <p>Table 6-4: MAX78000 Output Mode Configuration </p> Input Mode Drive Strength Power Supply GPIOn_DS1.config[pin] GPIOn_DS0.config[pin] GPIOn_VSSEL.v_sel[pin] Output Drive Strength 0, V<sub>DDIO</sub> Supply 0 0 0 Output Drive Strength 1, V<sub>DDIO</sub> Supply 0 1 0 Output Drive Strength 2, V<sub>DDIO</sub> Supply 1 0 0 Output Drive Strength 3, V<sub>DDIO</sub> Supply 1 1 0 Output Drive Strength 0, V<sub>DDIOH</sub> Supply 0 0 1 Output Drive Strength 1, V<sub>DDIOH</sub> Supply 0 1 1 Output Drive Strength 2, V<sub>DDIOH</sub> Supply 1 0 1 Output Drive Strength 3, V<sub>DDIOH</sub> Supply 1 1 1 <p>Each GPIO port is assigned a dedicated interrupt vector, as shown in Table 6\u20119.</p>"},{"location":"gpio/#reference-tables","title":"Reference Tables","text":"<p>The tables in this section provide example references for register bit assignment to configure a device's GPIO port 0 pins. Other GPIO port pins are configured similarly using the respective GPIO1 or GPIO2 registers.</p> <p>Table 6-5: MAX78000 GPIO0 Alternate Function Configuration Reference </p> Device Pin Alternate Function Configuration Bits P0.0 GPIO0_EN0.config[0] GPIO0_EN1.config[0] GPIO0_EN2.config[0] P0.1 GPIO0_EN0.config[1] GPIO0_EN1.config[1] GPIO0_EN2.config[1] \u2026 \u2026 \u2026 \u2026 P0.30 GPIO0_EN0.config[30] GPIO0_EN1.config[30] GPIO0_EN2.config[30] P0.31 GPIO0_EN0.config[31] GPIO0_EN1.config[31] GPIO0_EN2.config[31] <p>Table 6-6: MAX78000 GPIO0 Output/Input Configuration Reference </p> Device Pin GPIO Output Enable GPIO Output Write GPIO Input Enable GPIO Input Read P0.0 GPIO0_OUTEN.en[0] GPIO0_OUT.level[0] GPIO0_INEN.en[0] GPIO0_IN.level[0] P0.1 GPIO0_OUTEN.en[1] GPIO0_OUT.level[1] GPIO0_INEN.en[1] GPIO0_IN.level[1] \u2026 \u2026 \u2026 \u2026 \u2026 P0.30 GPIO0_OUTEN.en[30] GPIO0_OUT.level[30] GPIO0_INEN.en[30] GPIO0_IN.level[30] P0.31 GPIO0_OUTEN.en[31] GPIO0_OUT.level[31] GPIO0_INEN.en[31] GPIO0_IN.level[31] <p>Table 6-7: MAX78000 GPIO0 Interrupt Configuration Reference </p> Device Pin Enable Status Dual Edge Polarity Trigger Wakeup P0.0 GPIO0_INTEN.en[0] GPIO0_INTFL.config[0] GPIO0_DUALEDGE.dualedge[0] GPIO0_INTPOL.pol[0] GPIO0_INTMODE.gpio_intmode[0] GPIO0_WKEN.en[0] P0.1 GPIO0_INTEN.en[1] GPIO0_INTFL.config[1] GPIO0_DUALEDGE.config[1] GPIO0_INTPOL.pol[1] GPIO0_INTMODE.gpio_intmode[1] GPIO0_WKEN.en[1] \u2026 \u2026 \u2026 \u2026 \u2026 \u2026 \u2026 P0.30 GPIO0_INTEN.en[30] GPIO0_INTFL.int[30] GPIO0_DUALEDGE.gpio_dualedge[30] GPIO0_INTPOL.pol[30] GPIO0_INTMODE.gpio_intmode[30] GPIO0_WKEN.en[30] P0.31 GPIO0_INTEN.en[31] GPIO0_INTFL.int[31] GPIO0_DUALEDGE.gpio_dualedge[31] GPIO0_INTPOL.pol[31] GPIO0_INTMODE.gpio_intmode[31] GPIO0_WKEN.en[31] <p>Table 6-8: MAX78000 GPIO0 Pullup/Pulldown/Drive Strength/Voltage Configuration Reference </p> Device Pin Pullup/Pulldown/Strength Select Drive Strength Voltage P0.0 GPIO0_PADCTRL0.config[0] GPIO0_PADCTRL1.config[0] GPIO0_PS.pull_sel[0] GPIO0_DS0.config[0] GPIO0_DS1.config[0] GPIOn_VSSEL.v_sel[0] P0.1 GPIO0_PADCTRL0.config[1] GPIO0_PADCTRL1.config[1] GPIO0_PS.pull_sel[1] GPIO0_DS0.config[1] GPIO0_DS1.config[1] GPIOn_VSSEL.v_sel[1] \u2026 \u2026 \u2026 \u2026 \u2026 \u2026 \u2026 P0.30 GPIO0_PADCTRL0.config[30] GPIO0_PADCTRL1.config[30] GPIO0_PS.pull_sel[30] GPIO0_DS0.config[30] GPIO0_DS1.config[30] GPIOn_VSSEL.v_sel[30] P0.31 GPIO0_PADCTRL0.config[31] GPIO0_PADCTRL1.config[31] GPIO0_PS.pull_sel[31] GPIO0_DS0.config[31] GPIO0_DS1.config[31] GPIOn_VSSEL.v_sel[31]"},{"location":"gpio/#usage","title":"Usage","text":""},{"location":"gpio/#reset-state","title":"Reset State","text":"<p>During a power-on-reset event, each GPIO is reset to the default input mode with the weak pullup resistor enabled as follows:</p> <ol> <li>The GPIO configuration enable bits shown in Table 6\u20112 are set to I/O (transition to AF1) mode.</li> <li>Input mode is enabled (GPIOn_INEN.en[pin] = 1).</li> <li>High impedance mode enabled (GPIOn_PADCTRL1.config[pin] = 0, GPIOn_PADCTRL0.config[pin] = 0), pullup and pulldown disabled.</li> <li>Output mode disabled (GPIOn_OUTEN.en[pin] = 0).</li> <li>Interrupt disabled (GPIOn_INTEN.en[pin] = 0).</li> </ol>"},{"location":"gpio/#input-mode-configuration_1","title":"Input Mode Configuration","text":"<p>Perform the following steps to configure one or more pins for input mode:</p> <ol> <li>Set the GPIO Configuration Enable bits shown in Table 6\u20112 to any one of the I/O mode settings.</li> <li>Configure the electrical characteristics of the pin as desired, as shown in Table 6\u20113.</li> <li>Enable the input buffer connected to the GPIO pin by setting GPIOn_INEN.en[pin] to 1.</li> <li>Read the input state of the pin using the GPIOn_IN.level[pin] field.</li> </ol>"},{"location":"gpio/#output-mode-configuration_1","title":"Output Mode Configuration","text":"<p>Perform the following steps to configure a pin for output mode:</p> <ol> <li>Set the GPIO Configuration Enable bits shown in Table 6\u20112 to any one of the I/O mode settings.</li> <li>Configure the electrical characteristics of the pin as desired, as shown in Table 6\u20114.</li> <li>Set the output logic high or logic low using the GPIOn_OUT.level[pin] bit.</li> <li>Enable the output buffer for the pin by setting GPIOn_OUTEN.en[pin] to 1.</li> </ol>"},{"location":"gpio/#alternate-function-configuration","title":"Alternate Function Configuration","text":"<p>Most GPIO support one or more alternate functions selected with the GPIO configuration enable bits shown in Table 6\u20112. The bits that select the AF must only be changed while the pin is in one of the I/O modes (GPIOn_EN0 = 1). The specific I/O mode must match the desired AF. For example, if a transition to AF1 is desired, first select the setting corresponding to I/O (transition to AF1). Then enable the desired mode by selecting the AF1 mode.</p> <ol> <li>Set the GPIO configuration enable bits shown in Table 6\u20112 to the I/O mode corresponding to the desired new AF setting. For example, select \"I/O (transition to AF1)\" if switching to AF1. Switching between different I/O mode settings does not affect the state or electrical characteristics of the pin.</li> <li>Configure the electrical characteristics of the pin. See Table 6\u20113 if the assigned alternate function uses the pin as an input. See Table 6\u20114 if the assigned alternate function uses the pin as an output.</li> <li>Set the GPIO Configuration Enable bits shown in Table 6\u20112 to the desired alternate function.</li> </ol>"},{"location":"gpio/#configuring-gpio-external-interrupts","title":"Configuring GPIO (External) Interrupts","text":"<p>Each GPIO pin supports external interrupt events when the GPIO is configured for I/O mode and the input mode is enabled. If the GPIO is configured for an alternate peripheral function, the interrupts are peripheral-controlled.</p> <p>GPIO interrupts can be individually enabled and configured as an edge or level triggered independently on a pin-by-pin basis. The edge trigger can be a rising, falling, or both transitions.</p> <p>Each GPIO pin has a dedicated status bit in its corresponding GPIOn_INTFL register. A GPIO interrupt occurs when the status bit transitions from 0 to 1 if the corresponding bit is set in the corresponding GPIOn_INTEN register. Note that the interrupt status bit is always set when the current interrupt configuration event occurs, but an interrupt is only generated if explicitly enabled.</p> <p>The following procedure details the steps for enabling ACTIVE mode interrupt events for a GPIO pin:</p> <ol> <li>Disable interrupts by setting the GPIOn_INTEN.en[pin] field to 0. Disabling interrupts prevents any new interrupts on the pin from triggering but does not clear previously triggered (pending) interrupts. The application can disable all interrupts for a GPIO port by writing 0 to the GPIOn_INEN register. To maintain previously enabled interrupts, read the GPIOn_INEN register and save the state before setting the register to 0.</li> <li>Clear pending interrupts by writing 1 to the GPIOn_INTFL_CLR.clr[pin] bit.</li> <li>Configure the pin for the desired interrupt event.</li> <li>Set GPIOn_INTMODE.mode[pin] to select the desired interrupt.</li> <li>For level triggered interrupts, the interrupt triggers on an input high (GPIOn_INTPOL.pol[pin] = 0) or input low level.</li> <li>For edge triggered interrupts, the interrupt triggers on a transition from low to high(GPIOn_INTPOL.pol[pin] = 0) or high to low (GPIOn_INTPOL.pol[pin] = 1).</li> <li> <p>Optionally set GPIOn_DUALEDGE.de_en[pin] to 1 to trigger on both the rising and falling edges of the input signal.</p> <p>a. Set GPIOn_INTEN.en[pin] to 1 to enable the interrupt for the pin.</p> </li> </ol>"},{"location":"gpio/#gpio-interrupt-handling","title":"GPIO Interrupt Handling","text":"<p>Each GPIO port is assigned a dedicated interrupt vector, as shown in Table 6\u20119.</p> <p>Table 6-9: MAX78000 GPIO Port Interrupt Vector Mapping </p> GPIO Interrupt Source GPIO Interrupt Status Register CM4 Interrupt Vector Number RV32 Interrupt Vector Number GPIO Interrupt Vector GPIO0[31:0] GPIOn_INTFL 40 25 GPIO0_IRQn GPIO1[9:0] GPIOn_INTFL 41 26 GPIO1_IRQn GPIO2[7:0] GPIOn_INTFL 42 27 GPIO2_IRQn <p>To handle GPIO interrupts in your interrupt vector handler, complete the following steps:</p> <ol> <li>Read the GPIOn_INTFL register to determine the GPIO pin that triggered the interrupt.</li> <li>Complete interrupt tasks associated with the interrupt source pin (application-defined).</li> <li>Clear the interrupt flag in the GPIOn_INTFL register by writing a 1 to the GPIOn_INTFL_CLR bit position that triggered the interrupt; this also clears and rearms the edge detectors for edge-triggered interrupts.</li> <li>Return from the interrupt vector handler.</li> </ol>"},{"location":"gpio/#using-gpio-for-wake-up-from-low-power-modes","title":"Using GPIO for Wake Up from Low-Power Modes","text":"<p>Low-power modes support an asynchronous wake up from edge-triggered interrupts on the GPIO ports. Level triggered interrupts are not supported for wake up because the system clock must be active to detect levels.</p> <p>A single wake-up interrupt vector, GPIOWAKE_IRQn, is assigned for all pins of all GPIO ports. When the GPIO wake-up event occurs, the application software must interrogate each GPIOn_INTFL register to determine which external port pin caused the wake-up event.</p> <p>Table 6-10: MAX78000 GPIO Wakeup Interrupt Vector </p> GPIO Wake Interrupt Source GPIO Wake Interrupt Status Register CM4 Interrupt Vector Number RV32 Interrupt Vector Number GPIO Wake Interrupt Vector GPIO0 GPIO0_INTFL 70 6 GPIOWAKE_IRQn GPIO1 GPIO1_INTFL 70 6 GPIOWAKE_IRQn GPIO2 GPIO2_INTFL 70 6 GPIOWAKE_IRQn <p>To enable a low-power mode to wake up from SLEEP, DEEPSLEEP, LPM, UPM, and BACKUP using an external GPIO interrupt, complete the following steps:</p> <ol> <li>Clear pending interrupt flags by writing a logic 1 to GPIOn_INTFL_CLR.clr[pin].</li> <li>Activate the GPIO wake-up function by writing a logic 1 to GPIOn_WKEN.we[pin].</li> <li>Configure the power manager to use the GPIO as a wake-up source by GCR_PM.gpio_we field to 1.</li> </ol>"},{"location":"gpio/#registers","title":"Registers","text":"<p>See Table 3-3 for the base address of this peripheral/module. If multiple instances of the peripheral are provided, each instance has its own independent set of the registers shown in Table 6\u201111. Register names for a specific instance are defined by replacing \"n\" with the instance number. For example, a register PERIPHERALn_CTRL resolves to PERIPHERAL0_CTRL and PERIPHERAL1_CTRL for instances 0 and 1, respectively.</p> <p>See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Table 6-11: GPIO Register Summary </p> Offset Register Description [0x0000] GPIOn_EN0 GPIO Port n Configuration Enable Bit 0 Register [0x0004] GPIOn_EN0_SET GPIO Port n Configuration Enable Atomic Set Bit 0 Register [0x0008] GPIOn_EN0_CLR GPIO Port n Configuration Enable Atomic Clear Bit 0 Register [0x000C] GPIOn_OUTEN GPIO Port n Output Enable Register [0x0010] GPIOn_OUTEN_SET GPIO Port n Output Enable Atomic Set Register [0x0014] GPIOn_OUTEN_CLR GPIO Port n Output Enable Atomic Clear Register [0x0018] GPIOn_OUT GPIO Port n Output Register [0x001C] GPIOn_OUT_SET GPIO Port n Output Atomic Set Register [0x0020] GPIOn_OUT_CLR GPIO Port n Output Atomic Clear Register [0x0024] GPIOn_IN GPIO Port n Input Register [0x0028] GPIOn_INTMODE GPIO Port n Interrupt Mode Register [0x002C] GPIOn_INTPOL GPIO Port n Interrupt Polarity Register [0x0030] GPIOn_INEN GPIO Port n Input Enable Register [0x0034] GPIOn_INTEN GPIO Port n Interrupt Enable Register [0x0038] GPIOn_INTEN_SET GPIO Port n Interrupt Enable Atomic Set Register [0x003C] GPIOn_INTEN_CLR GPIO Port n Interrupt Enable Atomic Clear Register [0x0040] GPIOn_INTFL GPIO Port n Interrupt Status Register [0x0048] GPIOn_INTFL_CLR GPIO Port n Interrupt Clear Register [0x004C] GPIOn_WKEN GPIO Port n Wakeup Enable Register [0x0050] GPIOn_WKEN_SET GPIO Port n Wakeup Enable Atomic Set Register [0x0054] GPIOn_WKEN_CLR GPIO Port n Wakeup Enable Atomic Clear Register [0x005C] GPIOn_DUALEDGE GPIO Port n Interrupt Dual Edge Mode Register [0x0060] GPIOn_PADCTRL0 GPIO Port n Pad Configuration 1 Register [0x0064] GPIOn_PADCTRL1 GPIO Port n Pad Configuration 2 Register [0x0068] GPIOn_EN1 GPIO Port n Configuration Enable Bit 1 Register [0x006C] GPIOn_EN1_SET GPIO Port n Configuration Enable Atomic Set Bit 1 Register [0x0070] GPIOn_EN1_CLR GPIO Port n Configuration Enable Atomic Clear Bit 1 Register [0x0074] GPIOn_EN2 GPIO Port n Configuration Enable Bit 2 Register [0x0078] GPIOn_EN2_SET GPIO Port n Configuration Enable Atomic Set Bit 2 Register [0x007C] GPIOn_EN2_CLR GPIO Port n Configuration Enable Atomic Clear Bit 2 Register [0x00A8] GPIOn_HYSEN GPIO Port n Hysteresis Enable Register [0x00AC] GPIOn_SRSEL GPIO Port n Slew Rate Select Register [0x00B0] GPIOn_DS0 GPIO Port n Output Drive Strength Bit 0 Register [0x00B4] GPIOn_DS11 GPIO Port n Output Drive Strength Bit 1 Register [0x00B8] GPIOn_PS GPIO Port n Pulldown/Pullup Strength Select Register [0x00C0] GPIOn_VSSEL GPIO Port n Voltage Select Register"},{"location":"gpio/#register-details","title":"Register Details","text":"<p>Table 6-12: GPIO Port n Configuration Enable Bit 0 Register </p> GPIO Port n Configuration Enable Bit 0 GPIOn_EN0 [0x0000] Bits Name Access Reset Description 31:0 config R/W 1 GPIO Configuration Enable Bit 0         In conjunction with the bits in Table 6\u20112, this field configures the corresponding device pin for digital I/O or an alternate function mode. This field can be modified directly by writing to this register or indirectly through GPIOn_EN0_SET or GPIOn_EN0_CLR.          <p>Table 6\u20115 depicts a detailed example of how each of these bits applies to each of the GPIO device pins</p> <p>Note: Some GPIO are not implemented in all devices. Bits associated with unimplemented GPIO should not be changed from their default value.</p> <p>Note: This register setting does not affect the input and interrupt functionality of the associated pin.</p> <p>Table 6-13: GPIO Port n Configuration Enable Atomic Set Bit 0 Register </p> GPIO Port n Configuration Enable Atomic Set Bit 0 Register GPIOn_EN0_SET [0x0004] Bits Name Access Reset Description 31:0 set R/W1 0 GPIO Configuration Enable Atomic Set Bit 0              Writing 1 to one or more bits sets the corresponding bits in the GPIOn_EN0 register.              0: No effect.             1: Corresponding bits in GPIOn_EN0 register set to 1.              <p>Table 6-14: GPIO Port n Configuration Enable Atomic Clear Bit 0 Register </p> GPIO Port n Configuration Enable Atomic Clear Bit 0 GPIOn_EN0_CLR [0x0008] Bits Name Access Reset Description 31:0 clr R/W1 0 GPIO Configuration Enable Atomic Clear Bit 0              Writing 1 to one or more bits sets the corresponding bits in the GPIOn_EN0 register.              0: No effect.             1: Corresponding bits in GPIOn_EN0 register cleared to 0.              <p>Table 6-15: GPIO Port n Output Enable Register </p> GPIO Port n Output Enable GPIOn_OUTEN [0x000C] Bits Name Access Reset Description 31:0 en R/W 0 GPIO Output Enable         Set bit to 1 to enable the output driver for the corresponding GPIO pin. A bit can be enabled directly by writing to this register or indirectly through GPIOn_OUTEN_SET or GPIOn_OUTEN_CLR.          0: Pin is set to input mode; output driver disabled.         1: Pin is set to output mode.          <p>Table 6-16: GPIO Port n Output Enable Atomic Set Register </p> GPIO Port n Output Enable Atomic Set GPIOn_OUTEN_SET [0x0010] Bits Name Access Reset Description 31:0 set R/W1 0 GPIO Output Enable Atomic Set         Writing 1 to one or more bits sets the corresponding bits in the GPIOn_OUTEN register.          0: No effect.         1: Corresponding bits in GPIOn_OUTEN set to 1. <p>Table 6-17: GPIO Port n Output Enable Atomic Clear Register </p> GPIO Port n Output Enable Atomic Clear GPIOn_OUTEN_CLR [0x0014] Bits Name Access Reset Description 31:0 clr R/W1 0 GPIO Output Enable Atomic Clear Writing 1 to one or more bits sets the corresponding bits in the GPIOn_OUTEN register.          0: No effect.         1: Corresponding bits in GPIOn_OUTEN cleared to 0. <p>Table 6-18: GPIO Port n Output Register </p> GPIO Port n Output GPIOn_OUT [0x0018] Bits Name Access Reset Description 31:0 level R/W 0 GPIO OutputSet the corresponding output pin high or low.                  0: Drive the corresponding output pin low (logic 0).         1: Drive the corresponding output pin high (logic 1).          <p>Table 6-19: GPIO Port n Output Atomic Set Register </p> GPIO Port n Output Atomic Set GPIOn_OUT_SET [0x001C] Bits Name Access Reset Description 31:0 set R/W1 0 GPIO Output Atomic SetWriting 1 to one or more bits sets the corresponding bits in the GPIOn_OUT register.          0: No effect.         1: Corresponding bits in GPIOn_OUTEN set to 1.          <p>Table 6-20: GPIO Port n Output Atomic Clear Register </p> GPIO Port n Output Atomic Clear GPIOn_OUT_CLR [0x0020] Bits Name Access Reset Description 31:0 clr WO 0 GPIO Output Atomic Clear         Writing 1 to one or more bits clears the corresponding bits in the GPIOn_OUT register.          0: No effect.         1: Corresponding bits in GPIOn_OUTEN cleared to 0.          <p>Table 6-21: GPIO Port n Input Register </p> GPIO Port n Input GPIOn_IN [0x0024] Bits Name Access Reset Description 31:0 level RO - GPIO Input Returns the state of the input pin only if the corresponding bit in the GPIOn_INEN register is set. The state is not affected by the pin's configuration as an output or alternate function.          0: Input pin low         1: Input pin high. <p>Table 6-22: GPIO Port n Interrupt Mode Register </p> GPIO Port n Interrupt Mode GPIOn_INTMODE [0x0028] Bits Name Access Reset Description 31:0 mode R/W 0 GPIO Interrupt Mode         Selects interrupt mode for the corresponding GPIO pin.          0: Level triggered interrupt.         1: Edge triggered interrupt.          <p>Note: This bit has no effect unless the corresponding bit in the         GPIOn_INTEN register is set.</p> <p>Table 6-23: GPIO Port n Interrupt Polarity Register </p> GPIO Port n Interrupt Polarity GPIOn_INTPOL [0x002C] Bits Name Access Reset Description 31:0 pol R/W 0 GPIO Interrupt Polarity         Interrupt polarity selection bit for the corresponding GPIO pin.         Level triggered mode (GPIOn_INTMODE.mode[pin] =\u00a00):              0: Input low (logic 0) triggers interrupt.             1: Input high (logic 1) triggers interrupt.                       Edge triggered mode         (GPIOn_INTMODE.mode[pin] =\u00a01):                  0: Falling edge triggers interrupt         1: Rising edge triggers interrupt.          <p>Note: This bit has no effect unless the corresponding bit in the         GPIOn_INTEN register is set.</p> <p>Table 6-24: GPIO Port n Input Enable Register </p> GPIO Port n Input Enable GPIOn_INEN [0x0030] Bits Name Access Reset Description 31:0 en R/W 1 GPIO Input Enable This field connects the corresponding input pad to the specified input pin for reading the pin state using the GPIOn_IN register.              0: Input not connected.             1: Input pin connected to the pad for reading through GPIOn_IN register.              <p>Table 6-25: GPIO Port n Interrupt Enable Register </p> GPIO Port n Interrupt Enable GPIOn_INTEN [0x0034] Bits Name Access Reset Description 31:0 en R/W 0 GPIO Interrupt Enable         Enable or disable the interrupt for the corresponding GPIO pin.          0: Disabled.         1: Enabled.          <p>Note: Disabling a GPIO interrupt does not clear pending interrupts         for the associated pin. Use the GPIOn_INTFL_CLR register to clear         pending interrupts.</p> <p>Table 6-26: GPIO Port n Interrupt Enable Atomic Set Register </p> GPIO Port Interrupt Enable Atomic Set GPIOn_INTEN_SET [0x0038] Bits Name Access Reset Description 31:0 set R/W1 0 GPIO Interrupt Enable Atomic Set         Writing 1 to one or more bits sets the corresponding bits in the GPIOn_INTEN register.          0: No effect.         1: Corresponding bits in GPIOn_INTEN register set to 1.          <p>Table 6-27: GPIO Port n Interrupt Enable Atomic Clear Register </p> GPIO Port Interrupt Enable Atomic Clear GPIOn_INTEN_CLR [0x003C] Bits Name Access Reset Description 31:0 clr R/W1 0 GPIO Interrupt Enable Atomic Clear         Writing 1 to one or more bits clears the corresponding bits in the GPIOn_INTEN register.          0: No effect.         1: Corresponding bits in GPIOn_INTEN register cleared to 0.          <p>Table 6-28: GPIO Port n Interrupt Status Register </p> GPIO Port Interrupt Status GPIOn_INTFL [0x0040] Bits Name Access Reset Description 31:0 if RO 0 GPIO Interrupt Status         An interrupt is pending for the associated GPIO pin when this bit reads 1.          0: No GPIO interrupt is pending for the associated GPIO pin.         1: A GPIO interrupt is pending for the associated GPIO pin.          <p>Note: Write a 1 to the corresponding bit in the GPIOn_INTFL_CLR         register to clear the interrupt pending status flag.</p> <p>Table 6-29: GPIO Port n Interrupt Clear Register </p> GPIO Port Interrupt Clear GPIOn_INTFL_CLR [0x0048] Bits Name Access Reset Description 31:0 clr R/W1C 0 GPIO Interrupt Clear         Write 1 to clear the associated interrupt status (GPIOn_INTFL).          0: No effect on the associated GPIOn_INTFL flag.         1: Clear the associated interrupt pending flag in the GPIOn_INTFL register.          <p>Table 6-30: GPIO Port n Wakeup Enable Register </p> GPIO Port n Wakeup Enable GPIOn_WKEN [0x004C] Bits Name Access Reset Description 31:0 we R/W 0 GPIO Wakeup Enable         Enable the I/O as a wake-up source from SLEEP, DEEPSLEEP, and BACKUP.          0: The GPIO pin is not enabled as a wake-up source from low-power modes.         1: The GPIO pin is enabled as a wake-up source from low-power modes.          <p>Table 6-31: GPIO Port n Wakeup Enable Atomic Set Register </p> GPIO Port Wakeup Enable Atomic Set GPIOn_WKEN_SET [0x0050] Bits Name Access Reset Description 31:0 set R/W1 0 GPIO Wakeup Enable Atomic Set         Writing 1 to one or more bits sets the corresponding bits in the GPIOn_WKEN register.          0: No effect.         1: Corresponding bits in GPIOn_WKEN register set to 1.          <p>Table 6-32: GPIO Port n Wakeup Enable Atomic Clear Register </p> GPIO Port Wakeup Enable Atomic Clear GPIOn_WKEN_CLR [0x0054] Bits Name Access Reset Description 31:0 clr R/W1 0 GPIO Wakeup Enable Atomic Clear         Writing 1 to one or more bits clears the corresponding bits in the GPIOn_WKEN register.          0: No effect.         1: Corresponding bits in GPIOn_WKEN register cleared to 0.          <p>Table 6-33: GPIO Port n Interrupt Dual Edge Mode Register </p> GPIO Port n Interrupt Dual Edge Mode GPIOn_DUALEDGE [0x005C] Bits Name Access Reset Description 31:0 de_en R/W 0 GPIO Interrupt Dual-Edge Mode Select         Setting this bit triggers interrupts on both the rising and falling edges of the corresponding GPIO if the associated GPIOn_INTMODE bit is set to edge-triggered. The associated polarity (GPIOn_INTPOL) setting has no effect when this bit is set.          0: Disable         1: Enable          <p>Table 6-34: GPIO Port n Pad Configuration 1 Register </p> GPIO Port n Pad Configuration 1 GPIOn_PADCTRL0 [0x0060] Bits Name Access Reset Description 31:0 config R/W 0 GPIO Pad Configuration 1         Input mode configuration for the associated GPIO pin. Input mode selection and the choice of a weak or strong pullup, or weak or strong pulldown resistor, are described in Table 6\u20113.          <p>Table 6-35: GPIO Port n Pad Configuration 2 Register </p> GPIO Port n Pad Configuration 2 GPIOn_PADCTRL1 [0x0064] Bits Name Access Reset Description 31:0 config R/W 0 GPIO Pad Configuration 2         Input mode configuration for the associated GPIO pin. Input mode selection and the choice of a weak or strong pullup, or weak or strong pulldown resistor, are described in Table 6\u20113.          <p>Table 6-36: GPIO Port n Configuration Enable Bit 1 Register </p> GPIO Port n Configuration Enable Bit 1 GPIOn_EN1 [0x0068] Bits Name Access Reset Description 31:0 config R/W 0 GPIO Configuration Enable Bit 1         In conjunction with the bits in Table 6-2, this field configures the corresponding device pin for digital I/O or an alternate function mode. This field can be modified directly by writing to this register or indirectly through the GPIOn_EN1_SET or GPIOn_EN1_CLR registers.         <p>Table 6\u20115 depicts a detailed example of how each of these bits applies to each of the GPIO device pins</p> <p>Note: Some GPIO are not implemented in all devices. The bits associated with unimplemented GPIO should not be changed from their default value.</p> <p>Note: This register setting does not affect input and interrupt functionality of the associated pin.</p> <p>Table 6-37: GPIO Port n Configuration Enable Atomic Set Bit 1 Register </p> GPIO Port n Configuration Enable Atomic Set Bit 1 GPIOn_EN1_SET [0x006C] Bits Name Access Reset Description 31:0 set R/W1 0 GPIO Configuration Enable Atomic Set Bit 1         Writing 1 to one or more bits sets the corresponding bits in the GPIOn_EN1 register.          0: No effect.         1: Corresponding bits in GPIOn_EN1 register set to 1.          <p>Table 6-38: GPIO Port n Configuration Enable Atomic Clear Bit 1 Register </p> GPIO Port n Configuration Enable Atomic Clear Bit 1 GPIOn_EN1_CLR [0x0070] Bits Name Access Reset Description 31:0 clr R/W1 0 GPIO Configuration Enable Atomic Clear Bit 1         Writing 1 to one or more bits clears the corresponding bits in the GPIOn_EN1 register.              0: No effect.             1: Corresponding bits in GPIOn_EN1 register cleared to 0.          <p>Table 6-39: GPIO Port n Configuration Enable Bit 2 Register </p> GPIO Port n Configuration Enable Bit 2 GPIOn_EN2 [0x0074] Bits Name Access Reset Description 31:0 config R/W 0 GPIO Configuration Enable Bit 2         In conjunction with the bits in Table 6\u20112, this field configures the corresponding device pin for digital I/O or an alternate function mode. This field can be modified directly by writing to this register or indirectly through GPIOn_EN2_SET or GPIOn_EN2_CLR.         <p>Table 6\u20115 depicts a detailed example of how each of these bits applies to each of the GPIO device pins.</p> <p>Note: Some GPIO are not implemented in all devices. The bits associated with unimplemented GPIO should not be changed from their default value. Note:This register setting does not affect input and interrupt functionality of the associated pin. <p>Table 6-40: GPIO Port n Configuration Enable Atomic Set Bit 2 Register </p> GPIO Port n Configuration Enable Atomic Set Bit 2 GPIOn_EN2_SET [0x0078] Bits Name Access Reset Description 31:0 set R/W1 0 GPIO Alternate Function Select Atomic Set Bit 2         Writing 1 to one or more bits sets the corresponding bits in the GPIOn_EN2 register.              0: No effect.             1: Corresponding bits in GPIOn_EN2 register set to 1.          <p>Table 6-41: GPIO Port n Configuration Enable Atomic Clear Bit 2 Register </p> GPIO Port n Configuration Enable Atomic Clear Bit 2 GPIOn_EN2_CLR [0x007C] Bits Name Access Reset Description 31:0 clr R/W1 0 GPIO Alternate Function Select Atomic Clear Bit 2         Writing 1 to one or more bits clears the corresponding bits in the GPIOn_EN2 register.              0: No effect.             1: Corresponding bits in GPIOn_EN2 register cleared to 0.          <p>Table 6-42: GPIO Port n Hysteresis Enable Register </p> GPIO Port n Hysteresis Enable GPIOn_HYSEN [0x00A8] Bits Name Access Reset Description 31:0 en RO 0 Reserved <p>Table 6-43: GPIO Port n Slew Rate Select Register </p> GPIO Port n Slew Rate Select Register GPIOn_SRSEL [0x00AC] Bits Name Access Reset Description 31:0 sr_sel RO 0 Reserved <p>Table 6-44: GPIO Port n Output Drive Strength Bit 0 Register </p> GPIO Port n Output Drive Strength Bit 0 GPIOn_DS0 [0x00B0] Bits Name Access Reset Description 31:0 config R/W 0 GPIO Output Drive Strength Selection 0         See Table 6-4 for details on setting the GPIO output drive strength and other electrical characteristics.          <p>Table 6-45: GPIO Port n Output Drive Strength Bit 1 Register </p> GPIO Port n Output Drive Strength Bit 1 GPIOn_DS11 [0x00B4] Bits Name Access Reset Description 31:0 config R/W 0 GPIO Output Drive Strength Selection 1         See Table 6-4 for details on setting the GPIO output drive strength and other electrical characteristics.          <p>Table 6-46: GPIO Port n Pulldown/Pullup Strength Select Register </p> GPIO Port n Pulldown/Pullup Strength Select Register GPIOn_PS [0x00B8] Bits Name Access Reset Description 31:0 pull_sel R/W 0 GPIO Pulldown/Pullup Strength Select             This field selects the strength of the pullup or pulldown resistor for a pin configured for input mode.                  0: Weak pulldown/pullup resistor for input pin.                 1: Strong pulldown/pullup resistor for input pin.              <p>Note: Refer to the data sheet for specific electrical characteristics of the pulldown/pullup resistances.</p> <p>Table 6-47: GPIO Port n Voltage Select Register </p> GPIO Port n Voltage Select GPIOn_VSSEL [0x00C0] Bits Name Access Reset Description 31:0 v_sel R/W 0 GPIO Supply Voltage Select             This field selects the voltage rail used for the GPIO pin.                  0: V<sub>DDIO</sub>                 1: V<sub>DDIOH</sub>"},{"location":"interrupts-exceptions/","title":"Interrupts and Exceptions","text":"<p>Interrupts and exceptions are managed by either the Arm Cortex-M4 with FPU NVIC or the RV32 interrupt controller. The NVIC manages the interrupts, exceptions, priorities, and masking. Table 5-1 and Table 5\u20112 detail the MAX78000\u2019s interrupt vector tables for the CM4 and RV32 processors, respectively, and describe each exception and interrupt.</p>"},{"location":"interrupts-exceptions/#cm4-interrupt-and-exception-features","title":"CM4 Interrupt and Exception Features","text":"<ul> <li>8 programmable priority levels</li> <li>Nested exception and interrupt support</li> <li>Interrupt masking</li> </ul>"},{"location":"interrupts-exceptions/#cm4-interrupt-vector-table","title":"CM4 Interrupt Vector Table","text":"<p>Table 5-1 lists the interrupt and exception table for the MAX78000\u2019s CM4 core. There are 119 interrupt entries for the MAX78000, including reserved for future use interrupt placeholders. Including the 15 system exceptions for the Arm Cortex-M4 with FPU, the total number of entries is 134.</p> <p>Table 5-1: MAX78000 CM4 Interrupt Vector Table </p> Exception (Interrupt) Number Offset Name Description 1 [0x0004] Reset_IRQn Reset 2 [0x0008] NonMaskableInt_IRQn Non-Maskable Interrupt 3 [0x000C] HardFault_IRQn Hard Fault 4 [0x0010] MemoryManagement_IRQn Memory Management Fault 5 [0x0014] BusFault_IRQn Bus Fault 6 [0x0018] UsageFault_IRQn Usage Fault 7:10 [0x001C]-[0x0028] - Reserved 11 [0x002C] SVCall_IRQn Supervisor Call Exception 12 [0x0030] DebugMonitor_IRQn Debug Monitor Exception 13 [0x0034] - Reserved 14 [0x0038] PendSV_IRQn Request Pending for System Service 15 [0x003C] SysTick_IRQn System Tick Timer 16 [0x0040] PF_IRQn Power Fail interrupt 17 [0x0044] WDT0_IRQn Windowed Watchdog Timer 0 Interrupt 18 [0x0048] - Reserved 19 [0x004C] RTC_IRQn Reserved 20 [0x0050] TRNG_IRQn True Random Number Generator Interrupt 21 [0x0054] TMR0_IRQn Timer 0 Interrupt 22 [0x0058] TMR1_IRQn Timer 1 Interrupt 23 [0x005C] TMR2_IRQn Timer 2 Interrupt 24 [0x0060] TMR3_IRQn Timer 3 Interrupt 25 [0x0064] TMR4_IRQn Timer 4 (LPTMR0) Interrupt 26 [0x0068] TMR5_IRQn Timer 5 (LPTMR1) Interrupt 27:28 [0x006C]:[0x0070] - Reserved 29 [0x0074] I2C0_IRQn I<sup>2</sup>C Port 0 Interrupt 30 [0x0078] UART0_IRQn UART Port 0 Interrupt 31 [0x007C] UART1_IRQn UART Port 1 Interrupt 32 [0x0080] SPI1_IRQn SPI Port 1 Interrupt 33:35 [0x0084]:[0x008C] - Reserved 36 [0x90] ADC_IRQn ADC Interrupt 37:38 [0x0094]:[0x0098] - Reserved 39 [0x009C] FLC0_IRQn Flash Controller 0 Interrupt 40 [0x00A0] GPIO0_IRQn GPIO Port 0 Interrupt 41 [0x00A4] GPIO1_IRQn GPIO Port 1 Interrupt 42 [0x00A8] GPIO2_IRQn GPIO Port 2 Interrupt 43 [0x00AC] - Reserved 44 [0x00B0] DMA0_IRQn DMA0 Interrupt 45 [0x00B4] DMA1_IRQn DMA1 Interrupt 46 [0x00B8] DMA2_IRQn DMA2 Interrupt 47 [0x00BC] DMA3_IRQn DMA3 Interrupt 48:49 [0x00C0 : 0x00C4] - Reserved 50 [0x00C8] UART2_IRQn UART Port 2 Interrupt 51 [0x00CC] - Reserved 52 [0x00D0] I2C1_IRQn I<sup>2</sup>C Port 1 Interrupt 53:68 [0x00D4]: [0x0110] - Reserved 69 [0x0114] WUT_IRQn Wakeup Timer Interrupt 70 [0x0118] GPIOWAKE_IRQn GPIO Wakeup Interrupt 71 [0x011C] - Reserved 72 [0x0120] SPI0_IRQn SPI Port 0 Interrupt 73 [0x0124] WDT1_IRQn Low Power Watchdog Timer 0 (WDT1) Interrupt 74 [0x0128] - Reserved 75 [0x012C] PT_IRQn Pulse Train Interrupt 76:77 [0x0130]:[0x0134] - Reserved 78 [0x0138] I2C2_IRQn I<sup>2</sup>C Port 2 Interrupt 79 [0x013C] RISCV_IRQn CPU1 (RV32) Interrupt 80:82 [0x0140]:[0x0148] - Reserved 83 [0x014C] OWM_IRQn 1-Wire Master Interrupt 84:97 [0x0150]:[0x0184] - Reserved 98 [0x0188] ECC_IRQn Error Correction Coding Block Interrupt 99 [0x018C] DVS_IRQn Digital Voltage Scaling Interrupt 100 [0x0190] SIMO_IRQn Single Input Multiple Output Interrupt 101:103 [0x0194]:[0x019C] - Reserved 104 [0x01A0} UART3_IRQn UART3 (LPUART0) Interrupt 105:106 [0x01A4]:[0x01A8] - Reserved 107 [0x01AC] PCIF_IRQn Parallel Camera Interface Interrupt 108:112 [0x01B0]:[0x01C0] - Reserved 113 [0x01C4] AES_IRQn AES Interrupt 114 [0x01C8] - Reserved 115 [0x01CC] I2S_IRQn I<sup>2</sup>S Interrupt 116 [0x01D0] CNN_FIFO_IRQn CNN FIFO Interrupt 117 [0x01D4] CNN_IRQn CNN Interrupt 118 [0x01D8] - Reserved 119 [0x01DC] LPCMP_IRQn Low Power Comparator Interrupt"},{"location":"interrupts-exceptions/#rv32-interrupt-vector-table","title":"RV32 Interrupt Vector Table","text":"<p>Table 5\u20112 lists the interrupt and exception table for the MAX78000\u2019s RV32 core.</p> <p>Table 5-2: MAX78000 RV32 Interrupt Vector Table </p> Exception (Interrupt) Number Name Description 4 PF_IRQn Power Fail/System Fault/CM4/Bus Fault 5 WDT0_IRQn Windowed Watchdog Timer 0 Interrupt 6 GPIOWAKE_IRQn GPIO Wakeup Interrupt 7 RTC_IRQn RTC Interrupt 8 TMR0_IRQn Timer 0 Interrupt 9 TMR1_IRQn Timer 1 Interrupt 10 TMR2_IRQn Timer 2 Interrupt 11 TMR3_IRQn Timer 3 Interrupt 12 TMR4_IRQn Timer 4 (LPTMR0) Interrupt 13 TMR5_IRQn Timer 5 (LPTMR1) Interrupt 14 I2C0_IRQn I<sup>2</sup>C Port 0 Interrupt 15 UART0_IRQn UART Port 0 Interrupt 16 - Reserved 17 I2C1_IRQn I<sup>2</sup>C Port 1 Interrupt 18 UART1_IRQn UART Port 1 Interrupt 19 UART2_IRQn UART Port 2 Interrupt 20 I2C2_IRQn I<sup>2</sup>C Port 2 Interrupt 21 UART3_IRQn UART3 (LPUART0) Interrupt 22 SPI1_IRQn SPI Port 1 Interrupt 23 WUT_IRQn Wakeup Timer Interrupt 24 FLC0_IRQn Flash Controller 0 Interrupt 25 GPIO0_IRQn GPIO Port 0 Interrupt 26 GPIO1_IRQn GPIO Port 1 Interrupt 27 GPIO2_IRQn GPIO Port 2 Interrupt 28 DMA0_IRQn DMA0 Interrupt 29 DMA1_IRQn DMA1 Interrupt 30 DMA2_IRQn DMA2 Interrupt 31 DMA3_IRQn DMA3 Interrupt 32:45 - Reserved 46 AES_IRQn AES Interrupt 47 TRNG_IRQn TRNG Interrupt 48 WDT1_IRQn Watchdog Timer 1 (LPWDT0) Interrupt 49 DVS_IRQn Digital Voltage Scaling Interrupt 50 SIMO_IRQn Single Input Multiple Output Interrupt 51 - Reserved 52 PT_IRQn Pulse Train Interrupt 53 ADC_IRQn ADC Interrupt 54 OWM_IRQn 1-Wire Master Interrupt 55 I2S_IRQn I<sup>2</sup>S Interrupt 56 CNN_FIFO_IRQn CNN TX FIFO Interrupt 57 CNN_IRQn CNN Interrupt 58 - Reserved 59 PCIF_IRQn Parallel Camera Interface Interrupt"},{"location":"memory-register-mapping-access/","title":"Memory, Register, Mapping, and Access","text":""},{"location":"memory-register-mapping-access/#overview","title":"Overview","text":"<p>The Arm Cortex-M4 architecture defines a standard memory space for unified code and data access. This memory space is addressed in units of single bytes but is most typically accessed in 32-bit (4 byte) units. It may also be accessed, depending on the implementation, in 8-bit (1 byte) or 16-bit (2 byte) widths. The total range of the memory space is 32 bits wide (4GB addressable total), from addresses 0x0000 0000 to 0xFFFF FFFF.</p> <p>However, it is important to note that the architectural definition does not require the entire 4GB memory range to be populated with addressable memory instances.</p> <p>Figure 3-1: CM4 Code Memory Mapping </p> <p></p> <p>Figure 3-2: RISC-V IBUS Code Memory Mapping </p> <p></p> <p>Figure 3-3: CM4 Peripheral and Data Memory Mapping </p> <p></p> <p>Figure 3-4: RV32 Peripheral and Data Memory Mapping </p> <p></p>"},{"location":"memory-register-mapping-access/#standard-memory-regions","title":"Standard Memory Regions","text":"<p>Several standard memory regions are defined for the Arm Cortex-M4 (CPU0) and RISC-V (CPU1) architectures; many of these are optional for the system integrator. At a minimum, the MAX78000 must contain some code and data memory for application software, stack, and variable space for CPU0.</p>"},{"location":"memory-register-mapping-access/#code-space","title":"Code Space","text":"<p>The code space area of memory is designed to contain the primary memory used for code execution by the device. This memory area is defined from byte address range 0x0000 0000 to 0x1FFF FFFF (0.5GB maximum). The Cortex-M4 core and Arm debugger use two different standard core bus masters to access this memory area. The I-Code AHB bus master is used for instruction decode fetching from code memory, while the D-Code AHB bus master is used for data fetches from code memory. This is arranged so that data fetches avoid interfering with instruction execution. Additionally, the RV32 uses the D-BUS to access code memory in this area and the I-Bus to access data fetches from the code memory.</p> <p>The MAX78000 code memory mapping is illustrated in Figure 3-1 and Figure 3-2. The code space memory area contains the main internal flash memory, which holds most of the software executed on the device. The internal flash memory is mapped into both code and data space from 0x1000 0000 to 0x1007 FFFF. The main program flash memory is 512KB and consists of 64 logical pages of 8,192 Bytes per page.</p> <p>This program memory area must also contain the default system vector table and the initial settings for all system exception handlers and interrupt handlers for the CM4 core. The reset vector for the device is 0x0000 0000 and contains the device ROM code that transfers execution to user code at address 0x1000 0000.</p> <p>The code space memory on the MAX78000 also contains the mapping for the flash information block, from 0x1080 0000 to 0x1080 3FFF. However, this mapping is only present during production test; it is disabled once the information block has been loaded with valid data and the info block lockout option has been set. This memory is accessible for data reads only and cannot be used for code execution. See Information Block Flash Memory for additional details.</p>"},{"location":"memory-register-mapping-access/#internal-cache-memory","title":"Internal Cache Memory","text":"<p>The MAX78000 includes a dedicated unified internal cache controller with 16,384 bytes of internal cache memory (ICC0) for the CM4 core. Optionally, sysram3 can be used as a unified internal cache controller (ICC1) for the RV32.</p> <p>The unified internal cache memory is used to cache data and instructions fetched through the I-Code bus for the CM4 or the IBUS for the RV32 from the internal flash memory. See section Unified Internal Cache Controller for detailed instructions on enabling the unified internal cache controllers.</p>"},{"location":"memory-register-mapping-access/#information-block-flash-memory","title":"Information Block Flash Memory","text":"<p>The information block is a separate area of the internal flash memory and is 16,384 Bytes. The information block is used to store trim settings (option configuration and analog trim) and other nonvolatile device-specific information. The information block also contains the device's unique serial number (USN). The USN is a 104-bit field. USN bits 0 thru 7 contain the die revision.</p> <p>Figure 3-5: Unique Serial Number Format </p> <p></p> <p>Reading the USN requires unlocking the information block. Unlocking the information block does not enable write access to the block but allows the contents of the USN to be read from the block. Unlock the information block using the following steps:</p> <ol> <li>Write 0x3A7F 5CA3 to FLC_ACTRL.</li> <li>Write 0xA1E3 4F20 to FLC_ACTRL.</li> <li>Write 0x9608 B2C1 to FLC_ACTRL.</li> <li>The information block is now read-only accessible.</li> </ol> <p>To re-lock the information block to prevent access, write any 32-bit word to FLC_ACTRL.</p>"},{"location":"memory-register-mapping-access/#sram-space","title":"SRAM Space","text":"<p>The SRAM area of memory is intended to contain the primary SRAM data memory of the device and is defined from byte address range 0x2000 0000 to 0x3FFF FFFF (0.5GB maximum). This memory can be used for general-purpose variable and data storage, code execution, the CM4 stack, and the RV32 stack. The MAX78000 CM4's data memory mapping is illustrated in Figure 3-1. The MAX78000 RV32's data memory mapping is illustrated in Figure 3-4.</p> <p>The system SRAM configuration is defined in Table 3-1. Additionally, the CNN memory is covered in the CNN chapter in the section Memory Configuration.</p> <p>The SRAM area contains the main system RAM. The size of the internal general-purpose data SRAM is 128KB. The SRAM is divided into four blocks and consists of the contiguous address range from 0x2000 0000 to 0x2001 FFFF. The SRAM area on the MAX78000 can be used for data storage and code execution by the CM4. The RV32 is limited to sysram2 and sysram3 for code and data storage.</p> <p>Note: After a POR, the CM4 has access to all four SRAM regions. sysram2 and sysram3 can be configured to restrict access from the CM4 to prevent unintended modifications of these SRAM instances by the CM4. Set the FCR_URVCTRL.memsel field to 1 to set the RV32 core as the exclusive master for sysram2 and sysram3.</p> <p>Code stored in the SRAM is accessed directly for execution (using the system bus) and is not cached. The SRAM is also where the CM4 and RV32 stack must be located, as it is the only general-purpose SRAM on the device capable of this function.</p> <p>Table 3-1: System SRAM Configuration </p> System RAM Block # Size Start Address End Address CM4 Accessible RV32 Accessible sysram0 32KB 0x2000 0000 0x2000 7FFF \u2713 No sysram1 32KB 0x2000 8000 0x2000 FFFF \u2713 No sysram2 48KB 0x2001 0000 0x2001 BFFF Configurable \u2713 sysram3 16KB 0x2001 C000 0x2001 FFFF Configurable \u2713 (Optional ICC1) <p>The MAX78000 specific AHB Bus Masters can access the SRAM to use as general storage or working space.</p> <p>The entirety of the SRAM space on the MAX78000 is contained within the dedicated Arm Cortex-M4 SRAM bit-banding region from 0x2000 0000 to 0x200F FFFF (1MB maximum for bit-banding). This means that the CPU can access the entire SRAM either using standard byte/word/doubleword access or using bit-banding operations. The bit-banding mechanism allows any single bit of any given SRAM byte address location to be set, cleared, or read individually by reading from or writing to a corresponding doubleword (32-bit wide) location in the bit-banding alias area.</p> <p>The alias area for the SRAM bit-banding is located beginning at 0x2200 0000 and is a total of 32MB maximum, which allows the entire 128KB bit banding area to be accessed. Each 32-bit (4 byte aligned) address location in the bit-banding alias area translates into a single bit access (read or write) in the bit-banding primary area. Reading from the location performs a single bit read while writing either a 1 or 0 to the location performs a single bit set or clear.</p> <p>Note: The Arm Cortex-M4 core translates the access in the bit-banding alias area into the appropriate read cycle (for a single bit read) or a read-modify-write cycle (for a single bit set or clear) of the bit-banding primary area. Bit-banding is a core function (i.e., not a function of the SRAM interface layer or the AHB bus layer) and thus is only applicable to accesses generated by the core. Reads and writes to the bit-banding alias area by other (non-Arm-core) bus masters does not trigger a bit-banding operation and instead results in an AHB bus error.</p>"},{"location":"memory-register-mapping-access/#peripheral-space","title":"Peripheral Space","text":"<p>The peripheral space area of memory is intended to map control registers, internal buffers, and other features needed for the software control of non-core peripherals. It is defined from byte address range 0x4000 0000 to 0x5FFF FFFF (0.5GB maximum). On the MAX78000, all device-specific module registers are mapped to this memory area and any local memory buffers or FIFOs that are required by modules.</p> <p>As with the SRAM region, there is a dedicated 1MB area at the bottom of this memory region (from 0x4000 0000 to 0x400F FFFF) used for bit-banding operations by the Arm core. Four-byte-aligned read/write operations in the peripheral bit-banding alias area (32MB in length, from 0x4200 0000 to 0x43FF FFFF) are translated by the core into read/mask/shift or read/modify/write operation sequences to the appropriate byte location in the bit-banding area.</p> <p>Note: The bit-banding operation within peripheral memory space is, like bit-banding function in SRAM space, a core remapping function. As such, it is only applicable to operations performed directly by the Arm core. If another memory bus master accesses the peripheral bit-banding alias region, the bit-banding remapping operation does not occur. In this case, the bit-banding alias region appears to be a non-implemented memory area (causing an AHB bus error).</p> <p>On the MAX78000, access to the region containing most peripheral registers (0x4000 0000 to 0x400F FFFF) goes from the AHB bus through an AHB-to-APB bridge enabling the peripheral modules to operate on the lower power APB bus matrix. This also ensures that peripherals with slower response times do not tie up bandwidth on the AHB bus, which must necessarily have a faster response time since it handles main application instruction and data fetching.</p>"},{"location":"memory-register-mapping-access/#aes-key-and-working-space-memory","title":"AES Key and Working Space Memory","text":"<p>The AES key memory and working space for AES operations (including input and output parameters) are in a dedicated register file memory tied to the AES engine block. This AES memory is mapped into AHB space for rapid software access.</p>"},{"location":"memory-register-mapping-access/#system-area-private-peripheral-bus","title":"System Area (Private Peripheral Bus)","text":"<p>The system area (private peripheral bus) memory space contains register areas for functions that are only accessible by the Arm core itself (and the Arm debugger, in certain instances). It is defined from byte address range 0xE000 0000 to 0xE00F FFFF. This APB bus is restricted and can only be accessed by the Arm core and core-internal functions. It cannot be accessed by other modules which implement AHB memory masters, such as the DMA interface.</p> <p>In addition to being restricted to the core, application software can only access this area when running in privileged execution mode (instead of the standard user thread execution mode). This helps ensure that critical system settings controlled in this area are not altered inadvertently or by errant code that should not access this area.</p> <p>Core functions controlled by registers mapped to this area include the SysTick timer, debug and tracing functions, the nested vector interrupt controller (NVIC), and the flash breakpoint controller.</p>"},{"location":"memory-register-mapping-access/#ahb-interfaces","title":"AHB Interfaces","text":"<p>The following sections detail memory accessibility on the AHB and the organization of AHB master and slave instances.</p>"},{"location":"memory-register-mapping-access/#arm-core-ahb-interfaces","title":"Arm Core AHB Interfaces","text":""},{"location":"memory-register-mapping-access/#i-code","title":"I-Code","text":"<p>The Arm core uses the I-Code AHB master for instruction fetching from memory instances located in code space from byte addresses 0x0000 0000 to 0x1FFF FFFF. This bus master is used to fetch instructions from the internal flash memory.</p> <p>Instructions fetched by this bus master are returned by the cache, which in turn triggers a cache line fill cycle to fetch instructions from the internal flash memory when a cache miss occurs.</p>"},{"location":"memory-register-mapping-access/#d-code","title":"D-Code","text":"<p>The Arm core uses the D-Code AHB master for data fetches from memory instances in code space from byte addresses 0x0000 0000 to 0x1FFF FFFF. This bus master has access to the internal flash memory and the information block.</p>"},{"location":"memory-register-mapping-access/#system","title":"System","text":"<p>The Arm core uses the system AHB master for all instruction fetches, and data read and write operations involving the SRAM data cache. The APB mapped peripherals (through the AHB-to-APB bridge) and AHB mapped peripheral and memory areas are also accessed using this bus master.</p>"},{"location":"memory-register-mapping-access/#ahb-slaves","title":"AHB Slaves","text":""},{"location":"memory-register-mapping-access/#standard-dma","title":"Standard DMA","text":"<p>The standard DMA AHB slave has access to all non-core memory areas accessible by the system bus. The standard DMA does not have access to the internal flash memory or Information blocks.</p>"},{"location":"memory-register-mapping-access/#cnn-and-cnn-tx-fifo","title":"CNN and CNN TX FIFO","text":"<p>The CNN and CNN TX FIFO AHB slaves have access to all non-core memory areas accessible by the system bus. They do not have access to the internal flash memory or information blocks.</p>"},{"location":"memory-register-mapping-access/#spio","title":"SPIO","text":"<p>The SPI0 AHB slave has access to all non-core memory areas accessible by the system bus. SPI0 does not have access to the internal flash memory or information blocks.</p>"},{"location":"memory-register-mapping-access/#ahb-slave-base-address-map","title":"AHB Slave Base Address Map","text":"<p>Table 3-2 contains the base address for each of the AHB slave peripherals. The base address for a given peripheral is the start of the register map for the peripheral. For a given peripheral, the address for a register within the peripheral is defined as the peripheral's AHB base address plus the register's offset.</p> <p>Table 3-2: AHB Slave Base Address Map </p> AHB Slave Register Name Register Prefix AHB Base Address AHB End Address SPI0 SPI0_ 0x400B E000 0x400B E3FF CNN TX FIFO CNN_FIFO_ 0x400C 0400 0x400C 0400"},{"location":"memory-register-mapping-access/#peripheral-register-map","title":"Peripheral Register Map","text":""},{"location":"memory-register-mapping-access/#apb-peripheral-base-address-map","title":"APB Peripheral Base Address Map","text":"<p>Table 3-3 contains the base address for each of the APB mapped peripherals. The base address for a given peripheral is the start of the register map for the peripheral. For a given peripheral, the address for a register within the peripheral is defined as the APB peripheral base address plus the registers offset.</p> <p>Table 3-3: APB Peripheral Base Address Map </p> Peripheral Register Name Register Prefix APB Base Address APB End Address Global ControlGCR_0x4000 00000x4000 03FF System InterfaceSIR_0x4000 04000x4000 07FF Function ControlFCR_0x4000 08000x4000 0BFF Watchdog Timer 0WDT0_0x4000 30000x4000 33FF Dynamic Voltage Scaling ControllerDVS_0x4000 3C000x4000 3C3F Single Input Multiple OutputSIMO_0x4000 44000x4000 47FF Trim System InitializationTRIMSIR_0x4000 54000x4000 57FF General Control FunctionGCFR_0x4000 58000x4000 5BFF Real time ClockRTC_0x4000 60000x4000 63FF Wakeup TimerWUT_0x4000 64000x4000 67FF Power SequencerPWRSEQ_0x4000 68000x4000 6BFF Miscellaneous ControlMCR_0x4000 6C000x4000 6FFF AESAES_0x4000 74000x4000 77FF AES KeyAESKEY_0x4000 78000x4000 7BFF GPIO Port 0GPIO0_0x4000 80000x4000 8FFF GPIO Port 1GPIO1_0x4000 90000x4000 9FFF Parallel Camera InterfacePCIF_0x4000 E0000x4000 EFFF CRCCRC_0x4000 F0000x4000 FFFF Timer 0TMR0_0x4001 00000x4001 0FFF Timer 1TMR1_0x4001 10000x4001 1FFF Timer 2TMR2_0x4001 20000x4001 2FFF Timer 3TMR3_0x4001 30000x4001 3FFF I2C 0I2C0_0x4001 D0000x4001 DFFF I2C 1I2C1_0x4001 E0000x4001 EFFF I2C 2I2C2_0x4001 F0000x4001 FFFF Standard DMADMA_0x4002 80000x4002 8FFF Flash Controller 0FLC0_0x4002 90000x4002 93FF Instruction-Cache Controller 0 (CM4)ICC0_0x4002 A0000x4002 A7FF Instruction Cache Controller 1 (RV32)ICC1_0x4002 A8000x4002 AFFF ADCADC_0x4003 40000x4003 4FFF Pulse Train EnginePT_0x4003 C0000x4003 C09F 1-Wire MasterOWM0_0x4003 D0000x4003 DFFF SemaphoreSEMA_0x4003 E0000x4003 EFFF UART 0UART0_0x4004 20000x4004 2FFF UART 1UART1_0x4004 30000x4004 3FFF UART 2UART2_0x4004 40000x4004 4FFF SPI1SPI1_0x4004 60000x4004 7FFF TRNGTRNG_0x4004 D0000x4004 DFFF I2SI2S_0x4006 00000x4006 0FFF Low Power General ControlLPGCR_0x4008 00000x4008 03FF GPIO Port 2GPIO2_0x4008 04000x4008 05FF Low Power Watchdog Timer 0 (WDT1)WDT1_0x4008 08000x4008 0BFF Low Power Timer 4TMR4_0x4008 0C000x4008 0FFF Low Power Timer 5TMR5_0x4008 10000x4008 13FF Low Power UART 0 (UART3)UART3_0x4008 14000x4008 17FF Low Power ComparatorLPCMP_0x4008 80000x4008 83FF CNN Global ControlCNN_0x5000 00000x500F FFFF CNNx16 Quadrant 0CNNx16_0_0x5010 00000x504F FFFF CNNx16 Quadrant 1CNNx16_1_0x5050 00000x508F FFFF CNNx16 Quadrant 2CNNx16_2_0x5090 00000x50CF FFFF CNNx16 Quadrant 3CNNx16_3_0x50D0 00000x510F FFFF"},{"location":"memory-register-mapping-access/#error-correction-coding-ecc-module","title":"Error Correction Coding (ECC) Module","text":"<p>This device features an Error Correction Coding (ECC) module that helps ensure data integrity by detecting and correcting bit corruption of the system RAM0 (sysram0) memory array. More specifically, the ECC module is a single error-correcting, double error detecting (SEC-DED). It corrects any single bit flip, detects two bit errors, and features a transparent zero wait state operation for reads.</p> <p>The ECC works by creating check bits for all data written to sysram0. These check bits are then stored along with the data. During a read, both the data and check bits are used to determine if one or more bits have become corrupt. If a single bit has been corrupted, this can be corrected. If two bits have been corrupted, it is detected but not corrected.</p> <p>If only one bit is determined to be corrupt, reads contain the \"corrected\" value. Reading memory does not correct the error value stored at the read memory location. It is up to the software to determine the appropriate time and method to write the correct data to memory. It is strongly recommended that the software correct the memory as soon as possible to minimize the chance of a second bit from becoming corrupt, resulting in data loss. Since ECC error checking occurs only during a read operation, it is recommended that the application periodically reads critical memory so that errors can be identified and corrected.</p>"},{"location":"memory-register-mapping-access/#sram","title":"SRAM","text":"<p>A check bit RAM is used to store sysram0's check bits, enabling ECC SEC-DED for sysram0. The check bit RAM is not mapped to the user memory space and is unavailable for application usage.</p>"},{"location":"memory-register-mapping-access/#limitations","title":"Limitations","text":"<p>Any read from non-initialized memory can trigger an ECC error since the random check bits most likely do not match the random data bits contained in the memory. Writing sysram0 to all zeroes before enabling ECC functionality can prevent this at the expense of the time required. To zeroize sysram0, write GCR_MEMZ.ram0 to 1.</p>"},{"location":"overview/","title":"Overview","text":"<p>Info</p> <p>The MAX78000 User Guide on this website is preliminary. To access the full document, refer to MAX7800 User Guide </p> <p>The MAX78000 is a new breed of low-power microcontrollers built to thrive in the rapidly evolving AI at the edge market. These products include Maxim's proven ultra-low-power MCU IP along with deep neural network AI acceleration.</p> <p>The MAX78000 is an advanced system-on-chip featuring an Arm\u00ae Cortex\u00ae-M4 with FPU CPU to efficiently compute complex functions and algorithms with integrated power management. It also includes a 442KB weight CNN accelerator. The devices offer large on-chip memory with 512KB flash and up to 128KB SRAM. Multiple high-speed and low-power communications interfaces are supported, including high-speed SPI, I2C serial interface, and LPUART. Additional low-power peripherals include flexible low-power timers (LPTMR) and analog comparators.</p> <p>The high-level block diagram for the MAX78000 is shown in Figure 2-1.</p> <p>Figure 2-1: MAX78000 Block Diagram </p> <p></p>"},{"location":"revision/","title":"Revision History","text":""},{"location":"revision/#online-document-revision-history","title":"Online Document Revision History","text":"REVISION NUMBER REVISION DATE DESCRIPTION"},{"location":"revision/#offline-document-revision-history","title":"Offline Document Revision History","text":"REVISION NUMBER REVISION DATE DESCRIPTION 0 07/2021 Initial release 1 03/2024          Added I2C slave address steps for operating as a slave device. See Slave Mode Operation for details.          Updated WDT sequence to show 8-bit writes. See WDT Feed Sequence for details.          Updated WDT window threshold fields and counter fields to indicate watchdog timer must be disabled for changing or reading. See WDTn_CTRL register for details.          Updated PWM Mode (3) to show PWM diagram.          Added Compare Mode (5) for wake-up timer.          Updated DAP interface pins to P0.28 and P0.29 in Table 8-1.          Marked flash controller registers as only reset on POR. See Flash Registers.          Removed GCR_RST0.smphr, use GCR_RST1.smphr instead.          Updated Table 20-1 to show correct WUT_CTRL.pres values for prescalers of 512, 1024, 2048, and 4096.          Removed package specific information from Table 17-1.          Fixed conditions in Table 18-2 to show when the RTC_TODA and RTC_SSECA registers are writable.          Removed GCR_SYSCTRL.flash_bank_flip field.          Corrected Table 26-1 to match published data sheet."},{"location":"system-power-clocks-reset/","title":"System, Power, Clocks, Reset","text":"<p>Different peripherals and subsystems use several clocks. These clocks are highly configurable by software, allowing developers to select the combination of application performance and power savings required for the target systems. Support for selectable core operating voltage is provided, enabling optimal timing access to the internal memories.</p>"},{"location":"system-power-clocks-reset/#oscillator-sources","title":"Oscillator Sources","text":""},{"location":"system-power-clocks-reset/#100mhz-internal-primary-oscillator-ipo","title":"100MHz Internal Primary Oscillator (IPO)","text":"<p>The MAX78000 includes a 100MHz internal high-speed oscillator, referred to in this document as the internal primary oscillator (IPO). The IPO is the highest frequency oscillator and draws the most power.</p> <p>The IPO can optionally be powered down in LPM by setting the GCR_PM.ipo_pd field to 1.</p> <p>The IPO can be selected as the SYS_OSC. Use the IPO as the SYS_OSC by performing the following steps:</p> <ol> <li>Enable the IPO by setting GCR_CLKCTRL.ipo_en to 1.</li> <li>Wait until the GCR_CLKCTRL.ipo_rdy field reads 1, indicating the IPO is operating.</li> <li>Set GCR_CLKCTRL.sysclk_sel to 4.</li> <li>Wait until the GCR_CLKCTRL.sysclk_rdy field reads 1. The IPO is now operating as the SYS_OSC.</li> </ol>"},{"location":"system-power-clocks-reset/#60mhz-internal-secondary-oscillator-iso","title":"60MHz Internal Secondary Oscillator (ISO)","text":"<p>The ISO is a low-power internal secondary oscillator that is the power-on reset default SYS_OSC. The ISO is automatically selected as SYS_OSC after a system reset or POR.</p> <p>The following steps show how to enable the ISO and select it as the SYS_OSC.</p> <ol> <li>Enable the ISO by setting GCR_CLKCTRL.iso_en to 1.</li> <li>Wait until the GCR_CLKCTRL.iso_rdy field reads 1, indicating the ISO is operating.</li> <li>Set GCR_CLKCTRL.sysclk_sel to 0.</li> <li>Wait until the GCR_CLKCTRL.sysclk_rdy field reads 1. The ISO is now operating as the SYS_OSC.</li> </ol>"},{"location":"system-power-clocks-reset/#8khz-30khz-internal-nano-ring-oscillator-inro","title":"8kHz-30kHz Internal Nano-Ring Oscillator (INRO)","text":"<p>The INRO is an ultra-low-power internal oscillator that can be selected as the SYS_OSC. The INRO is always enabled and cannot be disabled by software.</p> <p>The frequency of this oscillator is configurable to 8kHz, 16kHz, or 30kHz. Use the TRIMSIR_INRO.lpclksel field to select the desired frequency. On a POR or system reset, the frequency defaults to 30kHz.</p> <p>The following steps show how to set the INRO as the SYS_OSC.</p> <ol> <li>Verify the GCR_CLKCTRL.inro_rdy field reads 1.</li> <li>Set GCR_CLKCTRL.sysclk_sel to 3.</li> <li>Wait until the GCR_CLKCTRL.sysclk_rdy field reads 1. The INRO is now operating as the SYS_OSC.</li> </ol>"},{"location":"system-power-clocks-reset/#73728mhz-internal-baud-rate-oscillator-ibro","title":"7.3728MHz Internal Baud Rate Oscillator (IBRO)","text":"<p>The IBRO is a very low-power internal oscillator that can be selected as SYS_OSC. The INRO can optionally be used as a dedicated baud rate clock for the UARTs. The INRO is useful if the selected SYS_OSC does not accurately generate a desired UART baud rate.</p> <p>The following steps show how to enable the IBRO and select it as the SYS_OSC.</p> <ol> <li>Wait until the GCR_CLKCTRL.ibro_rdy field reads 1, indicating the IBRO is operating.</li> <li>Set GCR_CLKCTRL.sysclk_sel to 5.</li> <li>Wait until the GCR_CLKCTRL.sysclk_rdy field reads 1. The IBRO is now operating as the SYS_OSC.</li> </ol>"},{"location":"system-power-clocks-reset/#32768khz-external-real-time-clock-oscillator-ertco","title":"32.768kHz External Real-Time Clock Oscillator (ERTCO)","text":"<p>The ERTCO is an extremely low-power internal oscillator that can be selected as the SYS_OSC. The ERTCO can optionally use a 32.768kHz input clock or an 8kHz independent nano-ring oscillator instead of an external crystal. The internal 32.768kHz clock is available as an output on GPIO P3.1 as alternate function 1 (SQWOUT).</p> <p>This oscillator is the default clock for the real-time clock (RTC). If the RTC is enabled, the ERTCO is enabled automatically, independent of the selection of the SYS_OSC. The ERTCO is disabled on a POR or system reset.</p> <p>The following steps show how to enable the ERTCO and select it as the SYS_OSC.</p> <ol> <li>Enable the ERTCO by setting GCR_CLKCTRL.ertco_en to 1.</li> <li>Wait until the GCR_CLKCTRL.ertco_rdy field reads 1, indicating the ERTCO is operating.</li> <li>Set GCR_CLKCTRL.sysclk_sel to 6.</li> <li>Wait until the GCR_CLKCTRL.sysclk_rdy field reads 1. The ERTCO is now operating as the SYS_OSC.</li> </ol>"},{"location":"system-power-clocks-reset/#system-oscillator-sys_osc","title":"System Oscillator (SYS_OSC)","text":"<p>The MAX78000 supports multiple clock sources as the SYS_OSC. The selected SYS_OSC is the clock source for most internal blocks. Each oscillator, description, and nominal frequency are shown in Table 4-1. An external clock source, EXT_CLK, is supported on P0.3, alternate function 1. Each of the oscillators/clocks is described in detail in section Oscillator Sources.</p> <p>Table 4-1: Available System Oscillators </p> Oscillator/Clock Description Nominal Frequency IPO Internal Primary Oscillator 100MHz ISO Internal Secondary Oscillator 60MHz INRO Internal Nano-Ring Oscillator Configurable 8kHz, 16kHz, or 30kHz IBRO Internal Baud Rate Oscillator 7.3728MHz ERTCO External Real-Time Clock Oscillator 32.768kHz EXT_CLK External Clock Up to 80MHz"},{"location":"system-power-clocks-reset/#system-oscillator-selection","title":"System Oscillator Selection","text":"<p>Set the system oscillator using the GCR_CLKCTRL.sysclk_sel field. Before selecting an oscillator as the system oscillator, the oscillator source must first be enabled and ready. See each oscillator source\u2019s detailed description for the required steps to enable the oscillator and select it as the system oscillator.</p> <p>When the GCR_CLKCTRL.sysclk_sel is modified, hardware clears the GCR_CLKCTRL.sysclk_rdy field, and there is a delay until the switchover is complete. When the switchover to the selected SYS_OSC is complete, the GCR_CLKCTRL.sysclk_rdy field is set to 1 by hardware. The application software must verify that the switchover is complete before continuing operation.</p>"},{"location":"system-power-clocks-reset/#system-clock-sys_clk","title":"System Clock (SYS_CLK)","text":"<p>The selected SYS_OSC is the input to the system oscillator divider to generate the system clock (SYS_CLK). The system clock divider divides the selected SYS_OSC by the GCR_CLKCTRL.sysclk_div field, as shown in Equation 4-1.</p> <p>Equation 4-1: System Clock Scaling </p> <p>SYS_CLK = SYS_OSC / 2<sup>sysclk_div</sup></p> <p>GCR_CLKCTRL.sysclk_div is selectable from 0 to 7, resulting in divisors of 1, 2, 4, 8, 16, 32, 64 or 128.</p> <p>SYS_CLK drives the Arm core, the RV32 core, and all AHB masters in the system. SYS_CLK generates the following internal clocks as shown below:</p> <ul> <li>AHB Clock<ul> <li>HLCK = SYS_CLK</li> </ul> </li> <li>APB Clock<ul> <li>PCLK = SYS_CLK / 2</li> </ul> </li> </ul> <p>The RTC uses the ERTCO for its clock source. Optionally, the RTC can run using an internal dedicated 8kHz nano-ring oscillator. See the Real-Time Clock (RTC) chapter for details on using this 8kHz nano-ring oscillator for the RTC.</p> <p>All oscillators are reset to their POR reset default state during:</p> <ul> <li>Power-On Reset</li> <li>System Reset</li> </ul> <p>Oscillator settings are not reset during:</p> <ul> <li>Soft Reset</li> <li>Peripheral Reset</li> </ul> <p>Table 4-2 shows each oscillator\u2019s enabled state for each type of reset source in the MAX78000.</p> <p>Note: A Watchdog Timer Reset performs a System Reset.</p> <p>Table 4-2: Reset Sources and Effect on Oscillator and System Clock </p> Reset Source Oscillator POR System Soft Peripheral IPO Disabled Disabled Retains State Retains State ISO Enabled Enabled Retains State Retains State IBRO Enabled Enabled Enabled Enabled INRO Enabled Enabled Enabled Enabled ERTCO Disabled Disabled Retains State Retains State System Clock(SYS_OSC) Source ISO ISO Retains State Retains State <p>Figure 4-1: MAX78000 Clock Block Diagram shows a high-level diagram of the MAX78000 clock tree.</p> <p>Figure 4-1: MAX78000 Clock Block Diagram </p> <p></p>"},{"location":"system-power-clocks-reset/#operating-modes","title":"Operating Modes","text":"<p>The MAX78000 includes multiple operating modes and the ability to fine-tune power options to optimize performance and power. The system supports the following operating modes:</p> <ul> <li>ACTIVE</li> <li>SLEEP</li> <li>Low-Power Mode (LPM)</li> <li>Micro Power Mode (UPM)</li> <li>STANDBY</li> <li>BACKUP</li> <li>Power Down Mode (PDM)</li> </ul>"},{"location":"system-power-clocks-reset/#active-mode","title":"ACTIVE Mode","text":"<p>In this mode, both the CM4 and the RV32 cores can execute software, and all digital and analog peripherals are available on demand. Dynamic clocking disables peripheral not in use, providing the optimal mix of high performance and low power consumption. The CM4 has access to all System RAM by default. The RV32 has access to sysram2 and sysram3 and can be optionally configured to have exclusive access to these RAMs. Additionally, sysram3 can be configured as a unified internal cache controller for the RV32 allowing simultaneous data access and code execution for the CM4 and RV32 from the internal flash memory.</p> <p>Each of the peripherals can be individually enabled during active mode or powered down. The CNN and each of the four CNNx16_n Processor Arrays and their associated memories can be powered down or set to active mode.</p>"},{"location":"system-power-clocks-reset/#low-power-modes","title":"Low-Power Modes","text":""},{"location":"system-power-clocks-reset/#sleep","title":"SLEEP","text":"<p>This mode consumes less power but wakes faster because the clocks can optionally be enabled. The device status is as follows:</p> <ul> <li>The CM4 (CPU0) is sleeping</li> <li>The RV32 (CPU1) is sleeping</li> <li>The CNN is optionally available for use</li> <li>Each of the four CNNx16_n quadrants is individually configurable for power down</li> <li>Standard DMA is available for use</li> <li>All peripherals are on unless explicitly disabled before entering SLEEP</li> </ul>"},{"location":"system-power-clocks-reset/#entering-sleep","title":"Entering SLEEP","text":"<p>Entering SLEEP requires both the CM4 and RV32 to cooperate to enter SLEEP. Synchronization is necessary for deterministic entry into SLEEP. Two methods are described below, allowing either core to request entry into SLEEP. Both methods use the semaphore peripheral interrupt to communicate between the cores.</p> <p>If the RV32 is driving entry to SLEEP, the RV32 notifies the CM4 of a request to enter SLEEP using Multiprocessor Communications. The CM4 receives the notification and then sends confirmation through the semaphore peripheral to the RV32. The CM4 should then enter SLEEP by setting the SCR.sleepdeep field to 0 and performing a WFI or WFE instruction. The RV32 should then enter SLEEP by performing a WFI instruction or by setting GCR_PM.mode to 1, followed by two NOP instructions.</p> <p>Alternatively, the CM4 can initiate the request to enter SLEEP by sending the request to the RV32 using Multiprocessor Communications. The RV32 confirms the request through Multiprocessor Communications and performs a WFI instruction followed by two NOP instructions. The CM4 should then enter SLEEP by setting SCR.sleepdeep to 0 and performing a WFI or WFE instruction or by setting GCR_PM.mode to 1.</p> <p>Figure 4-2: SLEEP Mode Clock Control </p> <p></p>"},{"location":"system-power-clocks-reset/#lpm","title":"LPM","text":"<p>This mode is suitable for running the RV32 processor to collect and move data from enabled peripherals. The device status is a follows:</p> <ul> <li>The CM4, sysram0, and sysram1 are in state retention</li> <li>The CNN quadrants and memory are active and configurable.</li> <li>The RV32 can access the SPI, UARTS, Timers, I2C, 1-Wire, Timers, Pulse Train Engine, I2S, CRC, AES, TRNG, Comparators, as well as sysram2 and sysram3. Sysram3 can be configured to operate as the RV32 unified instruction cache</li> <li>The transition from LPM to ACTIVE is faster than the transition from BACKUP to ACTIVE because system initialization is not required</li> <li>The DMA is in state retention mode</li> <li>PWRSEQ_GP0 and PWRSEQ_GP1 registers retain state</li> <li>Choose the system PCLK or ISO as the clock source for the RV32 and all peripherals <ul> <li>PWRSEQ_LPCN.lpmclksel defaults to use ISO during LPM. Setting this field to 1 uses the PCLK</li> </ul> </li> <li>The following oscillators are powered down by default, but can be configured by software to remain active:<ul> <li>ISO</li> <li>IPO</li> <li>ERTCO</li> <li>INRO</li> </ul> </li> <li>The following oscillator is enabled:<ul> <li>IBRO</li> </ul> </li> </ul>"},{"location":"system-power-clocks-reset/#entering-lpm","title":"Entering LPM","text":"<p>Entry into LPM should be managed between the two cores using Multiprocessor Communications to ensure both cores are in a known state when entering LPM.</p> <p>When the CM4 puts itself into deep sleep, the device automatically enters LPM, and hardware sets the GCR_PM.mode to LPM. To place the CM4 in LPM mode in software, perform the following instructions.</p> <pre><code>SCR.sleepdeep = 1;  // deep sleep mode enabled\n\nWFI (or WFE);   // Enter deep sleep mode\n</code></pre> <p>If the RV32 requests the CM4 to enter LPM mode through Multiprocessor Communications and the CM4 enters SLEEP instead, by setting SCR.sleepdeep to 0 and performing a WFI or WFE instruction, the RV32 can put the device into LPM by directly setting the GCR_PM.mode field to LPM (8).</p> <p>Note: The device immediately enters LPM when the GCR_PM.mode field is set to LPM. If the CM4 is not in a known state, issues may occur when exiting LPM.</p> <p>Figure 4-3: LPM Clock and State Retention Diagram </p> <p></p>"},{"location":"system-power-clocks-reset/#upm","title":"UPM","text":"<p>This mode is used for extremely low power consumption while using a minimal set of peripherals to provide wake-up capability. The device status during UPM is:</p> <ul> <li>Both CM4 and RV32 are state retained.</li> <li>System state and all system RAM are retained</li> <li>CNN quadrants are optionally powered off</li> <li>CNN memory provides selectable retention</li> <li>The GPIO pins retain their state</li> <li>All non-UPM peripherals are state retained</li> <li>The following oscillators are powered down:<ul> <li>IPO</li> <li>ISO</li> </ul> </li> <li>The following oscillators are enabled:<ul> <li>IBRO</li> <li>ERTCO, firmware configurable</li> <li>INRO, firmware configurable</li> </ul> </li> <li>The following UPM peripherals are available for use to wake the device:<ul> <li>LPUART0</li> <li>LPTMR0</li> <li>LPTMR1</li> <li>LPWDT0</li> <li>LPCOMP0-LPCOMP3</li> <li>GPIO</li> </ul> </li> </ul>"},{"location":"system-power-clocks-reset/#entering-upm","title":"Entering UPM","text":"<p>Entering UPM mode requires both the CM4 and RV32 to cooperate to enter UPM mode. Synchronization is necessary for deterministic entry into UPM. Two methods are described below, allowing either core to request entry into UPM and ensuring deterministic entry. Both methods use the Semaphore peripheral interrupt to communicate between the cores.</p> <p>If the RV32 is driving entry to UPM, the RV32 notifies the CM4 of a request to enter UPM using Multiprocessor Communications. The CM4 receives the notification and then sends a confirmation through the semaphore peripheral to the RV32. The CM4 should then enter SLEEP by setting SCR.sleepdeep to 0 and performing a WFI or WFE instruction. The RV32 sets the GCR_PM.mode to UPM, followed by two NOP instructions, and the device immediately enters UPM.</p> <p>Alternatively, the CM4 can initiate the request to enter UPM by sending the request to the RV32 using Multiprocessor Communications. The RV32 confirms the request through Multiprocessor Communications and performs a WFI instruction, followed by two NOP instructions. The CM4 then sets the GCR_PM.mode to UPM, and the device immediately enters UPM.</p> <p>Figure 4-4: UPM Clock and State Retention Block Diagram </p> <p></p>"},{"location":"system-power-clocks-reset/#standby","title":"STANDBY","text":"<p>This mode is used to maintain the system operation while keeping time with the RTC. The device status is as follows:</p> <ul> <li>Both CM4 and RV32 are state retained.</li> <li>System state and all system RAM is retained</li> <li>CNN quadrants are powered off</li> <li>CNN memory provides selectable retention (optional state retention)</li> <li>GPIO pins retain their state</li> <li>All peripherals retain state</li> <li>The following oscillators are powered down:<ul> <li>IPO</li> <li>ISO</li> <li>IBRO</li> </ul> </li> <li>The following oscillators are enabled:<ul> <li>ERTCO, firmware configurable</li> <li>INRO</li> </ul> </li> </ul>"},{"location":"system-power-clocks-reset/#entering-standby","title":"Entering STANDBY","text":"<p>Entering STANDBY requires both the CM4 and RV32 to enter STANDBY mode. Synchronization is necessary for deterministic entry into STANDBY. Two methods are described below, allowing either core to request entry into STANDBY and ensuring deterministic entry. Both methods use the semaphore peripheral interrupt to communicate between the cores.</p> <p>If the RV32 is driving entry to STANDBY, the RV32 notifies the CM4 of a request to enter STANDBY using Multiprocessor Communications. The CM4 receives the notification and then sends a confirmation through the semaphore peripheral to the RV32. The CM4 should then enter SLEEP by setting SCR.sleepdeep to 0 and performing a WFI or WFE instruction. The RV32 sets the GCR_PM.mode to STANDBY, followed by two NOP instructions, and the device immediately enters into STANDBY.</p> <p>Alternatively, the CM4 can initiate the request to enter STANDBY by sending the request to the RV32 using Multiprocessor Communications. The RV32 confirms the request through Multiprocessor Communications and performs a WFI instruction followed by two NOP instructions. The CM4 then sets the GCR_PM.mode to STANDBY, and the device immediately enters STANDBY.</p> <p>Figure 4-5: STANDBY Mode Clock and State Retention Block Diagram </p> <p></p>"},{"location":"system-power-clocks-reset/#backup","title":"BACKUP","text":"<p>This mode is used to maintain the System RAM. The device status is as follows:</p> <ul> <li>CM4 and RV32 are powered off.</li> <li>Sysram0, sysram1, sysram2, and sysram3 can be independently configured for state retention, as shown in Table 4-3.</li> <li>User-configurable CNN memory retention</li> <li>All peripherals are powered off</li> <li>The following oscillators are powered down:<ul> <li>IPO</li> <li>ISO</li> <li>IBRO</li> <li>INRO</li> </ul> </li> <li>The following oscillators are enabled:<ul> <li>ERTCO (The RTC peripheral can be turned off, but not the oscillator)</li> </ul> </li> </ul> <p>Table 4-3 System RAM Retention in BACKUP Mode </p> RAM Block # Size State Retention Control sysram0 32KB + ECC if enabled PWRSEQ_LPCN.ramret0 sysram1 32KB PWRSEQ_LPCN.ramret1 sysram2 48KB PWRSEQ_LPCN.ramret2 sysram3 16KB PWRSEQ_LPCN.ramret3"},{"location":"system-power-clocks-reset/#entering-backup","title":"Entering BACKUP","text":"<p>Entering BACKUP mode does not require synchronization between the RV32 and CM4 cores. However, it is recommended that Multiprocessor Communications are used to ensure both cores are aware of entry into BACKUP and complete any memory transactions before entry.</p> <p>Either core can set GCR_PM.mode to BACKUP, and the device immediately enters BACKUP.</p> <p>Figure 4-6: BACKUP Mode Clock and State Retention Block Diagram </p> <p></p>"},{"location":"system-power-clocks-reset/#pdm","title":"PDM","text":"<p>This mode is used during product level distribution and storage. The device status is as follows:</p> <ul> <li>The CM4 and RV32 are powered off</li> <li>All peripherals and all RAMs are powered down</li> <li>All oscillators are powered down</li> <li>There is no data retention in this mode, but values in the flash are preserved</li> <li>V<sub>REGI</sub> POR voltage monitor is operational.</li> <li>Exit from PDM is possible through an external reset (RSTN) or a wake-up event using either P3.0 or P3.1 if configured.</li> </ul>"},{"location":"system-power-clocks-reset/#entering-pdm","title":"Entering PDM","text":"<p>Entering PDM does not require synchronization between the RV32 and CM4 cores. However, it is recommended that Multiprocessor Communications is used to ensure both cores are aware of entry into PDM and complete any flash memory transactions.</p> <p>Either core can set GCR_PM.mode to PDM, and the device immediately enters PDM.</p> <p>Figure 4-7: PDM Clock and State Retention Block Diagram </p> <p></p>"},{"location":"system-power-clocks-reset/#wake-up-sources-for-each-operating-mode","title":"Wake-Up Sources for Each Operating Mode","text":"<p>In all operating modes other than ACTIVE, wake-up sources are required to re-enter ACTIVE operation. Table 4-4 shows available wake-up sources for each operating mode of the MAX78000.</p> <p>Note: Each wake-up source must be enabled individually except for External Reset, which is hardware controlled.</p> <p>Table 4-4: Wake-Up Sources for Each Operating Mode in the MAX78000 </p> Operating Mode Any Peripheral Interrupts External Reset RV32 CNN CNN FIFO SPI1 SPI0 I2S I2C2 I2C1 I2C0 LPUART0 (UART3) UART2 UART1 UART0 LPTMR1 (TMR5) LPTMR0 (TMR4) TMR3 TMR2 TMR1 TMR0 LPWDT0 (WDT1) WDT0 LPCOMP3 LPCMOP2 LPCMOP1 COMP0 RTC WUT GPIO3 GPIO2 GPIO1 GPIO0 SLEEP \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc LPM \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc UPM \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc STANDBY \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc BACKUP \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc \uf0fc PDM \uf0fc \uf0fc Note: The CNN and CNN FIFO cannot wake the CM4 from LPM."},{"location":"system-power-clocks-reset/#device-resets","title":"Device Resets","text":"<p>Four device resets are available:</p> <ul> <li>Peripheral Reset</li> <li>Soft Reset</li> <li>System Reset</li> <li>Power-On Reset</li> </ul> <p>On completion of any of the four reset cycles, all peripherals are reset. On completion of any reset cycle, HCLK and PCLK are operational, the CPU core receives clocks and power, and the device is in ACTIVE. Program execution begins at the reset vector address.</p> <p>The contents of the always-on domain (AoD) are reset only on power-cycling V<sub>COREA</sub>, V<sub>COREB</sub>, V<sub>DDA</sub>, V<sub>DDIOH</sub>, or V<sub>REGI</sub>.</p> <p>The on-chip peripherals can also be reset to their POR default state using the two reset registers, GCR_RST0 and GCR_RST1.</p> <p>Table 4-5 shows the effects of each reset type on each of the operating modes.</p> <p>Table 4-5: Reset and Low-Power Mode Effects </p> Peripheral<sup>4</sup> Reset Soft<sup>4</sup> Reset System<sup>4</sup> Reset POR ACTIVE SLEEP LPM UPM BACKUP<sup>3</sup> PDM IPO - - Off Off R - FW Off Off Off ISO - - On Off R - FW Off Off Off ERTCO - - - Off FW FW FW FW FW Off IBRO - - Off Off R - FW FW Off Off ERFO - - Off Off R - Off Off Off Off INRO On On On On On On On On On Off SYS_CLK On On On<sup>2</sup> On<sup>2</sup> On On Off Off Off Off CPU Clock On On On On On Off Off Off Off Off RTC Reset FW FW FW FW FW Off Off WDT0, WDT1 - Reset Reset Reset FW Off Off Off Off Off GPIO0-GPIO2 - Reset Reset Reset R - - - - - GPIO3 - N/A Reset Reset FW FW FW FW FW FW All Other Peripherals Reset Reset Reset Reset R - R R Off Off Always-On Domain - - - Reset - - - - - - RAM Retention - - - Reset - - On On FW Off      Table key:      FW = Controlled by firmware      On = Enabled by hardware (Cannot be disabled)      Off = Disabled by hardware (Cannot be enabled)      - = No Effect      R = Restored to previous ACTIVE setting when exiting LPM and UPM, restored to system reset state when exiting BACKUP or STORAGE.      1: The always-on domain (AoD) is only reset on power-cycling V<sub>COREA</sub>, V<sub>COREB</sub>, V<sub>DDA</sub>, V<sub>DDIOH</sub>, or V<sub>REGI</sub>.     2: On a system reset or POR, the ISO is automatically set as the SYS_OSC.      3: A system reset occurs when returning from BACKUP or PDM low-power mode.      4: Peripheral, soft, and system resets are initiated by software through the GCR_RST0 register. System reset can also be triggered by the RSTN device pin or a Watchdog reset."},{"location":"system-power-clocks-reset/#peripheral-reset","title":"Peripheral Reset","text":"<p>Peripheral reset resets all peripherals. The CPU retains its state. The GPIO, watchdog timers, AoD, RAM retention, and general control registers (GCR), including the clock configuration, are unaffected.</p> <p>To start a peripheral reset, set GCR_RST0.periph to 1. The reset is completed immediately upon setting GCR_RST0.periph to 1.</p>"},{"location":"system-power-clocks-reset/#soft-reset","title":"Soft Reset","text":"<p>A soft reset is the same as a peripheral reset except that it also resets the GPIO to its POR state.</p> <p>To perform a soft reset, set GCR_RST0.soft to 1. The reset occurs immediately upon setting GCR_RST0.soft to 1.</p>"},{"location":"system-power-clocks-reset/#system-reset","title":"System Reset","text":"<p>A system reset is the same as a soft reset, except it also resets all GCR, resetting the clocks to their POR default state. The CPU state is reset, as well as the watchdog timers. The AoD and RAM are unaffected.</p> <p>A watchdog timer reset event initiates a system reset. To start a system reset, set GCR_RST0.sys to 1.</p>"},{"location":"system-power-clocks-reset/#power-on-reset","title":"Power-On Reset","text":"<p>A POR resets everything in the device to its default state. A POR results from V<sub>COREA</sub>, V<sub>COREB</sub>, V<sub>DDA</sub>, or V<sub>REGI</sub> falling below their reset voltage level. Refer to the MAX78000 data sheet for details of the reset voltage levels.</p>"},{"location":"system-power-clocks-reset/#unified-internal-cache-controllers","title":"Unified Internal Cache Controllers","text":"<p>The MAX78000 includes two unified internal cache controllers. ICC0 is the cache controller used for the CM4. ICC1, if enabled, is dedicated to the RV32 core. ICC1 uses sysram3 as the cache memory. If ICC1 is enabled, sysram3 is not accessible as SRAM (address range 0x2001 C000 to 0x2001 FFFF).</p> <p>Both caches, ICC0 and ICC1, include a line buffer, tag RAM, and a 16KB 2-way set associative RAM when enabled.</p>"},{"location":"system-power-clocks-reset/#enabling-the-internal-cache-controllers","title":"Enabling the Internal Cache Controllers","text":"<p>Enabling ICC1 for use as the cache controller for the RV32 requires using sysram3 as the cache memory. Note: The contents of sysram3 are lost when ICC1 is enabled, and sysram3 is not accessible for data reads or writes as part of the memory map.</p> <p>Note: Before enabling ICC1 as a cache controller, sysram3 should be zeroized.</p> <p>Perform the following steps to enable each ICC:</p> <ol> <li>Set the ICCn_CTRL.en to 0, ensuring the cache is invalidated when enabled.</li> <li>Set ICCn_CTRL.en to 1.</li> <li>Read ICCn_CTRL.rdy until it returns 1.</li> <li>Zeroize the ICC instance by setting GCR_MEMZ.icc0 or GCR_MEMZ.icc1 to 1.</li> </ol>"},{"location":"system-power-clocks-reset/#disabling-the-icc","title":"Disabling the ICC","text":"<p>Disable an ICC instance by setting ICCn_CTRL.en to 0.</p> <p>To use sysram3 as data RAM, first, disable the ICC1 instance as described above. When ICC1 is disabled, sysram3 is accessible as data RAM by both the CM4 and RV32 controllers unless sysram3 is configured for exclusive access by the RV32 core only.</p>"},{"location":"system-power-clocks-reset/#invalidating-the-icc-cache-and-tag-ram","title":"Invalidating the ICC Cache and Tag RAM","text":"<p>Invalidate the contents of a specific ICC instance by setting the ICCn_INVALIDATE register to 1. Once invalidated, the system flushes the cache. Read the ICCn_CTRL.rdy field until it returns 1 to determine when the flush is completed.</p>"},{"location":"system-power-clocks-reset/#flushing-the-icc","title":"Flushing the ICC","text":"<p>Flush ICC0 using the system configuration register (GCR_SYSCTRL). Set GCR_SYSCTRL.icc0_flush to 1 to immediately flush the contents of the 16KB cache and tag RAM.</p> <p>Flush ICC1 using the RV32 Control Register (FCR_URVCTRL). Set FCR_URVCTRL.icc1_flush to 1 to immediately flush the contents of the 16KB cache and tag RAM.</p>"},{"location":"system-power-clocks-reset/#internal-cache-control-registers-icc","title":"Internal Cache Control Registers (ICC)","text":"<p>See Table 3-3 for the base address of this peripheral/module. See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Table 4-6: Instruction Cache Controller Register Summary </p> Offset Register Name [0x0000] ICCn_INFO Cache ID Register [0x0004] ICCn_SZ Cache Memory Size Register [0x0100] ICCn_CTRL Instruction Cache Control Register [0x0700] ICCn_INVALIDATE Instruction Cache Controller Invalidate Register"},{"location":"system-power-clocks-reset/#icc0-register-details","title":"ICC0 Register Details","text":"<p>Table 4-7: ICC0 Cache Information Register </p> ICC0 Cache Information ICCn_INFO [0x0000] Bits Name Access Reset Description 31:16 - RO 0 Reserved 15:10 id R - Cache ID        This field returns the ID for the cache instance.         9:6 partnum R - Cache Part Number        This field returns the part number indicator for the cache instance.         5:0 relnum R - Cache Release Number This field returns the release number for the cache instance.         <p>Table 4-8: ICC0 Memory Size Register </p> ICC0 Memory Size ICCn_SZ [0x0004] Bits Name Access Reset Description 31:16 mem R - Addressable Memory Size        This field indicates the size of addressable memory by the cache controller instance in 128KB units.         15:0 cch R - Cache SizeThis field returns the size of the cache RAM in 1KB units.         16: 16KB Cache RAM         <p>Table 4-9: ICC0 Cache Control Register </p> ICC0 Cache Control ICCn_CTRL [0x0100] Bits Name Access Reset Description 31:17 - R/W - Reserved 16 rdy R - ReadyThis field is cleared by hardware anytime the cache as a whole is invalidated (including a POR). Hardware automatically sets this field to 1 when the invalidate operation is complete, and the cache is ready.              0: Cache invalidation in process.             1: Cache is ready.          Note: While this field reads 0, the cache is bypassed, and reads come directly from the line fill buffer. 15:1 - R/W - Reserved 0 en R/W 0 Cache EnableSet this field to 1 to enable the cache. Setting this field to 0 invalidates the cache contents, and the line fill buffer handles all reads.               0: Disable             1: Enable          <p>Table 4-10: ICC0 Invalidate Register </p> ICC0 Invalidate ICCn_INVALIDATE [0x0700] Bits Name Access Reset Description 31:0 invalid W - Invalidate     Writing any value to this register invalidates the cache."},{"location":"system-power-clocks-reset/#ram-memory-management","title":"RAM Memory Management","text":"<p>This device has many features for managing the on-chip RAM. The on-chip RAM includes the data RAM, the unified cache controllers (ICC0 and ICC1), the CNN RAM, and the peripheral FIFOs.</p>"},{"location":"system-power-clocks-reset/#on-chip-cache-management","title":"On-Chip Cache Management","text":"<p>The MAX78000 includes two unified internal cache controllers for code and data fetches from the flash memory. The caches can be enabled, disabled, zeroized, and flushed. See section Unified Internal Cache Controller for details.</p>"},{"location":"system-power-clocks-reset/#ram-zeroization","title":"RAM Zeroization","text":"<p>The GCR memory zeroize register, GCR_MEMZ, allows clearing memory for software or security reasons. Zeroization writes all zeros to the specified memory.</p> <p>The following SRAM memories can be zeroized:</p> <ul> <li>Each of the System RAMs can be individually zeroized by setting the respective GCR_MEMZ bit:<ul> <li>GCR_MEMZ.ram0</li> <li>GCR_MEMZ.ram0ecc</li> <li>GCR_MEMZ.ram1</li> <li>GCR_MEMZ.ram2</li> <li>GCR_MEMZ.ram3</li> </ul> </li> <li>ICC0 16KB Cache</li> <li>GCR_MEMZ.icc0</li> <li>ICC1 16KB Cache, if enabled<ul> <li>GCR_MEMZ.icc1</li> <li>Each of the CNNx16n processor arrays supports zeroizing the tornado RAM, mask RAM, bias RAM, and data SRAM:</li> <li>CNNx16_n_TEST.tramz set to 1 to zero, read CNNx16_n_TEST.tallzdone until 1 for completion</li> <li>CNNx16_n_TEST.mramz set to 1 to zero, read CNNx16_n_TEST.mallzdone until 1 for completion</li> <li>CNNx16_n_TEST.bramz set to 1 to zero, read CNNx16_n_TEST.ballzdone until 1 for completion</li> <li>CNNx16_n_TEST.sramz set to 1 to zero, read CNNx16_n_TEST.sallzdone until 1 for completion</li> </ul> </li> </ul>"},{"location":"system-power-clocks-reset/#miscellaneous-control-registers-mcr","title":"Miscellaneous Control Registers (MCR)","text":"<p>See Table 3-3 for the base address of this peripheral/module. See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Table 4-11: Miscellaneous Control Register Summary </p> Offset Register Name Access Name [0x0000] MCR_ECCEN R/W Error Correction Coding Enable Register [0x0004] MCR_IPO_MTRIM R/W IPO Manual Trim Register [0x0008] MCR_OUTEN R/W Miscellaneous Output Enable Register [0x000C] MCR_CMP_CTRL R/W Comparator Control Register [0x0010] MCR_CTRL R/W Miscellaneous Control Register [0x0020] MCR_GPIO3_CTRL R/W GPIO3 Pin Control Register"},{"location":"system-power-clocks-reset/#miscellaneous-control-register-details","title":"Miscellaneous Control Register Details","text":"<p>Table 4-12: Error Correction Coding Enable Register </p> Error Correction Coding Enable MCR_ECCEN [0x0000] Bits Name Access Reset Description 31:1 - RO 0 Reserved 0 ram0 R/W 0 System RAM 0 ECC EnableSet this field to 1 to enable ECC for sysram0.              0: Disabled             1: Enabled          <p>Table 4-13: IPO Manual Register </p> IPO Manual Trim MCR_IPO_MTRIM [0x0004] Bits Name Access Reset Description 31:9 - R0 0 Reserved 8 trim_range R/W 0 Trim Range SelectIf this bit is set to 1, the value loaded into the MCR_IPO_MTRIM.mtrim field must be greater than the trim setting in the TRIMSIR_IPOLO.ipo_limitlo field. If this bit is set to 0, the value loaded into the MCR_IPO_MTRIM.mtrim field must be less than the trim setting in the TRIMSIR_CTRL.ipo_limithi field.                      0: MCR_IPO_MTRIM.mtrim &lt; TRIMSIR_IPOLO.ipo_limitlo             1: MCR_IPO_MTRIM.mtrim &gt; TRIMSIR_CTRL.ipo_limithi 7:0 mtrim R/W 0x04 Manual Trim Value     Set this value to the desired manual trim based on the value set in MCR_IPO_MTRIM.trim_range.     If MCR_IPO_MTRIM.trim_range is 0, the value in this field must be less than the value in &lt; TRIMSIR_IPOLO.ipo_limitlo.     If MCR_IPO_MTRIM.trim_range is 1, the value in this field must be greater than the value in TRIMSIR_CTRL.ipo_limithi.      <p>Table 4-14: Output Enable Register </p> Output Enable MCR_OUTEN [0x0008] Bits Name Access Reset Description 31:2 - RO 0 Reserved 1 pdown_out_en R/W 0 Power Down Output Enable on P3.0Set this field to 1 to enable the power down output, P3.0 AF1 (PDOWN). PDOWN is active in BACKUP and STANDBY.      0: PDOWN output not enabled on P3.0     1: PDOWN output is enabled on P3.0      0 sqwout_en R/W 0 Square Wave Output Enable on P3.1 (SQWOUT)Set this field to 1 to enable the square wave output on P3.1 AF1 (SQWOUT).      0: Square wave output not enabled on P3.1.     1: Square wave output enabled on P3.1.      <p>Table 4-15: Comparator 0 Control Register </p> Comparator 0 Control MCR_CMP_CTRL [0x000C] Bits Name Access Reset Description 31:16 - RO 0 Reserved 15 if R/W1C 0 Comparator 0 Interrupt FlagThis field is set to 1 by hardware when the comparator output changes to the active state as set using the MCR_CMP_CTRL.pol field. Write 1 to clear this flag.      0: No interrupt     1: Interrupt occurred      14 out RO * Comparator 0 OutputThis field is the comparator output state.      0: Output low     1: Output high      13-7 - RO * Reserved 6 int_en R/W 0 Comparator 0 Interrupt EnableSet this field to 1 to enable the interrupt for comparator 0.      0: Interrupt disabled     1: Interrupt enabled      5 pol R/W 0 Comparator 0 Interrupt Polarity SelectSet this field to select the polarity of the output change that generates a comparator 3 interrupt.      0: Interrupt occurs from a transition from low to high     1: Interrupt occurs from a transition from high to low      4:1 - RO 0 Reserved 0 en R/W 0 Comparator 0 EnableSet this field to 1 to enable the comparator.      0: Comparator disabled     1: Comparator enable      <p>Table 4-16: Miscellaneous Control Register </p> Miscellaneous Control MCR_CTRL [0x0010] Bits Name Access Reset Description 31:10 - RO 0 Reserved 9 simo_rstd R/W 0 SIMO System Reset DisableIf this field is set, the SIMO is only reset by a POR. When this bit is set, the VSET* stays unchanged when exiting all low-power modes.      0: The SIMO is reset by all system resets.     1: The SIMO is only reset by a Power-On Reset.      9 simo_rstd R/W 0 SIMO System Reset DisableIf this field is set, the SIMO is only reset by a POR. When this bit is set, the VSET* stays unchanged when exiting all low-power modes.      0: The SIMO is reset by all system resets.     1: The SIMO is only reset by a Power-On Reset.      8 simo_clkscl_en R/W 0 SIMO Clock Scaling EnableSet this field to 1 to enable dynamic clock scaling to the SIMO based on load current. When enabled, the SIMO clock slows down in low-power modes, reducing current consumption.      0: SIMO clock scaling disabled     1: SIMO clock scaling enabled      7:4 - DNM 0x01 Reserved 3 ertco_en R/W 0 ERTCO Enable for LPM and UPM     Set this field to 1 to enable the ERTCO in LPM and UPM.      0: ERTCO disabled     1: ERTCO enabled      2 inro_en R/W 0 INRO EnableSet this field to 1 to enable the INRO in LPM and UPM.      0: INRO disabled     1: INRO enabled      1:0 - RO 0 Reserved"},{"location":"system-power-clocks-reset/#gpio-3-control","title":"GPIO 3 Control","text":"<p>Table 4-17: GPIO3 Pin Control Register </p> GPIO3 Pin Control MCR_GPIO3_CTRL [0x0020] Bits Name Access Reset Description 31:8 - RO 0 Reserved 7 p31_in RO See Description GPIO3 Pin 1 Input Status     Read this field to determine the input status of P3.1.          0: Input Low         1: Input High        6 p31_pe R/W 0 GPIO3 Pin 1 Pull-up Enable     Set this bit to 1 to enable the pullup resistor for P3.1.          0: Pull-up Disabled         1: Pull-up Enabled        5 p31_oe R/W 0 GPIO3 Pin 1 Output Enable     Set this bit to 1 to enable P3.1 for output mode.          0: Input mode.         1: Output mode enabled.        4 p31_do R/W 0 GPIO3 Pin 1 Data Output     If p31_oe is set to 1, this field is used to control the output state of P3.1.          0: Output low if p31_oe is 1         1: Output high if p31_oe is 1.        3 p30_in RO See Description GPIO3 Pin 0 Input Status     Read this field to determine the input status of P3.0.          0: Input Low         1: Input High        2 p30_pe R/W 0 GPIO3 Pin 0 Pull-up Enable     Set this bit to 1 to enable the pullup resistor for P3.0.          0: Pull-up Disabled         1: Pull-up Enabled        1 p30_oe R/W 0 GPIO3 Pin 0 Output Enable     Set this bit to 1 to enable P3.0 for output mode.          0: Input mode         1: Output mode enabled.        0 p30_do R/W 0 GPIO3 Pin 0 Data Output     If p30_oe is set to 1, this field is used to control the output state of P3.0.          0: Output low if p30_oe is 1         1: Output high if p30_oe is 1."},{"location":"system-power-clocks-reset/#single-inductor-multiple-output-power-supply-simo","title":"Single Inductor Multiple Output Power Supply (SIMO)","text":"<p>The SIMO switch mode power supply allows the device to operate autonomously from a single lithium cell. The SIMO provides three buck switching regulators (V<sub>REGO_A</sub> thru V<sub>REGO_C</sub>). Each of the three regulator voltages can be controlled by either CPU individually. For the SIMO to operate properly, the three buck regulator outputs must drive the power supply pins of the device, as shown in Table 4-18.</p>"},{"location":"system-power-clocks-reset/#power-supply-monitor","title":"Power Supply Monitor","text":"<p>The system also provides a power monitor that monitors the external power supplies relative to the on-chip bandgap voltage. The following power supplies are monitored:</p> <ul> <li>VCOREA (V<sub>COREA</sub>) Digital Core Supply Voltage A for the AoD</li> <li>VCOREB (V<sub>COREB</sub>) Digital Core Supply Voltage B</li> <li>VDDIO (V<sub>DDIO</sub>) GPIO Supply Voltage</li> <li>VDDIOH (V<sub>DDIOH</sub>) GPIO High Supply Voltage</li> <li>VDDA (V<sub>DDA</sub>) AoD Analog Supply Voltage</li> <li>VREGI (V<sub>REGI</sub>) Input Supply Voltage, Battery</li> </ul> <p>If the voltage drops below the trigger threshold, all registers and peripherals in that power domain are reset. This improves reliability and safety by guarding against a low voltage condition corrupting the contents of the registers and the device state.</p> <p>Refer to the device data sheet electrical characteristics for the trigger threshold values and power fail reset voltages.</p> <p>Table 4-18: SIMO Power Supply Device Pin Connectivity </p> SIMO Supply Output Pin Connection Device Power Supply Input Pin Supply Monitor Reset Action V<sub>REGO_A</sub> --&gt; V<sub>DDA</sub> POR V<sub>REGO_B</sub> --&gt; V<sub>COREB</sub> POR V<sub>REGO_C</sub> --&gt; V<sub>COREA</sub> POR - - V<sub>REGI</sub> POR - - V<sub>DDIO</sub> Power On GPIO pad held in reset until the voltage rises above its threshold - - V<sub>DDIOH</sub> Power On GPIO pad held in reset until the voltage rises above its threshold - - V<sub>DDIO</sub> GPIO pad logic enters POR - - V<sub>DDIOH</sub> GPIO pad logic enters POR <p>See Table 3-3 for the SIMO Controller Peripheral Base Address.</p> <p>Table 4-19: SIMO Controller Register Summary </p> Offset Register Name Access Name [0x0004] SIMO_VREGO_A R/W Buck Voltage Regulator A Control Register [0x0008] SIMO_VREGO_B R/W Buck Voltage Regulator B Control Register [0x000C] SIMO_VREGO_C R/W Buck Voltage Regulator C Control Register [0x0014] SIMO_IPKA RO Reserved. Do not modify this register. [0x0018] SIMO_IPKB RO Reserved. Do not modify this register. [0x001C] SIMO_MAXTON RO Reserved. Do not modify this register. [0x0020] SIMO_ILOAD_A RO Reserved. Do not modify this register. [0x0024] SIMO_ILOAD_B RO Reserved. Do not modify this register. [0x0028] SIMO_ILOAD_C RO Reserved. Do not modify this register. [0x0030] SIMO_BUCK_ALERT_THR_A RO Reserved. Do not modify this register. [0x0034] SIMO_BUCK_ALERT_THR_B RO Reserved. Do not modify this register. [0x0038] SIMO_BUCK_ALERT_THR_C RO Reserved. Do not modify this register. [0x0040] SIMO_BUCK_OUT_READY RO Buck Regulator Output Ready Register [0x0044] SIMO_ZERO_CROSS_CAL_A RO Reserved. Do not modify this register. [0x0048] SIMO_ZERO_CROSS_CAL_B RO Reserved. Do not modify this register. [0x004C] SIMO_ZERO_CROSS_CAL_C RO Reserved. Do not modify this register."},{"location":"system-power-clocks-reset/#single-inductor-multiple-output-simo-registers-details","title":"Single Inductor Multiple Output (SIMO) Registers Details","text":"<p>Table 4-20: SIMO Buck Voltage Regulator A Control Register </p> SIMO Buck Voltage Regulator A Control SIMO_VREGO_A [0x0004] Bits Name Access Reset Description 31:8 - RO - Reserved 7 rangea R/W 1 Regulator Output A Range     This field selects the regulator output range for V<sub>REGO_A</sub>.      0: 0.5V to 1.77V     1: 0.6V to 1.87V      6:0 vseta R/W 0x78h Regulator Output A VoltageEach bit increment in this field represents 10mV allowing output voltage settings from the minimum to the maximum of the SIMO_VREGO_A.rangea selected. <p>SIMO_VREGO_A.rangea = 1: Output Voltage=0.6V + (10mV \u00d7 vseta)</p> <p>SIMO_VREGO_A.rangea = 0: Output Voltage=0.5V + (10mV \u00d7 vseta)</p>      Default: 0x78 = SIMO_VREGO_A.rangea = 0, Output Voltage = 1.7V; SIMO_VREGO_A.rangea = 1, Output Voltage = 1.8V     *Warning: When this regulator is connected as shown in Table 4-18: SIMO Power Supply Device Pin Connectivity, the following apply:*         1. The maximum setting for this regulator must be followed for V<sub>DDA</sub> as indicated in the device data sheet.     2. Setting the regulator to a voltage below the power-fail reset voltage for V<sub>DDA</sub> initiates the power monitor reset action.      <p>Table 4-21: SIMO Buck Voltage Regulator B Control Register </p> SIMO Buck Voltage Regulator B Control SIMO_VREGO_B [0x0008] Bits Name Access Reset Description 31:8 - RO - Reserved 7 rangeb R/W 1 Regulator Output B RangeThis field selects the regulator output range for V<sub>REGO_B</sub>.      0: 0.5V to 1.77V     1: 0.6V to 1.87V      6:0 vsetb R/W 0x32h Regulator Output Voltage     Each bit increment in this field represents 10mV allowing output voltage settings from the minimum to the maximum of the SIMO_VREGO_B.rangeb selected. <p>SIMO_VREGO_B.rangeb = 1: Output Voltage=0.6V + (10mV \u00d7 vsetb)</p> <p>SIMO_VREGO_B.rangeb&gt; = 0: Output Voltage=0.5V + (10mV \u00d7 vsetb)</p>      Setting this field to 0x7F results in the maximum output voltage per the SIMO_VREGO_B.rangeb selected (1.77V or 1.87V)     Default: 0x32 = SIMO_VREGO_B.rangeb, Output Voltage = 1.0V; SIMO_VREGO_B.rangeb = 1, Output Voltage = 1.1V     *Warning: When this regulator is connected as shown in Table 4-18: SIMO Power Supply Device Pin Connectivity, the following apply:*         1. The maximum setting for this regulator must be followed for V<sub>COREB</sub> as indicated in the device data sheet.     2. Setting the regulator to a voltage below the power-fail reset voltage for V<sub>COREB</sub> initiates the power monitor reset action.      <p>Table 4-22: SIMO Buck Voltage Regulator C Control Register </p> SIMO Buck Voltage Regulator C Control SIMO_VREGO_C [0x000C] Bits Name Access Reset Description 31:8 - RO - Reserved 7 rangec R/W 1 Regulator Output B RangeThis field selects the regulator output range for V<sub>REGO_C</sub>.      0: 0.5V to 1.77V     1: 0.6V to 1.87V      6:0 vsetc R/W 0x32h Regulator Output VoltageEach increment in the register represents 10mV. <p>SIMO_VREGO_C.rangec = 1: Output Voltage=0.6V + (10mV \u00d7 vsetb)</p> <p>SIMO_VREGO_C.rangec&gt; = 0: Output Voltage=0.5V + (10mV \u00d7 vsetb)</p>      Setting this field to 0x7F results in the maximum output voltage per the SIMO_VREGO_C.rangec selected (1.77V or 1.87V)     Default: 0x32 = SIMO_VREGO_C.rangec, Output Voltage = 1.0V; SIMO_VREGO_C.rangec = 1, Output Voltage = 1.1V     *Warning: When this regulator is connected as shown in Table 4-18: SIMO Power Supply Device Pin Connectivity, the following apply:*         1. The maximum setting for this regulator must be followed for V<sub>COREC</sub> as indicated in the device data sheet.     2. Setting the regulator to a voltage below the power-fail reset voltage for V<sub>COREC</sub> initiates the power monitor reset action.      <p>Table 4-23: SIMO High Side FET Peak Current V<sub>REGO_A</sub> V<sub>REGO_B</sub> Register </p> SIMO High Side FET Peak Current V<sub>REGO_A</sub> V<sub>REGO_B</sub> SIMO_IPKA [0x0014] Bits Name Access Reset Description 31:8 - RO - Reserved 7:4 ipksetb RO 8 Reserved 3:0 ipkseta RO 8 Reserved <p>Table 4-24: SIMO High Side FET Peak Current V<sub>REGO_C</sub> Register </p> SIMO High Side FET Peak Current V<sub>REGO_C</sub> V<sub>REGO_D</sub> SIMO_IPKB [0x0018] Bits Name Access Reset Description 31:4 - RO - Reserved 3:0 ipksetc RO 8 Reserved <p>Table 4-25: SIMO Maximum High Side FET Time On Register </p> SIMO Maximum High Side FET On Time SIMO_MAXTON [0x001C] Bits Name Access Reset Description 31:4 - RO 0 Reserved 3:0 tonset RO 0x8h Reserved <p>Table 4-26: SIMO Buck Cycle Count VREGO_A Register </p> SIMO Buck Cycle Count VREGO_A SIMO_ILOAD_A [0x0020] Bits Name Access Reset Description 31:8 - RO 0 Reserved 7:0 iloada RO 0 Reserved <p>Table 4-26: SIMO Buck Cycle Count VREGO_B Register </p> SIMO Buck Cycle Count VREGO_B SIMO_ILOAD_B [0x0024] Bits Name Access Reset Description 31:8 - RO 0 Reserved 7:0 iloadb RO 0 Reserved <p>Table 4-28: SIMO Buck Cycle Count VREGO_C Register </p> SIMO Buck Cycle Count VREGO_C SIMO_ILOAD_C [0x0028] Bits Name Access Reset Description 31:8 - RO 0 Reserved 7:0 iloadc RO 0 Reserved <p>Table 4-29: SIMO Buck Cycle Count Alert VREGO_A Register </p> SIMO Buck Cycle Count Alert VREGO_A SIMO_BUCK_ALERT_THR_A [0x0030] Bits Name Access Reset Description 31:8 - RO 0 Reserved 7:0 buckthra RO 0 Reserved <p>Table 4-30: SIMO Buck Cycle Count Alert VREGO_B Register </p> SIMO Buck Cycle Count Alert VREGO_B SIMO_BUCK_ALERT_THR_B [0x0034] Bits Name Access Reset Description 31:8 - RO 0 Reserved 7:0 buckthrb RO 0 Reserved <p>Table 4-30: SIMO Buck Cycle Count Alert VREGO_C Register </p> SIMO Buck Cycle Count Alert VREGO_C SIMO_BUCK_ALERT_THR_C [0x0038] Bits Name Access Reset Description 31:8 - RO 0 Reserved 7:0 buckthrc RO 0 Reserved <p>Table 4-32: SIMO Buck Regulator Output Ready Register </p> SIMO Buck Regulator Output Ready SIMO_BUCK_OUT_READY [0x0040] Bits Name Access Reset Description 31:4 - RO 0 Reserved 3 buckoutrdya RO 0 V<sub>REGO_A</sub> Output ReadyWhen SIMO_VREGO_A.vseta changes, this bit is set when the output voltage has reached its regulated value. It is not cleared if the output voltage drops below its set value.      0: Not ready     1: Ready      2 buckoutrdyb RO 0 V<sub>REGO_B</sub> Output ReadyWhen SIMO_VREGO_B.vsetb changes, this bit is set when the output voltage has reached its regulated value. It is not cleared if the output voltage drops below its set value.      0: Not ready     1: Ready      1 buckoutrdyc R/W 0 V<sub>REGO_C</sub> Output ReadyWhen SIMO_VREGO_C.vsetb changes, this bit is set when the output voltage has reached its regulated value. It is not cleared if the output voltage drops below its set value.      0: Not ready     1: Ready      0 - RO 0 Reserved <p>Table 4-33: SIMO Zero Cross Calibration V<sub>REGO_A</sub> Register </p> SIMO Zero Cross Calibration V<sub>REGO_A</sub> SIMO_ZERO_CROSS_CAL_A [0x0044] Bits Name Access Reset Description 31:5 - RO 0 Reserved 4:0 zxcala RO 0 Reserved <p>Table 4-34: SIMO Zero Cross Calibration V<sub>REGO_B</sub> Register </p> SIMO Zero Cross Calibration V<sub>REGO_B</sub> SIMO_ZERO_CROSS_CAL_B [0x0048] Bits Name Access Reset Description 31:5 - RO 0 Reserved 4:0 zxcalb RO 0 Reserved <p>Table 4-35: SIMO Zero Cross Calibration V<sub>REGO_B</sub> Register </p> SIMO Zero Cross Calibration V<sub>REGO_C</sub> SIMO_ZERO_CROSS_CAL_C [0x004C] Bits Name Access Reset Description 31:5 - RO 0 Reserved 4:0 zxcalc RO 0 Reserved 4:0 zxcald RO 0 Reserved"},{"location":"system-power-clocks-reset/#low-power-general-control-registers-lpgcr","title":"Low-Power General Control Registers (LPGCR)","text":"<p>This set of general control registers provides reset and clock control for the low-power peripherals, including:</p> <ul> <li>LPUART0 (UART3)</li> <li>LPTMR0 (TMR4)</li> <li>LPTMR1 (TMR5)</li> <li>LPWDT0 (WDT1)</li> <li>LPCOMP1, LPCOMP2, and LPCOMP3</li> <li>GPIO2</li> </ul> <p>See Table 3-3 for the base address of this peripheral/module. See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Table 4-36: Low-Power Control Register Summary </p> Offset Register Name [0x0004] LPGCR_RST Reset Control Register [0x0008] LPGCR_PCLKDIS Clock Control Register/td&gt;"},{"location":"system-power-clocks-reset/#low-power-general-control-registers-details","title":"Low-Power General Control Registers Details","text":"<p>Table 4-37: Low-Power General Control Registers Details </p> Low-Power Reset Control LPGCR_RST [0x0004] Bits Name Access Reset Description 31:7 - RO 0 Reserved 6 lpcomp W1O 0 Low Power Comparators Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete. See Device Resets for additional information.  5 - RO 0 Reserved 4 uart3 W1O 0 UART3 (LPUART0) Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete. See Device Resets for additional information. 3 tmr5 W1O 0 TMR5 (LPTMR1) Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete. See Device Resets for additional information. 2 tmr4 W1O 0 TMR4 (LPTMR0) Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete. See Device Resets for additional information. 1 wdt1 W1O 0 WDT1 (LPWDT0) Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete. See Device Resets for additional information. 0 gpio2 W1O 0 GPIO2 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete. See Device Resets for additional information. <p>Table 4-38: Clock Disable Register </p> Clock Disable LPGCR_PCLKDIS [0x008] Bits Name Access Reset Description 31:7 - RO 0 Reserved 6 lpcomp R/W 0 Low Power Comparators Clock Disable     Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained. <p>Note: This field disables clocks to LPCOMP1, LPCOMP2, and LPCOMP3.</p>      0: Enabled     1: Disabled      5 - RO 0 Reserved 4 uart3 R/W 0 UART3 (LPUART0) Clock Disable     Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.      0: Enabled     1: Disabled      3 tmr5 R/W 0 TMR5 (LPTMR1) Clock Disable     Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.      0: Enabled     1: Disabled      2 tmr4 R/W 0 TMR4 (LPTMR0) Clock Disable     Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.      0: Enabled     1: Disabled      1 wdt1 R/W 0 WDT1 (LPWDT0) Clock Disable     Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.      0: Enabled     1: Disabled      0 gpio2 R/W 0 GPIO2 Clock Disable     Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.      0: Enabled     1: Disabled"},{"location":"system-power-clocks-reset/#power-sequencer-registers-pwrseq","title":"Power Sequencer Registers (PWRSEQ)","text":"<p>See Table 3-3 for the base address of this peripheral/module. See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Table 4-39: Power Sequencer Register Summary </p> Offset Register Name [0x0000] PWRSEQ_LPCN Low Power Control Register [0x0004] PWRSEQ_LPWKST0 Low Power GPIO0 Wakeup Status Flags [0x0008] PWRSEQ_LPWKEN0 Low Power GPIO0 Wakeup Enable Register [0x000C] PWRSEQ_LPWKST1 Low Power GPIO1 Wakeup Status Flags [0x0010] PWRSEQ_LPWKEN1 Low Power GPIO1 Wakeup Enable Register [0x0014] PWRSEQ_LPWKST2 Low Power GPIO2 Wakeup Status Flags [0x0018] PWRSEQ_LPWKEN2 Low Power GPIO2 Wakeup Enable Registers [0x001C] PWRSEQ_LPWKST3 Low Power GPIO3 Wakeup Status Flags [0x0020] PWRSEQ_LPWKEN3 Low Power GPIO3 Wakeup Enable Register [0x0030] PWRSEQ_LPPWST Low Power Peripheral Wakeup Status Register [0x0034] PWRSEQ_LPPWEN Low Power Peripheral Wakeup Enable Register [0x0048] PWRSEQ_GP0 General Purpose Register 0 [0x004C] PWRSEQ_GP1 General Purpose Register 1"},{"location":"system-power-clocks-reset/#power-sequencer-register-details","title":"Power Sequencer Register Details","text":"<p>Table 4-40: Low Power Control Register </p> Low Power Control PWRSEQ_LPCN [0x0000] Bits Name Access Reset Description 31 lpwkst_clr R/W1 0 Low Power Wakeup Status Register Clear     Write 1 to this field to clear the Low Power Wakeup Status registers: <ul> <li>PWRSEQ_LPWKST0</li> <li>PWRSEQ_LPWKST1</li> <li>PWRSEQ_LPWKST2</li> <li>PWRSEQ_LPWKST3</li> <li>PWRSEQ_LPPWST</li> </ul> <p>1: Write 1 to initiate a clear of all the Low Power Wakeup Status registers. Hardware automatically clears this field when the registers are cleared.</p> 30:12 - DNM 0 Reserved, Do Not Modify 11 bg_dis R/W 1 Band Gap Disable for LPM and BACKUP Mode     Setting this field to 1 (default) disables the Bandgap during LPM and BACKUP mode.      0: System Bandgap is on in LPM and BACKUP modes.     1: System Bandgap is off in LPM and BACKUP modes.      10 - RO 0 Reserved 9 lpmfast R/W 0 Low Power Mode Clock Select     If the ISO is selected (default), fast LPM entry is enabled. Setting the clock to INRO disables fast LPM entry.      0: ISO used for entering LPM (Fast Mode Enable).     1: INRO used for LPM entry (Fast Mode Disabled).      8 lpmclksel R/W 1 Low Power Mode APB Clock Select     This field selects the clock source for the RV32 (CPU1) and other APB peripherals during LPM.      0: PCLK is used as the RV32 (CPU1) and APB system clock during LPM.     1: ISO is used as the RV32 (CPU1) and APB system clock during LPM.      7:4 - DNM 0 Reserved, Do not modify Note: This field must be set to 0 to maintain future compatibility.. 3 ramret3 R/W 0 System RAM 3 Data Retention Enable for BACKUP     Set this field to 1 to enable data retention for sysram3. See SRAM Space for the system RAM configuration.      0: Disable data retention for sysram3 address space in BACKUP.     1: Enable data retention for sysram3 address space in BACKUP.      2 ramret2 R/W 0 System RAM 2 Data Retention Enable for BACKUP     Set this field to 1 to enable data retention for sysram2. See SRAM Space for the system RAM configuration.      0: Disable data retention for sysram2 address space in BACKUP.     1: Enable data retention for sysram2 address space in BACKUP.      1 ramret1 R/W 0 System RAM 1 Data Retention Enable for BACKUP     Set this field to 1 to enable data retention for sysram1. See SRAM Space for the system RAM configuration.      0: Disable data retention for sysram1 address space in BACKUP.     1: Enable data retention for sysram1 address space in BACKUP.      0 ramret0 R/W 0 System RAM 0 Data Retention Enable for BACKUP     Set this field to 1 to enable data retention for sysram0. See SRAM Space for the system RAM configuration.      0: Disable data retention for sysram0 address space in BACKUP.     1: Enable data retention for sysram0 address space in BACKUP.      <p>Table 4-41: GPIO0 Low Power Wakeup Status Flags </p> GPIO0 Low Power Wakeup Status Flags PWRSEQ_LPWKST0 [0x0004] Bits Name Access Reset Description 31:0 wakest R/W1C 0 GPIO0 Pin Wakeup Status Flag     Whenever a GPIO0 pin, in any power mode, transitions from low-to-high or high-to-low, the pin\u2019s corresponding bit in this register is set. The device transitions from a low-power mode to ACTIVE if the corresponding GPIO pin\u2019s interrupt enable bit is set in the PWRSEQ_LPWKEN0 register. <p>Note: Clear this register before entering any low-power mode.</p> <p>Table 4-42: GPIO0 Low Power Wakeup Enable Registers </p> GPIO0 Low Power Wakeup Enable PWRSEQ_LPWKEN0 [0x0008] Bits Name Access Reset Description 31:0 en R/W 0 GPIO0 Pin Wakeup Interrupt Enable     Setting a GPIO0 pin\u2019s bit in this register causes an interrupt to be generated to wake up the device from any low-power mode to ACTIVE. A wake-up event sets the corresponding GPIO0\u2019s bit in the PWRSEQ_LPWKST0 register, enabling the determination of which GPIO0 pin triggered the wake-up event. Bits corresponding to unimplemented GPIO are ignored. <p>Note: To enable the MAX78000 to wake up from a low-power mode on a GPIO pin transition, first set the GPIO wake-up enable register bit GCR_PM.gpio_we to 1.</p> <p>Table 4-43: GPIO1 Low Power Wakeup Status Flags </p> GPIO1 Low Power Wakeup Status Flags PWRSEQ_LPWKST1 [0x000C] Bits Name Access Reset Description 31:10 - RO 0 ReservedBits corresponding to unimplemented GPIO are ignored. 9:0 st R/W1C 0 GPIO1 Pin Wakeup Status Flag     Whenever a GPIO1 pin, in any power mode, transitions from low-to-high or high-to-low, the pin\u2019s corresponding bit in this register is set. The device wakes from a low-power mode to ACTIVE if the corresponding interrupt enable bit is set in PWRSEQ_LPWKEN1. <p>Note: Clear this register before entering any low-power mode.</p> <p>Table 4-44: GPIO1 Low Power Wakeup Enable Registers </p> GPIO1 Low Power Wakeup Enable PWRSEQ_LPWKEN1 [0x0010] Bits Name Access Reset Description 31:10 - RO 0 ReservedBits corresponding to unimplemented GPIO are ignored. 9:0 en R/W 0 GPIO1 Pin Wakeup Interrupt Enable     Setting a GPIO1 pin\u2019s bit in this register causes an interrupt to be generated that wakes up the device from any low-power mode to ACTIVE. A wake-up event sets the corresponding GPIO1\u2019s bit in the PWRSEQ_LPWKST1 register, enabling the determination of which GPIO1 pin triggered the wake-up event. Bits corresponding to unimplemented GPIO are ignored. <p>Note: To enable the MAX78000 to wake up from a low-power mode on a GPIO pin transition, first set the GPIO wake-up enable register bit GCR_PM.gpio_we to 1.</p> <p>Table 4-45: GPIO2 Low Power Wakeup Status Flags </p> GPIO2 Low Power Wakeup Status Flags PWRSEQ_LPWKST2 [0x0014] Bits Name Access Reset Description 31:8 - R/W1C 0 ReservedBits corresponding to unimplemented GPIO are ignored. 7:0 wakest R/W1C 0 GPIO2 Pin Wakeup Status Flag     Whenever a GPIO2 pin, in any power mode, transitions from low-to-high or high-to-low, the pin's corresponding bit in this register is set. The device wakes from a low-power mode to ACTIVE if the corresponding interrupt enable bit is set in PWRSEQ_LPWKEN2. <p>Note: Clear this register before entering any low-power mode.</p> <p>Table 4-46: GPIO2 Low Power Wakeup Enable Registers </p> GPIO2 Low Power Wakeup Enable PWRSEQ_LPWKEN2 [0x0018] Bits Name Access Reset Description 31:8 - RO 0 ReservedBits corresponding to unimplemented GPIO are ignored. 7:0 en R/W 0 GPIO2 Pin Wakeup Interrupt Enable     Setting a GPIO2 pin\u2019s bit in this register causes an interrupt to be generated that wakes up the device from any low-power mode to ACTIVE. A wake-up event sets the corresponding GPIO2\u2019s bit in the PWRSEQ_LPWKST2 register, enabling the determination of which GPIO2 pin triggered the wake-up event. <p>Note: To enable the MAX78000 to wake up from a low-power mode on a GPIO pin transition, first set the GPIO wake-up enable register bit GCR_PM.gpio_we to 1.</p> <p>Table 4-47: GPIO3 Low Power Wakeup Status Flags </p> GPIO3 Low Power Wakeup Status Flags PWRSEQ_LPWKST3 [0x001C] Bits Name Access Reset Description 31:2 - RO 0 Reserved 1:0 wakest R/W1C 0 GPIO3 Pin Wakeup Status Flag     Whenever a GPIO3 pin, in any power mode, transitions from low-to-high or high-to-low, the corresponding bit in this register is set. Bits corresponding to unimplemented GPIO are ignored.     The device wakes from a low-power mode to ACTIVE if the corresponding interrupt enable bit is set in PWRSEQ_LPWKEN3. <p>Note: Clear this register before entering any low-power mode.</p> <p>Table 4-48: GPIO3 Low Power Wakeup Enable Registers </p> GPIO3 Low Power Wakeup Enable PWRSEQ_LPWKEN3 [0x0020] Bits Name Access Reset Description 31:2 - RO 0 Reserved 1:0 en R/W1C 0 GPIO3 Pin Wakeup Interrupt Enable     Setting a GPIO3 pin\u2019s bit in this register causes an interrupt to be generated that wakes up the device from any low-power mode to ACTIVE. A wake-up event sets the corresponding GPIO3\u2019s bit in the PWRSEQ_LPWKST3 register, enabling the determination of which GPIO3 pin triggered the wake-up event. Bits corresponding to unimplemented GPIO are ignored. <p>Note: To enable the MAX78000 to wake up from a low-power mode on a GPIO pin transition, first set the GPIO wake-up enable register bit GCR_PM.gpio_we = 1.</p> <p>Table 4-49: Low Power Peripheral Wakeup Status Flags </p> Low Power Peripheral Wakeup Status Flags PWRSEQ_LPPWST [0x0030] Bits Name Access Reset Description 31:18 - RO 0 Reserved 17 reset R/W1C 0 Reset Detected Wakeup Flag       This field is set when an external reset caused the wake-up event.      16 backup R/W1C 0 BACKUP Mode Wakeup Flag       This field is set when the device wakes up from BACKUP.      15:5 - RO 0 Reserved 4 comp0 R/W1C 0 Comparator 0 Wakeup Flag       This field is set if the wake-up event was the result of a comparator 0 trigger event.      3:0 - RO 0 Reserved <p>Table 4-50: Low Power Peripheral Wakeup Enable Registers </p> Low Power Peripheral Wakeup Enable PWRSEQ_LPPWEN [0x0034] Bits Name Access Reset Description 31:27 - RO 0 Reserved 26 lpcomp R/W 0 Low Power Comparator Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the LPCOMPn interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      25 spi1 R/W 0 SPI1 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the SPI1 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      24 i2s R/W 0 I2S Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the I2S interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      23 i2c2 R/W 0 I2C2 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the I2C2 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      22 i2c1 R/W 0 I2C1 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the I2C1 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      21 i2c0 R/W 0 I2C0 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the I2C0 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      20 uart3 R/W 0 LPUART0 (UART3) Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from LPUART0 (UART3) interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      19 uart2 R/W 0 UART2 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the UART2 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      18 uart1 R/W 0 UART1 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the UART1 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      17 uart0 R/W 0 UART0 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the UART0 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      16 tmr5 R/W 0 LPTMR1 (TMR5) Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the LPTMR1 (TMR5) interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      15 tmr4 R/W 0 LPTMR1 (TMR4) Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the LPTMR1 (TMR4) interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      14 tmr3 R/W 0 TMR3 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the TMR3 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      13 tmr2 R/W 0 TMR2 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the TMR2 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      12 tmr1 R/W 0 TMR1 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the TMR1 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      11 tmr0 R/W 0 TMR0 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the TMR0 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      10 cpu1 R/W 0 CPU1 (RV32) Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the RV32 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      9 wdt1 R/W 0 WDT1 (LPWDT0) Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the WDT1 (LPWDT0) interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      8 wdt0 R/W 0 WDT0 Interrupt Wakeup Enable       Set this field to 1 to enable wake-up events from the WDT0 interrupt.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      7:5 - RO 0 Comparator 0 Wakeup Enable       Set this field to 1 to enable wake-up events from Comparator 0. Comparator 0 can wake the device up from SLEEP, LPM, UPM, STANDBY, and BACKUP.          0: Disable wake-up on interrupt     1: Enable wake-up on interrupt      3:0 - RO 0 Reserved <p>Table 4-51: Low Power General Purpose 0 Register </p> Low Power General Purpose 0 PWRSEQ_GP0 [0x0048] Bits Name Access Reset Description 31:0 - R/W 0x1000 0000 General Purpose Field        This register can be used as a general-purpose register by software and retains the contents during SLEEP, LPM, UPM, STANDBY, and BACKUP. <p>Table 4-52: Low Power General Purpose 1 Register </p> Low Power General Purpose 1 PWRSEQ_GP1 [0x004C] Bits Name Access Reset Description 31:0 - R/W 0x1000 0000 General Purpose Field        This register can be used as a general-purpose register by software and retains the contents during SLEEP, LPM, UPM, STANDBY, and BACKUP."},{"location":"system-power-clocks-reset/#trim-system-initialization-registers-trimsir","title":"Trim System Initialization Registers (TRIMSIR)","text":"<p>See Table 3-3 for the base address of this peripheral/module. See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Note: The TRIMSIR registers are reset only on a POR. System reset, soft reset, and peripheral reset do not affect the TRIMSIR register values.</p> <p>Table 4-53: Trim System Initialization Register Summary </p> Offset Register Name [0x0008] TRIMSIR_RTC RTC Trim System Initialization Register [0x0034] TRIMSIR_SIMO System Initialization Register [0x003C] TRIMSIR_IPOLO System Initialization Function Status Register [0x0040] TRIMSIR_CTRL Control Trim System Initialization Register [0x0044] TRIMSIR_INRO INRO Trim System Initialization Register"},{"location":"system-power-clocks-reset/#trim-system-initialization-register-details","title":"TRIM System Initialization Register Details","text":"<p>Table 4-54: RTC Trim System Initialization Register </p> RTC Trim System Initialization TRIMSIR_RTC [0x0008] Bits Name Access Reset Description 31:0 lock RO * LockThis register is read-only if this field is set to 1, and the RTC X1 and RTC X2 fields cannot be modified. 30:26 - RO 0 Reserved 25:21 x2trim R/W* 0 RTC X2 TrimThe X2 trim setting for the RTC. <p>Note: If TRIMSIR_RTC.lock is set to 1, this field is read-only.</p> 20:16 x1trim R/W* 0 RTC X1 TrimThe X1 trim setting for the RTC. <p>Note: If TRIMSIR_RTC.lock is set to 1, this field is read-only.</p> 15:0 - RO 0 Reserved <p>Table 4-55: SIMO Trim System Initialization Register </p> SIMO System Initialization TRIMSIR_SIMO [0x0034] Bits Name Access Reset Description 31:3 - RO 0 Reserved 2:0 clkdiv R/W 1 SIMO Clock DivideThis field selects the SIMO clock divisor. The SIMO uses the INRO as its input clock.             0: INRO/1            1: INRO/16            2: Reserved for Future Use            3: INRO/32            4: Reserved for Future Use            5: INRO/64            6: Reserved for Future Use            7: INRO/128         <p>Table 4-56: IPO Low Trim System Initialization Register </p> IPO Trim Low System Initialization TRIMSIR_IPOLO [0x003C] Bits Name Access Reset Description 31:8 - RO 0 Reserved 7:0 ipo_limitlo RO See Description IPO Low Trim LimitThis field contains the low trim limit for the IPO.  <p>Table 4-57: Control Trim System Initialization Register </p> Control System Initialization TRIMSIR_CTRL [0x0040] Bits Name Access Reset Description 31:29 inro_trim R/W See Description INRO Clock TrimThis field contains the trim for the INRO when set to 8KHz. 28:26 - RO 0 Reserved 25:24 inro_sel R/W 2 INRO Clock SelectThis field selects the INRO frequency.         0: 8KHz        1: 16KHz        2: 30KHz (Power-On Reset default)        3: Reserved for Future Use         23:15 ipo_limithi R/W 0x1FF IPO High Trim LimitThis field contains the high limit for the IPO.  14:8 vdda_limithi R/W 0x78 V<sub>DDA</sub> High Trim Limit        This field is the high trim limit for V<sub>DDA</sub>. 7 - RO 0 Reserved 6:0 vdda_limitlo R/W 0x64 V<sub>DDA</sub> Low Trim Limit        This field is the low trim limit for V<sub>DDA</sub>. <p>Table 4-58: INRO Trim System Initialization Register </p> INRO System Initialization TRIMSIR_INRO [0x0044] Bits Name Access Reset Description 31:8 - RO 0 Reserved 7:6 lpclksel R/W 2 INRO Low Power Mode Clock Select        This field selects the INRO clock frequency for LPM operation.         0: 8KHz        1: 16KHz        2: 30KHz (POR default)        3: Reserved for Future Use         5:3 trim30k R/W 0 INRO 30KHz TrimThis field contains the trim for the INRO when set to 30KHz.  2:0 trim16k R/W 0 INRO 16KHz TrimThis field contains the trim for the INRO when set to 16KHz."},{"location":"system-power-clocks-reset/#global-control-registers-gcr","title":"Global Control Registers (GCR)","text":"<p>See Table 3-3 for the base address of this peripheral/module. See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Note: The GCR are only reset on a system reset or POR. A soft reset or peripheral reset does not affect these registers.</p> <p>Table 4-59: Global Control Register Summary </p> Offset Register Name [0x0000] GCR_SYSCTRL System Control Register [0x0004] GCR_RST0 Reset Register 0 [0x0008] GCR_CLKCTRL Clock Control Register [0x000C] GCR_PM Power Management Register [0x0018] GCR_PCLKDIV Peripheral Clocks Divisor [0x0024] GCR_PCLKDIS0 Peripheral Clocks Disable 0 [0x0028] GCR_MEMCTRL Memory Clock Control [0x002C] GCR_MEMZ Memory Zeroize Register [0x0040] GCR_SYSST System Status Flags [0x0044] GCR_RST1 Reset Register 1 [0x0048] GCR_PCLKDIS1 Peripheral Clocks Disable 1 [0x004C] GCR_EVENTEN Event Enable Register [0x0050] GCR_REVISION Revision Register [0x0054] GCR_SYSIE System Status Interrupt Enable [0x0064] GCR_ECCERR Error Correction Coding Error Register [0x0068] GCR_ECCCED Error Correction Coding Correctable Error Detected [0x006C] GCR_ECCIE Error Correction Coding Interrupt Enable Register [0x0070] GCR_ECCADDR Error Correction Coding Error Address Register [0x0080] GCR_GPR0 General Purpose Register 0"},{"location":"system-power-clocks-reset/#global-control-register-details-gcr","title":"Global Control Register Details (GCR)","text":"<p>Table 4-60: System Control Register </p> System Control GCR_SYSCTRL [0x0000] Bits Name Access Reset Description 31:18 - RO 0 Reserved 17:16 ovr R/W 0b10 Operating Voltage Range        Set this field to match the V<sub>COREA</sub> voltage to enable the on-chip RAM to operate at the optimal timing range.         0b00: 0.9V \u00b1 10%        0b01: 1.0V \u00b1 10%        0b10: 1.1V \u00b1 10%        0b11: Reserved for Future Use        15 chkres R 0 ROM Checksum Calculation Pass/Fail        This field is the result after setting the GCR_SYSCTRL.cchk bit.         This bit is only valid after the ROM checksum is complete and GCR_SYSCTRL.cchk is cleared.               0: Pass        1: Fail         14 swd_dis R/W 0 Serial Wire Debug Disable        This bit is used to disable the serial wire debug interface.                    0: Enabled           1: Disabled                Note: This bit is only writeable if the flash is not factory locked or if the GCR_SYSST.icelock bit is 0 and the GCR_SYSCTRL.romdone bit is 1.        13 cchk R/W 0 Calculate ROM Checksum       This bit is self-clearing when the ROM checksum calculation is complete, and the result is available at bit GCR_SYSCTRL.chkres. Writing a 0 has no effect.                    0: No operation           1: Start ROM checksum calculation          12 romdone DNM 1 ROM Start Code Status       Reserved, Do Not Modify        11:7 - RO 0 Reserved 6 icc0_flush R/W 0 ICC0 Cache Flush       Write 1 to flush the code cache and the instruction buffer for the CM4. This bit is automatically cleared to 0 when the flush is complete. Writing 0 has no effect and does not stop a cache flush in progress.                    0: Normal operation           1: Flush the contents of the ICC0 cache.          5:1 - RO 1 Reserved 0 bstapen DNM * Boundary Scan Tap Enable       This field's reset value matches GCR_SYSST.icelock. Do not modify.        <p>Table 4-61: Reset Register 0 </p> Reset 0 GCR_RST0 [0x0004] Bits Name Access Reset Description 31 sys R/W 0 System Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.      See System Reset for additional information.             0: Normal operation           1: Initiate reset        30 periph R/W 0 Peripheral Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset            Note: Watchdog timers, GPIO ports, the AoD, RAM retention, and the GCR are unaffected.      See Table 4-5 for additional information.      29 soft R/W 0 Soft Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.      See Soft Reset for additional information.            0: Normal operation           1: Initiate reset        28 uart2 R/W 0 UART2 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        27 - R/W 0 Reserved 28 uart2 R/W 0 UART2 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        28 uart2 R/W 0 UART2 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        27 - R/W 0 Reserved 26 adc R/W 0 ADC Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        25 cnn R/W 0 CNN Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        24 trng R/W 0 TRNG Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        17 rtc R/W 0 RTC Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        16 i2c0 R/W 0 I2C0 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        15:14 - RO 0 Reserved 13 spi1 R/W 0 SPI1 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        12 uart1 R/W 0 UART1 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        11 uart0 R/W 0 UART0 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        10:9 - RW 0 Reserved 8 tmr3 R/W 0 TMR3 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        7 tmr2 R/W 0 TMR2 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        6 tmr1 R/W 0 TMR1 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        5 tmr0 R/W 0 TMR0 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        4 - RO - Reserved 3 gpio1 R/W 0 GPIO1 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        2 gpio0 R/W 0 GPIO0 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        1 wdt0 R/W 0 Watchdog Timer 0 Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        0 dma R/W 0 DMA Access Block Reset     Write 1 to reset. This field is cleared by hardware when the reset is complete.            0: Normal operation           1: Initiate reset        <p>Table 4-62: Clock Control Register </p> Clock Control GCR_CLKCTRL [0x0008] Bits Name Access Reset Description 31:30 - DNM 0b10 Reserved, Do Not Modify 29 inro_rdy - 0 8kHz Internal Nano-Ring Oscillator (INRO) Ready Status            0: Not ready or not enabled.           1: Oscillator ready.        28 ibro_rdy R 0 7.3728MHz Internal Baud Rate Oscillator (IBRO) Ready Status            0: Not ready.           1: Oscillator ready.        27 ipo_rdy R 0 100MHz Internal Primary Oscillator (IPO) Ready Status            0: Not ready or not enabled.           1: Oscillator ready.        26 iso_rdy R 0 60MHz Internal Secondary Oscillator (ISO) Ready Status            0: Not ready or not enabled.           1: Oscillator ready.        25 ertco_rdy R 0 32.768kHz External RTC Oscillator (ERTCO) Ready Status            0: Not ready or not enabled.           1: Oscillator ready.        24:22 - RO 0 Reserved 21 ibro_vs R/W 0 7.3728MHz IBRO Power Supply Select            0: IBRO is powered from V<sub>COREA</sub>           1: IBRO is powered using a dedicated 1V regulated internal supply        20 ibro_en RO 1 7.3728MHz IBRO Enable     The IBRO is always enabled.            1: Enabled and ready when GCR_CLKCTRL.ibro_rdy = 1.        19 ipo_en R/W 0 100MHz IPO Enable            0: Disabled           1: Enabled and ready when GCR_CLKCTRL.ipo_rdy = 1.        18 iso_en R/W 1 60MHz ISO Enable     Set this field to 0 to disable the ISO. The ISO is the System Oscillator (SYS_OSC) after a POR or System Reset.            0: Disabled           1: Enabled and ready when GCR_CLKCTRL.iso_rdy = 1        17 ertco_en R/W 0 32.768kHz ERTCO Enable            0: Disabled if the RTC_CTRL.en field is also set to 0.           1: Enabled and ready when GCR_CLKCTRL.ertco_rdy = 1, regardless of the state of the RTC_CTRL.en field.        16:14 - RO 0 Reserved 13 sysclk_rdy R 0 SYS_OSC Select Ready     When SYS_OSC is changed by modifying GCR_CLKCTRL.sysclk_sel, there is a delay until the switchover is complete. This bit is cleared until the switchover completes.            0: Switch to new clock source not yet complete.           1: SYS_OSC is the clock source selected in GCR_CLKCTRL.sysclk_sel.        12 - RO 0 Reserved 11:9 sysclk_sel R/W 0 System Clock Source Select     Selects the system oscillator (SYS_OSC) used as the system clock (SYS_CLK) source.      Modifying this field clears GCR_CLKCTRL.sysclk_rdy immediately.            0: ISO (POR and system reset default)           1: Reserved           2: Reserved           3: INRO           4: IPO           5: IBRO           6: ERTCO           7: External Clock, EXT_CLK, P0.3, AF1        8:6 sysclk_div R/W 0 System Clock Prescaler     Sets the divider for generating SYS_CLK from the selected SYS_OSC as shown in the following equation:      $$     \\text{SYS_CLK} = \\frac{\\text{SYS_OSC}}{2^{\\text{sysclk_div}}}     $$      Note: Valid values are from 0 to 7 for sysclk_div.      5:0 - RO 8 Reserved <p>Table 4-63: Power Management Register </p> Power Management GCR_PM [0x000C] Bits Name Access Reset Description 31:18 - RO 0 Reserved 17 ibro_pd R/W 1 IBRO Power Down LPM       Set this field to 1 to power down the IBRO when entering LPM.            0: IBRO is powered on during LPM           1: IBRO is powered off during LPM 16 ipo_pd R/W 1 IPO Power Down LPM       Set this field to 1 to power down the IPO when entering LPM.            0: IPO is powered on during LPM           1: IPO is powered off during LPM 15 iso_pd R/W 1 ISO Power Down LPM       Set this field to 1 to power down the ISO when entering LPM.            0: ISO is powered on during LPM           1: ISO is powered off during LPM 14:10 - DNM 0b11100 Reserved 9 aincomp_we R/W 0 Analog Input Comparator Wakeup Enable     This bit enables the Analog Input Comparator interrupt to wake the device from SLEEP, LPM, or BACKUP.      8 - RO 0 Reserved 7 wut_we R/W 0 Wake-Up Timer Enable       Set this field to 1 to enable the wake-up timer as a wake-up source. The wake-up timer wakes the device from SLEEP, LPM, or BACKUP.            0: Wake-up source disabled           1: Wake-up source enabled        6 - RO 0 Reserved 5 rtc_we R/W 0 RTC Alarm Wakeup Enable       Set this field to 1 to enable an RTC alarm to wake the device. The RTC alarm wakes the device from SLEEP, LPM, or BACKUP.            0: Wakeup source disabled           1: Wakeup source enabled        4 gpio_we R/W 0 GPIO Wake-Up Enable       Set this field to 1 to enable all GPIO pins as potential wake-up sources. Any GPIO configured for wake-up wakes the device from SLEEP, LPM, or BACKUP.            0: Wake-up source disabled           1: Wake-up source enabled        3:0 mode R/W 0 Operating Mode     This field controls the operating mode of the device.            0: ACTIVE           1: SLEEP           2: STANDBY           3: Reserved           4: BACKUP           5-7: Reserved           8: LPM (CM4 deep sleep)           9: UPM           10: PDM           11-15: Reserved        <p>Table 4-64: Peripheral Clock Divisor Register </p> Peripheral Clocks Divisor GCR_PCLKDIV [0x0018] Bits Name Access Reset Description 31:18 - RO - Reserved 17 cnnclksel R/W 0 CNN Peripheral Clock Select     Set this field to select the clock source for the CNN peripheral clock:      $$     f_{\\text{CNN_Clock}}     $$                 0: PCLK           1: ISO        16:14 cnnclkdiv R/W 0 CNN Peripheral Clock Frequency Divider     This field is used as a divider of the CNN peripheral clock. The CNN peripheral clock,     $$     f_{\\text{CNN_Clock}}     $$     is selected using the field GCR_PCLKDIV.cnnclksel.            0: CNN_Clock / 2           1: CNN_Clock / 4           2: CNN_Clock / 8           3: CNN_Clock / 16           4-7: CNN_Clock / 1        13:10 adcfrq R/W 0 ADC Peripheral Clock Frequency Select     This field configures the frequency of the ADC peripheral clock from the PCLK.            0: Reserved            1: Reserved            2-15:            $$            f_{\\text{adc_clock}} = \\frac{f_{\\text{PCLK}}}{\\text{adcfrq}}            $$             9:0 - RO - Reserved <p>Table 4-65: Peripheral Clock Disable Register 0 </p> Peripheral Clocks Disable 0 GCR_PCLKDIS0 [0x0024] Bits Name Access Reset Description 31:30 - R/W 1 Reserved 29 pt R/W 1 Pulse Train Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled.           1: Clock disabled        28 i2c1 R/W 1 I2C1 Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        27:26 - RO 1 Reserved 25 cnn R/W 1 CNN Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        24 - RO 1 Reserved 23 adc R/W 1 ADC Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        22:19 - RO 1 Reserved 18 tmr3 R/W 1 TMR3 Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        17 tmr2 R/W 1 TMR2 Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        16 tmr1 R/W 1 TMR1 Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        15 tmr0 R/W 1 TMR0 Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        14 - RO 1 Reserved 13 i2c0 R/W 1 I2C0 Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        12:11 - RO 1 Reserved 10 uart1 R/W 1 UART1 Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        9 uart0 R/W 1 UART0 Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        8:7 - RO 0b11 Reserved 6 spi1 R/W 1 SPI1 Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        5 dma R/W 1 DMA Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        4:2 - RO 0b11 Reserved 1 gpio1 R/W 1 GPIO1 Port and Pad Logic Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        0 gpio0 R/W 1 GPIO0 Port and Pad Logic Clock Disable       Disabling a clock disables functionality while also saving power. Reads and writes to peripheral registers are disabled. Peripheral register states are retained.            0: Clock enabled           1: Clock disabled        <p>Table 4-66: Memory Clock Control Register </p> Memory Clock Control GCR_MEMCTRL [0x0028] Bits Name Access Reset Description 31:17 - RO 0 Reserved 16 sysram0ecc R/W 0 Sysram0 ECC Enable       Set this field to 1 to enable ECC for sysram0.            0: Sysram0 active, ECC disabled.           1: Sysram0 active, ECC enabled.        15:3 - RO 0 Reserved 2:0 fws R/W 5 Program Flash Wait States       This field sets the number of wait-state cycles per flash memory read access.            0 \u2013 7: Number of flash code access wait states Note: For the IPO and ISO clocks, the minimum wait state is 2. Note: For all other clock sources, the minimum wait state is 0.  <p>Table 4-67: Memory Zeroize Control Register </p> Memory Zeroize GCR_MEMZ [0x002C] Bits Name Access Reset Description 31:7 - RO - Reserved 6 icc1 R/W1O 0 ICC1 Zeroization       Write 1 to initiate the operation. This field is automatically cleared by hardware on completion.            0: Operation complete.           1: Operation in progress.        5 icc0 R/W1O 0 ICC0 Zeroization       Write 1 to initiate the operation. This field is automatically cleared by hardware on completion.            0: Normal operation           1: Initiate zeroization        4 sysram0ecc R/W1O 0 Sysram0 ECC Zeroization       Write 1 to initiate the operation. This field is automatically cleared by hardware on completion.            0: Normal operation           1: Initiate zeroization        3 ram3 R/W1O 0 Sysram3 Zeroization       Write 1 to initiate the operation. This field is automatically cleared by hardware on completion.            0: Normal operation           1: Initiate zeroization        2 ram2 R/W1O 0 Sysram2 Zeroization       Write 1 to initiate the operation. This field is automatically cleared by hardware on completion.            0: Normal operation           1: Initiate zeroization        1 ram1 R/W1O 0 Sysram1 Zeroization       Write 1 to initiate the operation. This field is automatically cleared by hardware on completion.            0: Normal operation           1: Initiate zeroization        0 ram0 R/W1O 0 Sysram0 Zeroization       Write 1 to initiate the operation. This field is automatically cleared by hardware on completion.            0: Normal operation           1: Initiate zeroization        <p>Table 4-68: System Status Flag Register </p> System Status Flag GCR_SYSST [0x0040] Bits Name Access Reset Description 31:1 - RO 0 Reserved 0 icelock R 0 Arm ICE Lock Status Flag        0: Arm ICE is unlocked (enabled)       1: Arm ICE is locked (disabled)        <p>Table 4-69: Reset Register 1 </p> Reset 1 GCR_RST1 [0x0044] Bits Name Access Reset Description 31 cpu1 RO 0 CPU1 (RV32) Reset         Write 1 to initiate the reset operation.          0: Normal operation         1: Initiate reset          30:26 - RO 0 Reserved 25 simo R/W 0 Single Inductor Multiple Output Block Reset         Write 1 to initiate the reset operation.          0: Normal operation         1: Initiate reset          24 dvs R/W 0 Dynamic Voltage Scaling Controller Reset         Write 1 to initiate the operation.          0: Normal operation         1: Initiate reset          23:21 - RO 0 Reserved 20 i2c2 R/W 0 I2C2 Reset         Write 1 to initiate the operation.          0: Normal operation         1: Initiate reset          19 i2s R/W 0 Audio Interface Reset         Write 1 to initiate the operation.          0: Normal operation         1: Initiate reset          18:17 - R/W 0 Reserved 16 smphr R/W 0 Semaphore Block Reset         Write 1 to initiate the operation.          0: Normal operation         1: Initiate reset          15:12 - R/W - Reserved 11 spi0 R/W 0 SPI0 Reset         Write 1 to initiate the operation.          0: Normal operation         1: Initiate reset          10 aes R/W 0 AES Block Reset         Write 1 to initiate the operation.          0: Normal operation         1: Initiate reset          9 crc R/W 0 CRC Reset         Write 1 to initiate the operation.          0: Normal operation         1: Initiate reset          8 - R/W 0 Reserved 7 owm R/W 0 1-Wire Reset         Write 1 to initiate the operation.         0: Normal operation         1: Initiate reset      6:2 - RO 0 Reserved 1 pt R/W 0 Pulse Train Reset         Write 1 to initiate the operation.          0: Normal operation         1: Initiate reset          0 i2c1 R/W 0 I2C1 Reset         Write 1 to initiate the operation.          0: Normal operation         1: Initiate reset          <p>Table 4-70: Peripheral Clock Disable Register 1 </p> Peripheral Clock Disable 1 GCR_PCLKDIS1 [0x0048] Bits Name Access Reset Description 31 cpu1 R/W 1 CPU1 (RV32 Clock Disable)         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled         1: Disabled          30:28 - R/W 1 Reserved 27 wdt0 R/W 1 Watchdog Timer 0 Disable         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled         1: Disabled          26:25 - R/W 1 Reserved 24 i2c2 R/W 1 I2C2 Clock Disable         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled         1: Disabled          23 i2s0 R/W 1 I2S Audio Interface Clock Disable         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled         1: Disabled          22:17 - R/W 1 Reserved 16 spi0 R/W 1 SPI0 Clock Disable         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled.         1: Disabled.          15 aes R/W 1 AES Block Clock Disable         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled.         1: Disabled.          14 crc R/W 1 CRC Clock Disable         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled.         1: Disabled.          13 owm R/W 1 1-Wire Clock Disable         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled.         1: Disabled.          12:10 - R/W1 1 Reserved 9 smphr R/W 1 Semaphore Block Clock Disable         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled.         1: Disabled.          8:3 - R/W1 1 Reserved 2 trng R/W 1 TRNG Clock Disable         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled.         1: Disabled.          1 uart2 R/W 1 UART2 Clock Disable         Disabling the clock disables functionality while also saving power. Associated register states are retained but read and write access is blocked.          0: Enabled.         1: Disabled.          0 - R/W1 1 Reserved <p>Table 4-71: Event Enable Register </p> Event Enable GCR_EVENTEN [0x004C] Bits Name Access Reset Description 31:3 - RO 0 Reserved 2 tx R/W 0 CPU0 (CM4) TXEV Event Enable         A TXEV event wakes the CM4 from a low-power mode entered with a WFE instruction when this bit is set.          0: Disabled         1: Enabled          1 - RO 0 Reserved 0 dma R/W 0 CPU0 (CM4) DMA CTZ Wake-Up Enable     Enables a DMA CTZ event to generate an RXEV interrupt to wake the CM4 from a low-power mode entered with a WFE instruction.          0: Disabled.         1: Enabled.        <p>Table 4-72: Revision Register </p> Revision GCR_REVISION [0x0050] Bits Name Access Reset Description 31:16 - RO 0 Reserved 15:0 revision R * Device Revision     This field returns the chip revision ID as packed BCD. For example, 0x00A1 would indicate the device is revision A1.      <p>Table 4-73: System Status Interrupt Enable Register </p> System Status Interrupt Enable GCR_SYSIE [0x0054] Bits Name Access Reset Description 31:1 - RO - Reserved 0 iceunlock R/W 0 Arm ICE Unlocked Interrupt Enable     Set this field to generate an interrupt if the GCR_SYSST.icelock is set.          0: Interrupt disabled         1: Interrupt enabled        <p>Table 4-74: Error Correction Coding Error Register </p> Error Correction Coding Error GCR_ECCERR [0x0064] Bits Name Access Reset Description 31:1 - RO - Reserved 0 ram0 R/W1C 0 Sysram0 ECC Error     This flag is set if an ECC error occurs in sysram0. Write to 1 to clear the flag.          0: No error         1: Error        <p>Table 4-75: Error Correction Coding Correctable Error Detected Register </p> Error Correction Coding Correctable Error Detected GCR_ECCCED [0x0068] Bits Name Access Reset Description 31:1 - RO 0 Reserved 0 ram0 R/W1C 0 sysram0 Correctable ECC Error Detected     When this bit is set, it indicates that there is a single correctable error in the sysram0 block. Write to 1 to clear the flag.          0: No error or uncorrectable error if GCR_ECCERR.ram0 is set to 1.         1: Correctable error detected.          <p>Table 4-76: Error Correction Coding Interrupt Enable Register </p> Error Correction Coding Interrupt Enable GCR_ECCIE [0x006C] Bits Name Access Reset Description 31:1 - RO 0 Reserved 0 ram0 R/W 0 Sysram0 ECC Error Interrupt Enable         Set this field to 1 to generate an interrupt if an ECC error condition occurs for sysram0.          0: Interrupt disabled         1: Interrupt enabled          <p>Table 4-77: Error Correction Coding Error Address Register </p> Error Correction Coding Error Address GCR_ECCADDR [0x0070] Bits Name Access Reset Description 31 tagramerr R 0 ECC Error Address/TAG RAM Error       Data depends on which block has reported the error. If sysram0, this bit represents the bit of the AMBA address of the read that produced the error. If the error is in the cache, this bit is set as follows:          0: No error         1: Tag Error. The error is in the TAG RAM.          30 tagrambank R 0 ECC Error Address/TAG RAM Error Bank       Data depends on which block has reported the error. If sysram0, this bit represents the bit of the AMBA address of the read that produced the error. If the error is from the cache, this bit is set as follows:          0: Error is in TAG RAM bank 0         1: Error is in TAG RAM bank 1.          29:16 tagramaddr R 0 ECC Error Address/TAG RAM Error Address         Data depends on which block has reported the error. If sysram0, this field represents the bits of the AMBA address of the read that produced the error. If the error is from the cache, this field is set as follows:          [TAG ADDRESS]: Represents the TAG RAM address.          15 dataramerr R 0 ECC Error Address/Cache Data RAM Error Address       Data depends on which block has reported the error. If sysram0, this bit represents the bit of the AMBA address of the read that produced the error. If the error is from the cache, this bit is set as follows:          0: No error         1: Cache data RAM error.          14 datarambank R 0 ECC Error Address/Cache Data RAM Error Bank       Data depends on which block has reported the error. If sysram0, this bit represents the bits of the AMBA address of the read that produced the error. If the error is from the cache, this bit is set as follows:          0: Error is in the cache data RAM bank 0         1: Error is in the cache data RAM bank 1.          13:0 dataramaddr R 0 ECC Error Address/Cache Data RAM Error Address       Data depends on which block has reported the error. This field represents the bits of the AMBA address of the read that produced the error.          [Data Address]: Represents the error address.          <p>Table 4-78: General Purpose 0 Register </p> General Purpose 0 GCR_GPR0 [0x0080] Bits Name Access Reset Description 31:0 - R/W 0 General Purpose Register      This field is a general-purpose register usable by software."},{"location":"system-power-clocks-reset/#system-initialization-registers-sir","title":"System Initialization Registers (SIR)","text":"<p>See Table 3-3 for the base address of this peripheral/module. See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Table 4-79: System Initialization Register Summary </p> Offset Register Name [0x0000] SIR_SISTAT System Initialization Status Register [0x0004] SIR_ADDR System Initialization Address Error Register [0x0100] SIR_FSTAT System initialization Function Status Register [0x0104] SIR_SFSTAT System initialization Security Function Status Register"},{"location":"system-power-clocks-reset/#system-initialization-register-details","title":"System Initialization Register Details","text":"<p>Table 4-80: System Initialization Status Register </p> System Initialization Status SIR_SISTAT [0x0000] Bits Name Access Reset Description 31:2 - RO 0 Reserved 1 crcerr RO See Description CRC Configuration Error Flag     This field is set by hardware during reset if an error in the device configuration is detected in the OTP memory.          0: Configuration valid.         1: Configuration invalid, the address of the configuration error is stored in the SIR_ADDR register. Note: If this field reads 1, a device error has occurred.          Please contact Analog Devices technical support for additional assistance, providing the address contained in the SIR_ADDR.erraddr. 0 magic RO See Description Configuration Valid Flag       This field is set to 1 by hardware during reset if the device configuration is valid.          0: OTP is not configured correctly.         1: OTP configuration valid.          Note: If this field reads 0, the device configuration is invalid, and a device error has occurred during system initialization.          Please contact Analog Devices technical support for additional assistance. <p>Table 4-81: System Initialization Address Error Register </p> System Initialization Status SIR_ADDR [0x0004] Bits Name Access Reset Description 31:0 erraddr RO 0 Configuration Error Address     If the SIR_SISTAT.crcerr field is set to 1, the value in this register is the address of the configuration failure.      <p>Table 4-82: System Initialization Function Status Register </p> System Initialization Function Status SIR_FSTAT [0x0100] Bits Name Access Reset Description 31:8 - RO 0 Reserved 7 smphr RO See Description Semaphore Block       This field indicates if the device includes the semaphore block.          0: Block is not available.         1: Block is available.          6:3 - RO 0 Reserved 2 adc RO See Description ADC         This field indicates if the device includes the ADC.          0: Block is not available.         1: Block is available.          1 - RO 0 Reserved 0 fpu RO See Description FPU         This field indicates if the device includes the FPU.          0: Block is not available.         1: Block is available.          <p>Table 4-83: System Initialization Security Function Status Register </p> System Initialization Security Function Status SIR_SFSTAT [0x0104] Bits Name Access Reset Description 31:4 - RO 0 Reserved 3 aes RO See Description AES         This field indicates if the device includes the AES block.          0: Block is not available.         1: Block is available.          2 trng RO See Description TRNG         This field indicates if the device includes the TRNG block.          0: Block is not available.         1: Block is available.          1:0 - RO 0 Reserved"},{"location":"system-power-clocks-reset/#function-control-registers-fcr","title":"Function Control Registers (FCR)","text":"<p>See Table 3-3 for the base address of this peripheral/module. See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Table 4-84: Function Control Register Summary </p> Offset Register Name [0x0000] FCR_FCTRL0 Function Control 0 Register (I<sub>2</sub>C Glitch Filter Control) [0x0004] FCR_AUTOCAL0 IPO Automatic Calibration 0 Register [0x0008] FCR_AUTOCAL1 IPO Automatic Calibration 1 Register [0x000C] FCR_AUTOCAL2 IPO Automatic Calibration 2 Register [0x0010] FCR_URVBOOTADDR RV32 Boot Address Register [0x0014] FCR_URVCTRL RV32 Control Register"},{"location":"system-power-clocks-reset/#function-control-register-details","title":"Function Control Register Details","text":"<p>Table 4-85: Function Control 0 Register </p> Function Control 0 FCR_FCTRL0 [0x0000] Bits Name Access Reset Description 31:26 - RO 0 Reserved 25 i2c2_scl_filter_en R/W 0 I2C2 SCL Glitch Filter Enable          0: Disabled         1: Enabled          24 i2c2_sda_filter_en R/W 0 I2C2 SDA Glitch Filter Enable          0: Disabled         1: Enabled          23 i2c1_scl_filter_en R/W 0 I2C1 SCL Glitch Filter Enable          0: Disabled         1: Enabled          22 i2c1_sda_filter_en R/W 0 I2C1 SDA Glitch Filter Enable          0: Disabled         1: Enabled          21 i2c0_scl_filter_en R/W 0 I2C0 SCL Glitch Filter Enable          0: Disabled         1: Enabled          20 i2c0_sda_filter_en R/W 0 I2C0 SDA Glitch Filter Enable          0: Disabled         1: Enabled          19:0 - RO 0 Reserved <p>Table 4-86: IPO Automatic Calibration 0 Register </p> IPO Automatic Calibration 0 FCR_AUTOCAL0 [0x0004] Bits Name Access Reset Description 31:23 trim RO 0 IPO Trim Value     Initial factory trim value for the IPO.      22:20 - RO Reserved 19:8 gain R/W 0 IPO Trim Adaptation Gain 7:5 - RO 0 Reserved 4 atomic R/W1 0 IPO Trim Atomic Start       Set this bit to start an automatic atomic calibration of the IPO.        The calibration runs for FCR_AUTOCAL2.runtime milliseconds.        This bit is automatically cleared by hardware when the calibration is complete.      3 invert R/W 0 IPO Trim Step Invert          0: IPO trim step is not inverted         1: IPO trim step is inverted          2 load R/* 0 IPO Initial Trim Load         Set this bit to load the initial trim value for the IPO from FCR_AUTOCAL1.initial.          This bit is cleared by hardware once the load is complete.      1 en R/W 0 IPO Automatic Calibration Continuous Mode Enable          0: Disabled         1: Enabled          0 acen R/W 0 IPO Trim Select          0: Use default trim         1: Use automatic calibration trim values          <p>Table 4-87: IPO Automatic Calibration 1 Register </p> IPO Automatic Calibration 1 FCR_AUTOCAL1 [0x0008] Bits Name Access Reset Description 31:9 - R/W 0 Reserved, Do Not Modify 8:0 initial R/W 0 IPO Trim Automatic Calibration Initial Trim     This field contains the initial trim setting for the IPO.      <p>Table 4-87: IPO Automatic Calibration 2 Register </p> IPO Automatic Calibration 2 FCR_AUTOCAL2 [0x000C] Bits Name Access Reset Description 31:21 - RO 0 Reserved 20:8 div R/W 0 IPO Trim Automatic Calibration Divide Factor     Target trim frequency for the IPO:      $$     f_{\\text{IPO}} = \\text{div} \\cdot 32768     $$     Note: Setting div to 0 is equivalent to setting div to 1. 7:0 runtime R/W 0 IPO Trim Automatic Calibration Run Time Atomic Run Time = runtime milliseconds <p>Table 4-89: RV32 Boot Address Register </p> RV32 Boot Address FCR_URVBOOTADDR [0x0010] Bits Name Access Reset Description 31:0 - R/W 0x2000 C000 RV32 Boot Address     Set this field to the boot address for the RV32 core.      The reset value for this register is 0x2001 C000, sysram3.      <p>Table 4-90: RV32 Control Register </p> RV32 Control FCR_URVCTRL [0x0014] Bits Name Access Reset Description 31:2 - R/W 0 Reserved 1 iflushen R/W 0 ICC1 Cache Flush Enable      Write 1 to flush the cache and the instruction buffer for the RV32 core.      This bit is automatically cleared to 0 when the flush is complete.      Writing 0 has no effect and does not stop a cache flush in progress.          0: ICC1 flush complete      1: Flush the contents of the ICC1 cache      0 memsel R/W 0 This field determines if sysram2 and sysram3 are shared between the CM4 and RV32 cores.      Set this field to 1 to set the RV32 core as the exclusive master for sysram2 and sysram3.      0: Sysram2 and Sysram3 are shared and accessible by both the CM4 and RV32 cores.      1: Sysram2 and Sysram3 are accessible by the RV32 core only.       Note: The application software must ensure that no accesses are occurring in Sysram2 or Sysram3 before setting this field to 1.      See section Multiprocessor Communications for information on using the semaphore peripheral for communication between the RV32 and CM4 cores."},{"location":"system-power-clocks-reset/#general-control-function-registers-gcfr","title":"General Control Function Registers (GCFR)","text":"<p>See Table 3-3 for the base address of this peripheral/module. See Table 1-1 for an explanation of the read and write access of each field. Unless specified otherwise, all fields are reset on a system reset, soft reset, POR, and the peripheral-specific resets.</p> <p>Table 4-91: General Control Function Register Summary </p> Offset Register Name [0x0000] GCFR_REG0 General Control Function Register 0 [0x0004] GCFR_REG1 General Control Function Register 1 [0x0008] GCFR_REG2 General Control Function Register 2 [0x000C] GCFR_REG3 General Control Function Register 3 <p>Table 4-92: General Control Function Register 0 </p> General Control Function 0 GCFR_REG0 [0x0000] Bits Name Access Reset Description 31:4 - RO 0 Reserved 3 cnnx16_3_pwr_en R/W 0 CNNx16_3 Power Domain Enable      0: Disabled      1: Enabled      2 cnnx16_2_pwr_en R/W 0 CNNx16_2 Power Domain Enable      0: Disabled      1: Enabled      1 cnnx16_1_pwr_en R/W 0 CNNx16_1 Power Domain Enable      0: Disabled      1: Enabled      0 cnnx16_0_pwr_en R/W 0 CNNx16_0 Power Domain Enable      0: Disabled      1: Enabled      <p>Table 4-93: General Control Function Register 1 </p> General Control Function 1 GCFR_REG1 [0x0004] Bits Name Access Reset Description 31:4 - RO 0 Reserved 3 cnnx16_3_ram_en R/W 0 CNNx16_3 RAM Power Enable      0: Disabled      1: Enabled      2 cnnx16_2_ram_en R/W 0 CNNx16_2 RAM Power Enable      0: Disabled      1: Enabled      1 cnnx16_1_ram_en R/W 0 CNNx16_1 RAM Power Enable      0: Disabled      1: Enabled      0 cnnx16_0_ram_en R/W 0 CNNx16_0 RAM Power Enable      0: Disabled      1: Enabled      <p>Table 4-94: General Control Function Register 2 </p> General Control Function 2 GCFR_REG2 [0x0008] Bits Name Access Reset Description 31:4 - RO 0 Reserved 3 cnnx16_3_iso R/W 0 CNNx16_3 Power Domain Isolation      0: Disabled      1: Enabled      2 cnnx16_2_iso R/W 0 CNNx16_2 Power Domain Isolation      0: Disabled      1: Enabled      1 cnnx16_1_iso R/W 0 CNNx16_1 Power Domain Isolation      0: Disabled      1: Enabled      0 cnnx16_0_iso R/W 0 CNNx16_0 Power Domain Isolation      0: Disabled      1: Enabled      <p>Table 4-95: General Control Function Register 3 </p> General Control Function 3 GCFR_REG3 [0x000C] Bits Name Access Reset Description 31:4 - RO 0 Reserved 3 cnnx16_3_rst R/W 0 CNNx16_3 Power Domain Reset     Write this field to 1 to initiate a power domain reset for the CNNx16_3.      0: Normal operation      1: Initiate reset      2 cnnx16_2_rst R/W 0 CNNx16_2 Power Domain Reset     Write this field to 1 to initiate a power domain reset for the CNNx16_2.       0: Normal operation      1: Initiate reset      1 cnnx16_1_rst R/W 0 CNNx16_1 Power Domain Reset     Write this field to 1 to initiate a power domain reset for the CNNx16_1.       0: Normal operation      1: Initiate reset      0 cnnx16_0_rst R/W 0 CNNx16_0 Power Domain Reset     Write this field to 1 to initiate a power domain reset for the CNNx16_0.       0: Normal operation      1: Initiate reset"}]}